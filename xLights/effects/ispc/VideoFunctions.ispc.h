//
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>

#if !defined(__cplusplus)
#if defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L)
#include <stdbool.h>
#else
typedef int bool;
#endif
#endif



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus
///////////////////////////////////////////////////////////////////////////
// Vector types with external visibility from ispc code
///////////////////////////////////////////////////////////////////////////

#ifndef __ISPC_VECTOR_uint8_t4__
#define __ISPC_VECTOR_uint8_t4__
#ifdef _MSC_VER
__declspec( align(4) ) struct uint8_t4 { uint8_t v[4]; };
#else
struct uint8_t4 { uint8_t v[4]; } __attribute__ ((aligned(4)));
#endif
#endif



#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif

#ifndef __ISPC_STRUCT_VideoData__
#define __ISPC_STRUCT_VideoData__
struct VideoData {
    uint16_t width;
    uint16_t height;
    uint16_t buffer_width;
    uint16_t buffer_height;
    int16_t yoffset;
    int16_t xoffset;
    int16_t ytail;
    int16_t xtail;
    bool transparentBlack;
    int16_t transparentBlackLevel;
    int16_t image_width;
    int16_t image_height;
    int32_t startx;
    int32_t starty;
    int32_t sampleSpacing;
    int8_t ch;
    uint8_t * image;
    void * bufferData;
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
#if defined(__cplusplus)
    extern void VideoEffectProcess(const struct VideoData &data, int32_t startIdx, int32_t endIdx, uint8_t4   * result);
#else
    extern void VideoEffectProcess(const struct VideoData *data, int32_t startIdx, int32_t endIdx, uint8_t4   * result);
#endif // VideoEffectProcess function declaraion
#if defined(__cplusplus)
    extern void VideoEffectProcessSample(const struct VideoData &data, int32_t startIdx, int32_t endIdx, uint8_t4   * result);
#else
    extern void VideoEffectProcessSample(const struct VideoData *data, int32_t startIdx, int32_t endIdx, uint8_t4   * result);
#endif // VideoEffectProcessSample function declaraion
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
