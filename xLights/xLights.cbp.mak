#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -fno-strict-aliasing -Wno-unused-local-typedefs -DwxUSE_UNICODE
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_LINUX_DEBUG = $(INC) -Iinclude -Isequencer -I../xLights -Ieffects -Ieffects/ -Imodels -Ieffects/assist -I../include -Imodels/ -Isupport -Ioutputs -IxLights -IxLights/models -I../dependencies/libxlsxwriter/include -I../include/sol2-3.2.2 -I../dependencies
CFLAGS_LINUX_DEBUG =  -Wall -g -std=gnu++20 `wx-config --version=3.3 --cflags` `pkg-config --cflags libavformat libavcodec libavutil  libswresample libswscale` `pkg-config --cflags gstreamer-1.0 gstreamer-video-1.0` `pkg-config --cflags lua53` -Winvalid-pch -DWX_PRECOMP -DLINUX -D__WXDEBUG__ -D__cdecl=""
RESINC_LINUX_DEBUG = $(RESINC)
RCFLAGS_LINUX_DEBUG = $(RCFLAGS)
LIBDIR_LINUX_DEBUG = $(LIBDIR)
LIB_LINUX_DEBUG = $(LIB)../lib/linux/libliquidfun.a ../dependencies/libxlsxwriter/lib/libxlsxwriter.a
LDFLAGS_LINUX_DEBUG =  -lGL -lGLU -lglut -ldl -lX11 -lcurl `pkg-config --libs libavformat libavcodec libavutil  libswresample libswscale` `pkg-config --libs log4cpp` `sdl2-config --libs` `wx-config --version=3.3 --libs std,media,gl,aui,propgrid` `pkg-config --libs gstreamer-1.0 gstreamer-video-1.0` `pkg-config --libs lua53` -lexpat -rdynamic -lz -lzstd -lwebp -lwebpdemux -lstdc++fs $(LDFLAGS)
OBJDIR_LINUX_DEBUG = .objs_debug
DEP_LINUX_DEBUG = 
OUT_LINUX_DEBUG = ../bin/xLights

INC_LINUX_RELEASE = $(INC) -Iinclude -Isequencer -I../xLights -Ieffects -Ieffects/ -Imodels -Ieffects/assist -I../include -Imodels/ -Isupport -Ioutputs -IxLights -IxLights/models -I../dependencies/libxlsxwriter/include -I../include/sol2-3.2.2 -I../dependencies
CFLAGS_LINUX_RELEASE = $(CFLAGS) -O2 -Wall -std=gnu++20 `wx-config --version=3.3 --cflags` `pkg-config --cflags gstreamer-1.0 gstreamer-video-1.0` `pkg-config --cflags libavformat libavcodec libavutil  libswresample libswscale` `pkg-config --cflags lua53` -Winvalid-pch -DWX_PRECOMP -DLINUX -DNDEBUG -D__cdecl='' -Wno-reorder -Wno-sign-compare -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unused-function -Wno-unknown-pragmas
RESINC_LINUX_RELEASE = $(RESINC)
RCFLAGS_LINUX_RELEASE = $(RCFLAGS) -Wno-reorder -Wno-sign-compare -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unused-function -Wno-unknown-pragmas
LIBDIR_LINUX_RELEASE = $(LIBDIR)
LIB_LINUX_RELEASE = $(LIB)../lib/linux/libliquidfun.a ../dependencies/libxlsxwriter/lib/libxlsxwriter.a
LDFLAGS_LINUX_RELEASE =  -lGL -lGLU -lglut -ldl -lX11 -lcurl `pkg-config --libs libavformat libavcodec libavutil  libswresample libswscale` `pkg-config --libs log4cpp` `sdl2-config --libs` `wx-config --version=3.3 --libs std,media,gl,aui,propgrid` `pkg-config --libs gstreamer-1.0 gstreamer-video-1.0` `pkg-config --libs lua53` -lexpat -rdynamic -lz -lzstd -lwebp -lwebpdemux -lstdc++fs $(LDFLAGS)
OBJDIR_LINUX_RELEASE = .objs_lr
DEP_LINUX_RELEASE = 
OUT_LINUX_RELEASE = ../bin/xLights

OBJ_LINUX_DEBUG = $(OBJDIR_LINUX_DEBUG)/models/SpinnerModel.o $(OBJDIR_LINUX_DEBUG)/models/SphereModel.o $(OBJDIR_LINUX_DEBUG)/models/SingleLineModel.o $(OBJDIR_LINUX_DEBUG)/models/Shapes.o $(OBJDIR_LINUX_DEBUG)/models/RulerObject.o $(OBJDIR_LINUX_DEBUG)/models/PolyPointScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/PolyLineModel.o $(OBJDIR_LINUX_DEBUG)/models/ObjectManager.o $(OBJDIR_LINUX_DEBUG)/models/Node.o $(OBJDIR_LINUX_DEBUG)/models/ThreePointScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/ViewObjectManager.o $(OBJDIR_LINUX_DEBUG)/models/ViewObject.o $(OBJDIR_LINUX_DEBUG)/models/TwoPointScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/TreeModel.o $(OBJDIR_LINUX_DEBUG)/models/MultiPointScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/TerrianObject.o $(OBJDIR_LINUX_DEBUG)/models/TerrainScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/SubModel.o $(OBJDIR_LINUX_DEBUG)/models/StarModel.o $(OBJDIR_LINUX_DEBUG)/models/DMX/Servo.o $(OBJDIR_LINUX_DEBUG)/models/IciclesModel.o $(OBJDIR_LINUX_DEBUG)/models/GridlinesObject.o $(OBJDIR_LINUX_DEBUG)/models/DMX/SkullConfigDialog.o $(OBJDIR_LINUX_DEBUG)/models/DMX/ServoConfigDialog.o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeatureDialog.o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeature.o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannelDialog.o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannel.o $(OBJDIR_LINUX_DEBUG)/models/Model.o $(OBJDIR_LINUX_DEBUG)/models/MultiPointModel.o $(OBJDIR_LINUX_DEBUG)/models/ModelScreenLocation.o $(OBJDIR_LINUX_DEBUG)/models/ModelManager.o $(OBJDIR_LINUX_DEBUG)/models/ModelGroup.o $(OBJDIR_LINUX_DEBUG)/models/WholeHouseModel.o $(OBJDIR_LINUX_DEBUG)/models/MeshObject.o $(OBJDIR_LINUX_DEBUG)/models/MatrixModel.o $(OBJDIR_LINUX_DEBUG)/models/ImageObject.o $(OBJDIR_LINUX_DEBUG)/models/ImageModel.o $(OBJDIR_LINUX_DEBUG)/outputs/TestPreset.o $(OBJDIR_LINUX_DEBUG)/outputs/SerialOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/RenardOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/PixelNetOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/OutputManager.o $(OBJDIR_LINUX_DEBUG)/outputs/Output.o $(OBJDIR_LINUX_DEBUG)/outputs/OpenPixelNetOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/OpenDMXOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/OPCOutput.o $(OBJDIR_LINUX_DEBUG)/preferences/EffectsGridSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/ColorManagerSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/CheckSequenceSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/BackupSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/outputs/xxxSerialOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/NullOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/xxxEthernetOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/serial.o $(OBJDIR_LINUX_DEBUG)/outputs/ZCPPOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/TwinklyOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/Controller.o $(OBJDIR_LINUX_DEBUG)/outputs/DDPOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerSerial.o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerNull.o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerEthernet.o $(OBJDIR_LINUX_DEBUG)/outputs/ArtNetOutput.o $(OBJDIR_LINUX_DEBUG)/models/WreathModel.o $(OBJDIR_LINUX_DEBUG)/models/WindowFrameModel.o $(OBJDIR_LINUX_DEBUG)/outputs/KinetOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/LorControllers.o $(OBJDIR_LINUX_DEBUG)/outputs/LorController.o $(OBJDIR_LINUX_DEBUG)/outputs/LOROutput.o $(OBJDIR_LINUX_DEBUG)/outputs/LOROptimisedOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/IPOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/GenericSerialOutput.o $(OBJDIR_LINUX_DEBUG)/outputs/E131Output.o $(OBJDIR_LINUX_DEBUG)/outputs/DMXOutput.o $(OBJDIR_LINUX_DEBUG)/effects/WarpPanel.o $(OBJDIR_LINUX_DEBUG)/effects/WarpEffect.o $(OBJDIR_LINUX_DEBUG)/effects/VideoPanel.o $(OBJDIR_LINUX_DEBUG)/effects/VideoEffect.o $(OBJDIR_LINUX_DEBUG)/effects/VUMeterPanel.o $(OBJDIR_LINUX_DEBUG)/effects/VUMeterEffect.o $(OBJDIR_LINUX_DEBUG)/effects/TwinklePanel.o $(OBJDIR_LINUX_DEBUG)/effects/TwinkleEffect.o $(OBJDIR_LINUX_DEBUG)/effects/TreePanel.o $(OBJDIR_LINUX_DEBUG)/effects/assist/SketchAssistPanel.o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasPictures.o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasMorph.o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasEmpty.o $(OBJDIR_LINUX_DEBUG)/effects/assist/SketchCanvasPanel.o $(OBJDIR_LINUX_DEBUG)/effects/TreeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/assist/PicturesAssistPanel.o $(OBJDIR_LINUX_DEBUG)/effects/assist/AssistPanel.o $(OBJDIR_LINUX_DEBUG)/effects/WavePanel.o $(OBJDIR_LINUX_DEBUG)/effects/WaveEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SpirographEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SpiralsPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SpiralsEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SnowstormPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SnowstormEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SnowflakesPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SnowflakesEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SketchPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SketchEffectDrawing.o $(OBJDIR_LINUX_DEBUG)/effects/StrobePanel.o $(OBJDIR_LINUX_DEBUG)/effects/TextPanel.o $(OBJDIR_LINUX_DEBUG)/effects/TextEffect.o $(OBJDIR_LINUX_DEBUG)/effects/TendrilPanel.o $(OBJDIR_LINUX_DEBUG)/effects/TendrilEffect.o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/DrawGLUtils.o $(OBJDIR_LINUX_DEBUG)/effects/StrobeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/StatePanel.o $(OBJDIR_LINUX_DEBUG)/effects/StateEffect.o $(OBJDIR_LINUX_DEBUG)/effects/SpirographPanel.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHead.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMotor.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxModel.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxImage.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxGeneral.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodlight.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodArea.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxDimmerAbility.o $(OBJDIR_LINUX_DEBUG)/models/DMX/Mesh.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkulltronix.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkull.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxShutterAbility.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo3D.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityWheel.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPresetAbility.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPanTiltAbility.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHeadAdv.o $(OBJDIR_LINUX_DEBUG)/models/BaseObject.o $(OBJDIR_LINUX_DEBUG)/models/ArchesModel.o $(OBJDIR_LINUX_DEBUG)/kiss_fft/tools/kiss_fftr.o $(OBJDIR_LINUX_DEBUG)/kiss_fft/kiss_fft.o $(OBJDIR_LINUX_DEBUG)/graphics/xlMesh.o $(OBJDIR_LINUX_DEBUG)/graphics/xlGraphicsAccumulators.o $(OBJDIR_LINUX_DEBUG)/graphics/xlFontInfo.o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlOGL3GraphicsContext.o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlGLCanvas.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityRGB.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityCMY.o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbility.o $(OBJDIR_LINUX_DEBUG)/models/CustomModel.o $(OBJDIR_LINUX_DEBUG)/models/CubeModel.o $(OBJDIR_LINUX_DEBUG)/models/CircleModel.o $(OBJDIR_LINUX_DEBUG)/models/ChannelBlockModel.o $(OBJDIR_LINUX_DEBUG)/models/CandyCaneModel.o $(OBJDIR_LINUX_DEBUG)/models/BoxedScreenLocation.o $(OBJDIR_LINUX_DEBUG)/xLightsTimer.o $(OBJDIR_LINUX_DEBUG)/xLightsMain.o $(OBJDIR_LINUX_DEBUG)/xLightsImportChannelMapDialog.o $(OBJDIR_LINUX_DEBUG)/xLightsApp.o $(OBJDIR_LINUX_DEBUG)/xLightsVersion.o $(OBJDIR_LINUX_DEBUG)/xlSlider.o $(OBJDIR_LINUX_DEBUG)/xlLockButton.o $(OBJDIR_LINUX_DEBUG)/xlGridCanvas.o $(OBJDIR_LINUX_DEBUG)/xlColourData.o $(OBJDIR_LINUX_DEBUG)/xlColorPickerFields.o $(OBJDIR_LINUX_DEBUG)/xlColorPicker.o $(OBJDIR_LINUX_DEBUG)/xlColorCanvas.o $(OBJDIR_LINUX_DEBUG)/xLightsXmlFile.o $(OBJDIR_LINUX_DEBUG)/tmGridCell.o $(OBJDIR_LINUX_DEBUG)/utils/string_utils.o $(OBJDIR_LINUX_DEBUG)/utils/ip_utils.o $(OBJDIR_LINUX_DEBUG)/utils/CurlManager.o $(OBJDIR_LINUX_DEBUG)/utils/Curl.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/Files.o $(OBJDIR_LINUX_DEBUG)/support/VectorMath.o $(OBJDIR_LINUX_DEBUG)/support/GridCellChoiceRenderer.o $(OBJDIR_LINUX_DEBUG)/support/FastComboEditor.o $(OBJDIR_LINUX_DEBUG)/support/EzGrid.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginWrapper.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginSummarisingAdapter.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginLoader.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginInputDomainAdapter.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginHostAdapter.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginChannelAdapter.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginBufferingAdapter.o $(OBJDIR_LINUX_DEBUG)/preferences/ViewSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectDropTarget.o $(OBJDIR_LINUX_DEBUG)/sequencer/Effect.o $(OBJDIR_LINUX_DEBUG)/sequencer/DragEffectBitmapButton.o $(OBJDIR_LINUX_DEBUG)/preferences/xLightsPreferences.o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectLayer.o $(OBJDIR_LINUX_DEBUG)/preferences/SequenceFileSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/RandomEffectsSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/OutputSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/preferences/OtherSettingsPanel.o $(OBJDIR_LINUX_DEBUG)/sequencer/tabSequencer.o $(OBJDIR_LINUX_DEBUG)/sequencer/Waveform.o $(OBJDIR_LINUX_DEBUG)/sequencer/UndoManager.o $(OBJDIR_LINUX_DEBUG)/sequencer/TimeLine.o $(OBJDIR_LINUX_DEBUG)/sequencer/SequenceElements.o $(OBJDIR_LINUX_DEBUG)/sequencer/RowHeading.o $(OBJDIR_LINUX_DEBUG)/sequencer/MainSequencer.o $(OBJDIR_LINUX_DEBUG)/sequencer/Element.o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectsGrid.o $(OBJDIR_LINUX_DEBUG)/wxWEBPHandler/imagwebp.o $(OBJDIR_LINUX_DEBUG)/wxModelGridCellRenderer.o $(OBJDIR_LINUX_DEBUG)/wxCheckedListCtrl.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/host-c.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/acsymbols.o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/RealTime.o $(OBJDIR_LINUX_DEBUG)/effects/SketchEffect.o $(OBJDIR_LINUX_DEBUG)/NodeSelectGrid.o $(OBJDIR_LINUX_DEBUG)/NewTimingDialog.o $(OBJDIR_LINUX_DEBUG)/MusicXML.o $(OBJDIR_LINUX_DEBUG)/MultiControllerUploadDialog.o $(OBJDIR_LINUX_DEBUG)/Mouse3DManager.o $(OBJDIR_LINUX_DEBUG)/ModelStateDialog.o $(OBJDIR_LINUX_DEBUG)/ModelRemap.o $(OBJDIR_LINUX_DEBUG)/ModelPreview.o $(OBJDIR_LINUX_DEBUG)/ModelGroupPanel.o $(OBJDIR_LINUX_DEBUG)/PerspectivesPanel.o $(OBJDIR_LINUX_DEBUG)/PathGenerationDialog.o $(OBJDIR_LINUX_DEBUG)/Parallel.o $(OBJDIR_LINUX_DEBUG)/PaletteMgmtDialog.o $(OBJDIR_LINUX_DEBUG)/OutputModelManager.o $(OBJDIR_LINUX_DEBUG)/ModelFaceDialog.o $(OBJDIR_LINUX_DEBUG)/OptionChooser.o $(OBJDIR_LINUX_DEBUG)/OpenGLShaders.o $(OBJDIR_LINUX_DEBUG)/NoteRangeDialog.o $(OBJDIR_LINUX_DEBUG)/NoteImportDialog.o $(OBJDIR_LINUX_DEBUG)/NodesGridCellEditor.o $(OBJDIR_LINUX_DEBUG)/LayoutGroup.o $(OBJDIR_LINUX_DEBUG)/LorConvertDialog.o $(OBJDIR_LINUX_DEBUG)/LinkJukeboxButtonDialog.o $(OBJDIR_LINUX_DEBUG)/LayoutUtils.o $(OBJDIR_LINUX_DEBUG)/LayoutPanel.o $(OBJDIR_LINUX_DEBUG)/LyricUserDictDialog.o $(OBJDIR_LINUX_DEBUG)/LayerSelectDialog.o $(OBJDIR_LINUX_DEBUG)/LORPreview.o $(OBJDIR_LINUX_DEBUG)/LOREdit.o $(OBJDIR_LINUX_DEBUG)/LMSImportChannelMapDialog.o $(OBJDIR_LINUX_DEBUG)/MatrixFaceDownloadDialog.o $(OBJDIR_LINUX_DEBUG)/ModelDimmingCurveDialog.o $(OBJDIR_LINUX_DEBUG)/ModelChainDialog.o $(OBJDIR_LINUX_DEBUG)/MetronomeLabelDialog.o $(OBJDIR_LINUX_DEBUG)/MediaImportOptionsDialog.o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiMessage.o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiFile.o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiEventList.o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiEvent.o $(OBJDIR_LINUX_DEBUG)/MIDI/Binasc.o $(OBJDIR_LINUX_DEBUG)/LyricsDialog.o $(OBJDIR_LINUX_DEBUG)/SevenSegmentDialog.o $(OBJDIR_LINUX_DEBUG)/SequenceViewManager.o $(OBJDIR_LINUX_DEBUG)/SequenceVideoPreview.o $(OBJDIR_LINUX_DEBUG)/SequenceVideoPanel.o $(OBJDIR_LINUX_DEBUG)/SequencePackage.o $(OBJDIR_LINUX_DEBUG)/SequenceData.o $(OBJDIR_LINUX_DEBUG)/SeqSettingsDialog.o $(OBJDIR_LINUX_DEBUG)/SeqFileUtilities.o $(OBJDIR_LINUX_DEBUG)/SeqExportDialog.o $(OBJDIR_LINUX_DEBUG)/StrandNodeNamesDialog.o $(OBJDIR_LINUX_DEBUG)/SuperStarImportDialog.o $(OBJDIR_LINUX_DEBUG)/SubModelsDialog.o $(OBJDIR_LINUX_DEBUG)/SubModelGenerateDialog.o $(OBJDIR_LINUX_DEBUG)/SubBufferPanel.o $(OBJDIR_LINUX_DEBUG)/SeqElementMismatchDialog.o $(OBJDIR_LINUX_DEBUG)/StartChannelDialog.o $(OBJDIR_LINUX_DEBUG)/SplashDialog.o $(OBJDIR_LINUX_DEBUG)/SpecialOptions.o $(OBJDIR_LINUX_DEBUG)/ShaderDownloadDialog.o $(OBJDIR_LINUX_DEBUG)/PreviewPane.o $(OBJDIR_LINUX_DEBUG)/RenderCache.o $(OBJDIR_LINUX_DEBUG)/RenderBuffer.o $(OBJDIR_LINUX_DEBUG)/Render.o $(OBJDIR_LINUX_DEBUG)/RenameTextDialog.o $(OBJDIR_LINUX_DEBUG)/RemapDMXChannelsDialog.o $(OBJDIR_LINUX_DEBUG)/Pixels.o $(OBJDIR_LINUX_DEBUG)/PixelTestDialog.o $(OBJDIR_LINUX_DEBUG)/PixelBuffer.o $(OBJDIR_LINUX_DEBUG)/PhonemeDictionary.o $(OBJDIR_LINUX_DEBUG)/SaveChangesDialog.o $(OBJDIR_LINUX_DEBUG)/SelectTimingsDialog.o $(OBJDIR_LINUX_DEBUG)/SelectPanel.o $(OBJDIR_LINUX_DEBUG)/SearchPanel.o $(OBJDIR_LINUX_DEBUG)/ScriptsDialog.o $(OBJDIR_LINUX_DEBUG)/RestoreBackupDialog.o $(OBJDIR_LINUX_DEBUG)/ResizeImageDialog.o $(OBJDIR_LINUX_DEBUG)/RenderProgressDialog.o $(OBJDIR_LINUX_DEBUG)/CheckboxSelectDialog.o $(OBJDIR_LINUX_DEBUG)/CharMapDialog.o $(OBJDIR_LINUX_DEBUG)/ChannelLayoutDialog.o $(OBJDIR_LINUX_DEBUG)/CachedFileDownloader.o $(OBJDIR_LINUX_DEBUG)/BulkEditSliderDialog.o $(OBJDIR_LINUX_DEBUG)/BulkEditFontPickerDialog.o $(OBJDIR_LINUX_DEBUG)/BulkEditControls.o $(OBJDIR_LINUX_DEBUG)/BulkEditComboDialog.o $(OBJDIR_LINUX_DEBUG)/BulkEditColourPickerDialog.o $(OBJDIR_LINUX_DEBUG)/ConvertDialog.o $(OBJDIR_LINUX_DEBUG)/ControllerModelDialog.o $(OBJDIR_LINUX_DEBUG)/ControllerConnectionDialog.o $(OBJDIR_LINUX_DEBUG)/ColoursPanel.o $(OBJDIR_LINUX_DEBUG)/ColourReplaceDialog.o $(OBJDIR_LINUX_DEBUG)/BufferSizeDialog.o $(OBJDIR_LINUX_DEBUG)/ColorPanel.o $(OBJDIR_LINUX_DEBUG)/ColorManager.o $(OBJDIR_LINUX_DEBUG)/ColorCurveDialog.o $(OBJDIR_LINUX_DEBUG)/ColorCurve.o $(OBJDIR_LINUX_DEBUG)/Color.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/message.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/status.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/sha1.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/server.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/response.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/request.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/pages.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonreader.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/context.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/connection.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/md5.o $(OBJDIR_LINUX_DEBUG)/__/xFade/wxLED.o $(OBJDIR_LINUX_DEBUG)/BufferPanel.o $(OBJDIR_LINUX_DEBUG)/BitmapCache.o $(OBJDIR_LINUX_DEBUG)/BatchRenderDialog.o $(OBJDIR_LINUX_DEBUG)/AutoLabelDialog.o $(OBJDIR_LINUX_DEBUG)/AudioManager.o $(OBJDIR_LINUX_DEBUG)/AlignmentDialog.o $(OBJDIR_LINUX_DEBUG)/AboutDialog.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonwriter.o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonval.o $(OBJDIR_LINUX_DEBUG)/GPURenderUtils.o $(OBJDIR_LINUX_DEBUG)/FontManager.o $(OBJDIR_LINUX_DEBUG)/FlickerFreeBitmapButton.o $(OBJDIR_LINUX_DEBUG)/FindDataPanel.o $(OBJDIR_LINUX_DEBUG)/FileConverter.o $(OBJDIR_LINUX_DEBUG)/FSEQFile.o $(OBJDIR_LINUX_DEBUG)/ExportSettings.o $(OBJDIR_LINUX_DEBUG)/ExportModelSelect.o $(OBJDIR_LINUX_DEBUG)/EmailDialog.o $(OBJDIR_LINUX_DEBUG)/KeyBindings.o $(OBJDIR_LINUX_DEBUG)/KeyBindingEditDialog.o $(OBJDIR_LINUX_DEBUG)/JukeboxPanel.o $(OBJDIR_LINUX_DEBUG)/JobPool.o $(OBJDIR_LINUX_DEBUG)/ImportPreviewsModelsDialog.o $(OBJDIR_LINUX_DEBUG)/EffectsPanel.o $(OBJDIR_LINUX_DEBUG)/IPEntryDialog.o $(OBJDIR_LINUX_DEBUG)/HousePreviewPanel.o $(OBJDIR_LINUX_DEBUG)/GenerateLyricsDialog.o $(OBJDIR_LINUX_DEBUG)/GenerateCustomModelDialog.o $(OBJDIR_LINUX_DEBUG)/DataLayer.o $(OBJDIR_LINUX_DEBUG)/DragColoursBitmapButton.o $(OBJDIR_LINUX_DEBUG)/DissolveTransitionPattern.o $(OBJDIR_LINUX_DEBUG)/Discovery.o $(OBJDIR_LINUX_DEBUG)/DimmingCurvePanel.o $(OBJDIR_LINUX_DEBUG)/DimmingCurve.o $(OBJDIR_LINUX_DEBUG)/CustomTimingDialog.o $(OBJDIR_LINUX_DEBUG)/CustomModelDialog.o $(OBJDIR_LINUX_DEBUG)/CopyFormat1.o $(OBJDIR_LINUX_DEBUG)/ConvertLogDialog.o $(OBJDIR_LINUX_DEBUG)/EffectAssist.o $(OBJDIR_LINUX_DEBUG)/EffectTreeDialog.o $(OBJDIR_LINUX_DEBUG)/EffectTimingDialog.o $(OBJDIR_LINUX_DEBUG)/EffectListDialog.o $(OBJDIR_LINUX_DEBUG)/EffectIconPanel.o $(OBJDIR_LINUX_DEBUG)/TabConvert.o $(OBJDIR_LINUX_DEBUG)/EditSubmodelAliasesDialog.o $(OBJDIR_LINUX_DEBUG)/EditAliasesDialog.o $(OBJDIR_LINUX_DEBUG)/DuplicateDialog.o $(OBJDIR_LINUX_DEBUG)/DragValueCurveBitmapButton.o $(OBJDIR_LINUX_DEBUG)/effects/LifeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/LinesEffect.o $(OBJDIR_LINUX_DEBUG)/effects/LightningPanel.o $(OBJDIR_LINUX_DEBUG)/effects/LightningEffect.o $(OBJDIR_LINUX_DEBUG)/effects/LifePanel.o $(OBJDIR_LINUX_DEBUG)/effects/LinesPanel.o $(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopePanel.o $(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/GuitarPanel.o $(OBJDIR_LINUX_DEBUG)/effects/GuitarEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MorphPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MorphEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MeteorsPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MeteorsEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MarqueePanel.o $(OBJDIR_LINUX_DEBUG)/effects/MarqueeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/LiquidPanel.o $(OBJDIR_LINUX_DEBUG)/effects/LiquidEffect.o $(OBJDIR_LINUX_DEBUG)/effects/FanEffect.o $(OBJDIR_LINUX_DEBUG)/effects/FireEffect.o $(OBJDIR_LINUX_DEBUG)/effects/FillPanel.o $(OBJDIR_LINUX_DEBUG)/effects/FillEffect.o $(OBJDIR_LINUX_DEBUG)/effects/FanPanel.o $(OBJDIR_LINUX_DEBUG)/effects/FirePanel.o $(OBJDIR_LINUX_DEBUG)/effects/FacesPanel.o $(OBJDIR_LINUX_DEBUG)/effects/FacesEffect.o $(OBJDIR_LINUX_DEBUG)/effects/FX.o $(OBJDIR_LINUX_DEBUG)/effects/EffectPanelUtils.o $(OBJDIR_LINUX_DEBUG)/effects/GlediatorPanel.o $(OBJDIR_LINUX_DEBUG)/effects/GlediatorEffect.o $(OBJDIR_LINUX_DEBUG)/effects/GarlandsPanel.o $(OBJDIR_LINUX_DEBUG)/effects/GarlandsEffect.o $(OBJDIR_LINUX_DEBUG)/effects/GalaxyPanel.o $(OBJDIR_LINUX_DEBUG)/effects/GalaxyEffect.o $(OBJDIR_LINUX_DEBUG)/effects/GIFImage.o $(OBJDIR_LINUX_DEBUG)/effects/FireworksPanel.o $(OBJDIR_LINUX_DEBUG)/effects/FireworksEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ShaderEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ServoPanel.o $(OBJDIR_LINUX_DEBUG)/effects/ServoEffect.o $(OBJDIR_LINUX_DEBUG)/effects/RipplePanel.o $(OBJDIR_LINUX_DEBUG)/effects/RippleEffect.o $(OBJDIR_LINUX_DEBUG)/effects/RenderableEffect.o $(OBJDIR_LINUX_DEBUG)/effects/PlasmaPanel.o $(OBJDIR_LINUX_DEBUG)/effects/PlasmaEffect.o $(OBJDIR_LINUX_DEBUG)/effects/PinwheelPanel.o $(OBJDIR_LINUX_DEBUG)/effects/ShimmerPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SingleStrandPanel.o $(OBJDIR_LINUX_DEBUG)/effects/SingleStrandEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ShockwavePanel.o $(OBJDIR_LINUX_DEBUG)/effects/ShockwaveEffect.o $(OBJDIR_LINUX_DEBUG)/effects/PinwheelEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ShimmerEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ShapePanel.o $(OBJDIR_LINUX_DEBUG)/effects/ShapeEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ShaderPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MusicEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHRgbPickerPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPresetBitmapButton.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHColorWheelPanel.o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanel.o $(OBJDIR_LINUX_DEBUG)/effects/OnPanel.o $(OBJDIR_LINUX_DEBUG)/effects/PicturesPanel.o $(OBJDIR_LINUX_DEBUG)/effects/PicturesEffect.o $(OBJDIR_LINUX_DEBUG)/effects/PianoPanel.o $(OBJDIR_LINUX_DEBUG)/effects/PianoEffect.o $(OBJDIR_LINUX_DEBUG)/effects/OnEffect.o $(OBJDIR_LINUX_DEBUG)/effects/OffPanel.o $(OBJDIR_LINUX_DEBUG)/effects/OffEffect.o $(OBJDIR_LINUX_DEBUG)/effects/MusicPanel.o $(OBJDIR_LINUX_DEBUG)/WiringDialog.o $(OBJDIR_LINUX_DEBUG)/VsaImportDialog.o $(OBJDIR_LINUX_DEBUG)/Vixen3.o $(OBJDIR_LINUX_DEBUG)/ViewsModelsPanel.o $(OBJDIR_LINUX_DEBUG)/automation/LuaRunner.o $(OBJDIR_LINUX_DEBUG)/ViewpointMgr.o $(OBJDIR_LINUX_DEBUG)/ViewpointDialog.o $(OBJDIR_LINUX_DEBUG)/ViewObjectPanel.o $(OBJDIR_LINUX_DEBUG)/VideoReader.o $(OBJDIR_LINUX_DEBUG)/controllers/AlphaPix.o $(OBJDIR_LINUX_DEBUG)/cad/VRMLWriter.o $(OBJDIR_LINUX_DEBUG)/cad/STLWriter.o $(OBJDIR_LINUX_DEBUG)/cad/ModelToCAD.o $(OBJDIR_LINUX_DEBUG)/cad/DXFWriter.o $(OBJDIR_LINUX_DEBUG)/VideoExporter.o $(OBJDIR_LINUX_DEBUG)/cad/CADWriter.o $(OBJDIR_LINUX_DEBUG)/cad/CADModel.o $(OBJDIR_LINUX_DEBUG)/automation/xLightsAutomations.o $(OBJDIR_LINUX_DEBUG)/automation/automation.o $(OBJDIR_LINUX_DEBUG)/UtilFunctions.o $(OBJDIR_LINUX_DEBUG)/UtilClasses.o $(OBJDIR_LINUX_DEBUG)/UpdaterDialog.o $(OBJDIR_LINUX_DEBUG)/TraceLog.o $(OBJDIR_LINUX_DEBUG)/TopEffectsPanel.o $(OBJDIR_LINUX_DEBUG)/TipOfTheDayDialog.o $(OBJDIR_LINUX_DEBUG)/TimingPanel.o $(OBJDIR_LINUX_DEBUG)/TempFileManager.o $(OBJDIR_LINUX_DEBUG)/TabSetup.o $(OBJDIR_LINUX_DEBUG)/TabSequence.o $(OBJDIR_LINUX_DEBUG)/TabPreview.o $(OBJDIR_LINUX_DEBUG)/ValueCurveDialog.o $(OBJDIR_LINUX_DEBUG)/VendorMusicHelpers.o $(OBJDIR_LINUX_DEBUG)/VendorMusicDialog.o $(OBJDIR_LINUX_DEBUG)/VendorModelDialog.o $(OBJDIR_LINUX_DEBUG)/ValueCurvesPanel.o $(OBJDIR_LINUX_DEBUG)/ValueCurveButton.o $(OBJDIR_LINUX_DEBUG)/ValueCurve.o $(OBJDIR_LINUX_DEBUG)/VSAFile.o $(OBJDIR_LINUX_DEBUG)/VAMPPluginDialog.o $(OBJDIR_LINUX_DEBUG)/effects/ButterflyEffect.o $(OBJDIR_LINUX_DEBUG)/effects/CirclesEffect.o $(OBJDIR_LINUX_DEBUG)/effects/CandlePanel.o $(OBJDIR_LINUX_DEBUG)/effects/CandleEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ButterflyPanel.o $(OBJDIR_LINUX_DEBUG)/effects/CirclesPanel.o $(OBJDIR_LINUX_DEBUG)/effects/BarsPanel.o $(OBJDIR_LINUX_DEBUG)/effects/BarsEffect.o $(OBJDIR_LINUX_DEBUG)/effects/AdjustPanel.o $(OBJDIR_LINUX_DEBUG)/effects/EffectManager.o $(OBJDIR_LINUX_DEBUG)/effects/DuplicatePanel.o $(OBJDIR_LINUX_DEBUG)/effects/DuplicateEffect.o $(OBJDIR_LINUX_DEBUG)/effects/DMXPanel.o $(OBJDIR_LINUX_DEBUG)/effects/DMXEffect.o $(OBJDIR_LINUX_DEBUG)/effects/AdjustEffect.o $(OBJDIR_LINUX_DEBUG)/effects/CurtainPanel.o $(OBJDIR_LINUX_DEBUG)/effects/CurtainEffect.o $(OBJDIR_LINUX_DEBUG)/effects/ColorWashPanel.o $(OBJDIR_LINUX_DEBUG)/effects/ColorWashEffect.o $(OBJDIR_LINUX_DEBUG)/controllers/Experience.o $(OBJDIR_LINUX_DEBUG)/controllers/Falcon.o $(OBJDIR_LINUX_DEBUG)/controllers/FPPUploadProgressDialog.o $(OBJDIR_LINUX_DEBUG)/controllers/FPPConnectDialog.o $(OBJDIR_LINUX_DEBUG)/controllers/FPP.o $(OBJDIR_LINUX_DEBUG)/controllers/HinksPix.o $(OBJDIR_LINUX_DEBUG)/controllers/ESPixelStick.o $(OBJDIR_LINUX_DEBUG)/controllers/ControllerUploadData.o $(OBJDIR_LINUX_DEBUG)/controllers/ControllerCaps.o $(OBJDIR_LINUX_DEBUG)/controllers/BaseController.o $(OBJDIR_LINUX_DEBUG)/controllers/WebSocketClient.o $(OBJDIR_LINUX_DEBUG)/controllers/WLED.o $(OBJDIR_LINUX_DEBUG)/controllers/SanDevices.o $(OBJDIR_LINUX_DEBUG)/controllers/Pixlite16.o $(OBJDIR_LINUX_DEBUG)/__/common/xlBaseApp.o $(OBJDIR_LINUX_DEBUG)/controllers/Minleon.o $(OBJDIR_LINUX_DEBUG)/controllers/J1Sys.o $(OBJDIR_LINUX_DEBUG)/controllers/ILightThat.o $(OBJDIR_LINUX_DEBUG)/controllers/HinksPixExportDialog.o

OBJ_LINUX_RELEASE = $(OBJDIR_LINUX_RELEASE)/models/SpinnerModel.o $(OBJDIR_LINUX_RELEASE)/models/SphereModel.o $(OBJDIR_LINUX_RELEASE)/models/SingleLineModel.o $(OBJDIR_LINUX_RELEASE)/models/Shapes.o $(OBJDIR_LINUX_RELEASE)/models/RulerObject.o $(OBJDIR_LINUX_RELEASE)/models/PolyPointScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/PolyLineModel.o $(OBJDIR_LINUX_RELEASE)/models/ObjectManager.o $(OBJDIR_LINUX_RELEASE)/models/Node.o $(OBJDIR_LINUX_RELEASE)/models/ThreePointScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/ViewObjectManager.o $(OBJDIR_LINUX_RELEASE)/models/ViewObject.o $(OBJDIR_LINUX_RELEASE)/models/TwoPointScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/TreeModel.o $(OBJDIR_LINUX_RELEASE)/models/MultiPointScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/TerrianObject.o $(OBJDIR_LINUX_RELEASE)/models/TerrainScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/SubModel.o $(OBJDIR_LINUX_RELEASE)/models/StarModel.o $(OBJDIR_LINUX_RELEASE)/models/DMX/Servo.o $(OBJDIR_LINUX_RELEASE)/models/IciclesModel.o $(OBJDIR_LINUX_RELEASE)/models/GridlinesObject.o $(OBJDIR_LINUX_RELEASE)/models/DMX/SkullConfigDialog.o $(OBJDIR_LINUX_RELEASE)/models/DMX/ServoConfigDialog.o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeatureDialog.o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeature.o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannelDialog.o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannel.o $(OBJDIR_LINUX_RELEASE)/models/Model.o $(OBJDIR_LINUX_RELEASE)/models/MultiPointModel.o $(OBJDIR_LINUX_RELEASE)/models/ModelScreenLocation.o $(OBJDIR_LINUX_RELEASE)/models/ModelManager.o $(OBJDIR_LINUX_RELEASE)/models/ModelGroup.o $(OBJDIR_LINUX_RELEASE)/models/WholeHouseModel.o $(OBJDIR_LINUX_RELEASE)/models/MeshObject.o $(OBJDIR_LINUX_RELEASE)/models/MatrixModel.o $(OBJDIR_LINUX_RELEASE)/models/ImageObject.o $(OBJDIR_LINUX_RELEASE)/models/ImageModel.o $(OBJDIR_LINUX_RELEASE)/outputs/TestPreset.o $(OBJDIR_LINUX_RELEASE)/outputs/SerialOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/RenardOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/PixelNetOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/OutputManager.o $(OBJDIR_LINUX_RELEASE)/outputs/Output.o $(OBJDIR_LINUX_RELEASE)/outputs/OpenPixelNetOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/OpenDMXOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/OPCOutput.o $(OBJDIR_LINUX_RELEASE)/preferences/EffectsGridSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/ColorManagerSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/CheckSequenceSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/BackupSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/outputs/xxxSerialOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/NullOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/xxxEthernetOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/serial.o $(OBJDIR_LINUX_RELEASE)/outputs/ZCPPOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/TwinklyOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/Controller.o $(OBJDIR_LINUX_RELEASE)/outputs/DDPOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerSerial.o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerNull.o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerEthernet.o $(OBJDIR_LINUX_RELEASE)/outputs/ArtNetOutput.o $(OBJDIR_LINUX_RELEASE)/models/WreathModel.o $(OBJDIR_LINUX_RELEASE)/models/WindowFrameModel.o $(OBJDIR_LINUX_RELEASE)/outputs/KinetOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/LorControllers.o $(OBJDIR_LINUX_RELEASE)/outputs/LorController.o $(OBJDIR_LINUX_RELEASE)/outputs/LOROutput.o $(OBJDIR_LINUX_RELEASE)/outputs/LOROptimisedOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/IPOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/GenericSerialOutput.o $(OBJDIR_LINUX_RELEASE)/outputs/E131Output.o $(OBJDIR_LINUX_RELEASE)/outputs/DMXOutput.o $(OBJDIR_LINUX_RELEASE)/effects/WarpPanel.o $(OBJDIR_LINUX_RELEASE)/effects/WarpEffect.o $(OBJDIR_LINUX_RELEASE)/effects/VideoPanel.o $(OBJDIR_LINUX_RELEASE)/effects/VideoEffect.o $(OBJDIR_LINUX_RELEASE)/effects/VUMeterPanel.o $(OBJDIR_LINUX_RELEASE)/effects/VUMeterEffect.o $(OBJDIR_LINUX_RELEASE)/effects/TwinklePanel.o $(OBJDIR_LINUX_RELEASE)/effects/TwinkleEffect.o $(OBJDIR_LINUX_RELEASE)/effects/TreePanel.o $(OBJDIR_LINUX_RELEASE)/effects/assist/SketchAssistPanel.o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasPictures.o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasMorph.o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasEmpty.o $(OBJDIR_LINUX_RELEASE)/effects/assist/SketchCanvasPanel.o $(OBJDIR_LINUX_RELEASE)/effects/TreeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/assist/PicturesAssistPanel.o $(OBJDIR_LINUX_RELEASE)/effects/assist/AssistPanel.o $(OBJDIR_LINUX_RELEASE)/effects/WavePanel.o $(OBJDIR_LINUX_RELEASE)/effects/WaveEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SpirographEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SpiralsPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SpiralsEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SnowstormPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SnowstormEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SnowflakesPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SnowflakesEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SketchPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SketchEffectDrawing.o $(OBJDIR_LINUX_RELEASE)/effects/StrobePanel.o $(OBJDIR_LINUX_RELEASE)/effects/TextPanel.o $(OBJDIR_LINUX_RELEASE)/effects/TextEffect.o $(OBJDIR_LINUX_RELEASE)/effects/TendrilPanel.o $(OBJDIR_LINUX_RELEASE)/effects/TendrilEffect.o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/DrawGLUtils.o $(OBJDIR_LINUX_RELEASE)/effects/StrobeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/StatePanel.o $(OBJDIR_LINUX_RELEASE)/effects/StateEffect.o $(OBJDIR_LINUX_RELEASE)/effects/SpirographPanel.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHead.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMotor.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxModel.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxImage.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxGeneral.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodlight.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodArea.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxDimmerAbility.o $(OBJDIR_LINUX_RELEASE)/models/DMX/Mesh.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkulltronix.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkull.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxShutterAbility.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo3D.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityWheel.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPresetAbility.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPanTiltAbility.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHeadAdv.o $(OBJDIR_LINUX_RELEASE)/models/BaseObject.o $(OBJDIR_LINUX_RELEASE)/models/ArchesModel.o $(OBJDIR_LINUX_RELEASE)/kiss_fft/tools/kiss_fftr.o $(OBJDIR_LINUX_RELEASE)/kiss_fft/kiss_fft.o $(OBJDIR_LINUX_RELEASE)/graphics/xlMesh.o $(OBJDIR_LINUX_RELEASE)/graphics/xlGraphicsAccumulators.o $(OBJDIR_LINUX_RELEASE)/graphics/xlFontInfo.o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlOGL3GraphicsContext.o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlGLCanvas.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityRGB.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityCMY.o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbility.o $(OBJDIR_LINUX_RELEASE)/models/CustomModel.o $(OBJDIR_LINUX_RELEASE)/models/CubeModel.o $(OBJDIR_LINUX_RELEASE)/models/CircleModel.o $(OBJDIR_LINUX_RELEASE)/models/ChannelBlockModel.o $(OBJDIR_LINUX_RELEASE)/models/CandyCaneModel.o $(OBJDIR_LINUX_RELEASE)/models/BoxedScreenLocation.o $(OBJDIR_LINUX_RELEASE)/xLightsTimer.o $(OBJDIR_LINUX_RELEASE)/xLightsMain.o $(OBJDIR_LINUX_RELEASE)/xLightsImportChannelMapDialog.o $(OBJDIR_LINUX_RELEASE)/xLightsApp.o $(OBJDIR_LINUX_RELEASE)/xLightsVersion.o $(OBJDIR_LINUX_RELEASE)/xlSlider.o $(OBJDIR_LINUX_RELEASE)/xlLockButton.o $(OBJDIR_LINUX_RELEASE)/xlGridCanvas.o $(OBJDIR_LINUX_RELEASE)/xlColourData.o $(OBJDIR_LINUX_RELEASE)/xlColorPickerFields.o $(OBJDIR_LINUX_RELEASE)/xlColorPicker.o $(OBJDIR_LINUX_RELEASE)/xlColorCanvas.o $(OBJDIR_LINUX_RELEASE)/xLightsXmlFile.o $(OBJDIR_LINUX_RELEASE)/tmGridCell.o $(OBJDIR_LINUX_RELEASE)/utils/string_utils.o $(OBJDIR_LINUX_RELEASE)/utils/ip_utils.o $(OBJDIR_LINUX_RELEASE)/utils/CurlManager.o $(OBJDIR_LINUX_RELEASE)/utils/Curl.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/Files.o $(OBJDIR_LINUX_RELEASE)/support/VectorMath.o $(OBJDIR_LINUX_RELEASE)/support/GridCellChoiceRenderer.o $(OBJDIR_LINUX_RELEASE)/support/FastComboEditor.o $(OBJDIR_LINUX_RELEASE)/support/EzGrid.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginWrapper.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginSummarisingAdapter.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginLoader.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginInputDomainAdapter.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginHostAdapter.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginChannelAdapter.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginBufferingAdapter.o $(OBJDIR_LINUX_RELEASE)/preferences/ViewSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectDropTarget.o $(OBJDIR_LINUX_RELEASE)/sequencer/Effect.o $(OBJDIR_LINUX_RELEASE)/sequencer/DragEffectBitmapButton.o $(OBJDIR_LINUX_RELEASE)/preferences/xLightsPreferences.o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectLayer.o $(OBJDIR_LINUX_RELEASE)/preferences/SequenceFileSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/RandomEffectsSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/OutputSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/preferences/OtherSettingsPanel.o $(OBJDIR_LINUX_RELEASE)/sequencer/tabSequencer.o $(OBJDIR_LINUX_RELEASE)/sequencer/Waveform.o $(OBJDIR_LINUX_RELEASE)/sequencer/UndoManager.o $(OBJDIR_LINUX_RELEASE)/sequencer/TimeLine.o $(OBJDIR_LINUX_RELEASE)/sequencer/SequenceElements.o $(OBJDIR_LINUX_RELEASE)/sequencer/RowHeading.o $(OBJDIR_LINUX_RELEASE)/sequencer/MainSequencer.o $(OBJDIR_LINUX_RELEASE)/sequencer/Element.o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectsGrid.o $(OBJDIR_LINUX_RELEASE)/wxWEBPHandler/imagwebp.o $(OBJDIR_LINUX_RELEASE)/wxModelGridCellRenderer.o $(OBJDIR_LINUX_RELEASE)/wxCheckedListCtrl.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/host-c.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/acsymbols.o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/RealTime.o $(OBJDIR_LINUX_RELEASE)/effects/SketchEffect.o $(OBJDIR_LINUX_RELEASE)/NodeSelectGrid.o $(OBJDIR_LINUX_RELEASE)/NewTimingDialog.o $(OBJDIR_LINUX_RELEASE)/MusicXML.o $(OBJDIR_LINUX_RELEASE)/MultiControllerUploadDialog.o $(OBJDIR_LINUX_RELEASE)/Mouse3DManager.o $(OBJDIR_LINUX_RELEASE)/ModelStateDialog.o $(OBJDIR_LINUX_RELEASE)/ModelRemap.o $(OBJDIR_LINUX_RELEASE)/ModelPreview.o $(OBJDIR_LINUX_RELEASE)/ModelGroupPanel.o $(OBJDIR_LINUX_RELEASE)/PerspectivesPanel.o $(OBJDIR_LINUX_RELEASE)/PathGenerationDialog.o $(OBJDIR_LINUX_RELEASE)/Parallel.o $(OBJDIR_LINUX_RELEASE)/PaletteMgmtDialog.o $(OBJDIR_LINUX_RELEASE)/OutputModelManager.o $(OBJDIR_LINUX_RELEASE)/ModelFaceDialog.o $(OBJDIR_LINUX_RELEASE)/OptionChooser.o $(OBJDIR_LINUX_RELEASE)/OpenGLShaders.o $(OBJDIR_LINUX_RELEASE)/NoteRangeDialog.o $(OBJDIR_LINUX_RELEASE)/NoteImportDialog.o $(OBJDIR_LINUX_RELEASE)/NodesGridCellEditor.o $(OBJDIR_LINUX_RELEASE)/LayoutGroup.o $(OBJDIR_LINUX_RELEASE)/LorConvertDialog.o $(OBJDIR_LINUX_RELEASE)/LinkJukeboxButtonDialog.o $(OBJDIR_LINUX_RELEASE)/LayoutUtils.o $(OBJDIR_LINUX_RELEASE)/LayoutPanel.o $(OBJDIR_LINUX_RELEASE)/LyricUserDictDialog.o $(OBJDIR_LINUX_RELEASE)/LayerSelectDialog.o $(OBJDIR_LINUX_RELEASE)/LORPreview.o $(OBJDIR_LINUX_RELEASE)/LOREdit.o $(OBJDIR_LINUX_RELEASE)/LMSImportChannelMapDialog.o $(OBJDIR_LINUX_RELEASE)/MatrixFaceDownloadDialog.o $(OBJDIR_LINUX_RELEASE)/ModelDimmingCurveDialog.o $(OBJDIR_LINUX_RELEASE)/ModelChainDialog.o $(OBJDIR_LINUX_RELEASE)/MetronomeLabelDialog.o $(OBJDIR_LINUX_RELEASE)/MediaImportOptionsDialog.o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiMessage.o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiFile.o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiEventList.o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiEvent.o $(OBJDIR_LINUX_RELEASE)/MIDI/Binasc.o $(OBJDIR_LINUX_RELEASE)/LyricsDialog.o $(OBJDIR_LINUX_RELEASE)/SevenSegmentDialog.o $(OBJDIR_LINUX_RELEASE)/SequenceViewManager.o $(OBJDIR_LINUX_RELEASE)/SequenceVideoPreview.o $(OBJDIR_LINUX_RELEASE)/SequenceVideoPanel.o $(OBJDIR_LINUX_RELEASE)/SequencePackage.o $(OBJDIR_LINUX_RELEASE)/SequenceData.o $(OBJDIR_LINUX_RELEASE)/SeqSettingsDialog.o $(OBJDIR_LINUX_RELEASE)/SeqFileUtilities.o $(OBJDIR_LINUX_RELEASE)/SeqExportDialog.o $(OBJDIR_LINUX_RELEASE)/StrandNodeNamesDialog.o $(OBJDIR_LINUX_RELEASE)/SuperStarImportDialog.o $(OBJDIR_LINUX_RELEASE)/SubModelsDialog.o $(OBJDIR_LINUX_RELEASE)/SubModelGenerateDialog.o $(OBJDIR_LINUX_RELEASE)/SubBufferPanel.o $(OBJDIR_LINUX_RELEASE)/SeqElementMismatchDialog.o $(OBJDIR_LINUX_RELEASE)/StartChannelDialog.o $(OBJDIR_LINUX_RELEASE)/SplashDialog.o $(OBJDIR_LINUX_RELEASE)/SpecialOptions.o $(OBJDIR_LINUX_RELEASE)/ShaderDownloadDialog.o $(OBJDIR_LINUX_RELEASE)/PreviewPane.o $(OBJDIR_LINUX_RELEASE)/RenderCache.o $(OBJDIR_LINUX_RELEASE)/RenderBuffer.o $(OBJDIR_LINUX_RELEASE)/Render.o $(OBJDIR_LINUX_RELEASE)/RenameTextDialog.o $(OBJDIR_LINUX_RELEASE)/RemapDMXChannelsDialog.o $(OBJDIR_LINUX_RELEASE)/Pixels.o $(OBJDIR_LINUX_RELEASE)/PixelTestDialog.o $(OBJDIR_LINUX_RELEASE)/PixelBuffer.o $(OBJDIR_LINUX_RELEASE)/PhonemeDictionary.o $(OBJDIR_LINUX_RELEASE)/SaveChangesDialog.o $(OBJDIR_LINUX_RELEASE)/SelectTimingsDialog.o $(OBJDIR_LINUX_RELEASE)/SelectPanel.o $(OBJDIR_LINUX_RELEASE)/SearchPanel.o $(OBJDIR_LINUX_RELEASE)/ScriptsDialog.o $(OBJDIR_LINUX_RELEASE)/RestoreBackupDialog.o $(OBJDIR_LINUX_RELEASE)/ResizeImageDialog.o $(OBJDIR_LINUX_RELEASE)/RenderProgressDialog.o $(OBJDIR_LINUX_RELEASE)/CheckboxSelectDialog.o $(OBJDIR_LINUX_RELEASE)/CharMapDialog.o $(OBJDIR_LINUX_RELEASE)/ChannelLayoutDialog.o $(OBJDIR_LINUX_RELEASE)/CachedFileDownloader.o $(OBJDIR_LINUX_RELEASE)/BulkEditSliderDialog.o $(OBJDIR_LINUX_RELEASE)/BulkEditFontPickerDialog.o $(OBJDIR_LINUX_RELEASE)/BulkEditControls.o $(OBJDIR_LINUX_RELEASE)/BulkEditComboDialog.o $(OBJDIR_LINUX_RELEASE)/BulkEditColourPickerDialog.o $(OBJDIR_LINUX_RELEASE)/ConvertDialog.o $(OBJDIR_LINUX_RELEASE)/ControllerModelDialog.o $(OBJDIR_LINUX_RELEASE)/ControllerConnectionDialog.o $(OBJDIR_LINUX_RELEASE)/ColoursPanel.o $(OBJDIR_LINUX_RELEASE)/ColourReplaceDialog.o $(OBJDIR_LINUX_RELEASE)/BufferSizeDialog.o $(OBJDIR_LINUX_RELEASE)/ColorPanel.o $(OBJDIR_LINUX_RELEASE)/ColorManager.o $(OBJDIR_LINUX_RELEASE)/ColorCurveDialog.o $(OBJDIR_LINUX_RELEASE)/ColorCurve.o $(OBJDIR_LINUX_RELEASE)/Color.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/message.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/status.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/sha1.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/server.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/response.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/request.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/pages.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonreader.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/context.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/connection.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/md5.o $(OBJDIR_LINUX_RELEASE)/__/xFade/wxLED.o $(OBJDIR_LINUX_RELEASE)/BufferPanel.o $(OBJDIR_LINUX_RELEASE)/BitmapCache.o $(OBJDIR_LINUX_RELEASE)/BatchRenderDialog.o $(OBJDIR_LINUX_RELEASE)/AutoLabelDialog.o $(OBJDIR_LINUX_RELEASE)/AudioManager.o $(OBJDIR_LINUX_RELEASE)/AlignmentDialog.o $(OBJDIR_LINUX_RELEASE)/AboutDialog.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonwriter.o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonval.o $(OBJDIR_LINUX_RELEASE)/GPURenderUtils.o $(OBJDIR_LINUX_RELEASE)/FontManager.o $(OBJDIR_LINUX_RELEASE)/FlickerFreeBitmapButton.o $(OBJDIR_LINUX_RELEASE)/FindDataPanel.o $(OBJDIR_LINUX_RELEASE)/FileConverter.o $(OBJDIR_LINUX_RELEASE)/FSEQFile.o $(OBJDIR_LINUX_RELEASE)/ExportSettings.o $(OBJDIR_LINUX_RELEASE)/ExportModelSelect.o $(OBJDIR_LINUX_RELEASE)/EmailDialog.o $(OBJDIR_LINUX_RELEASE)/KeyBindings.o $(OBJDIR_LINUX_RELEASE)/KeyBindingEditDialog.o $(OBJDIR_LINUX_RELEASE)/JukeboxPanel.o $(OBJDIR_LINUX_RELEASE)/JobPool.o $(OBJDIR_LINUX_RELEASE)/ImportPreviewsModelsDialog.o $(OBJDIR_LINUX_RELEASE)/EffectsPanel.o $(OBJDIR_LINUX_RELEASE)/IPEntryDialog.o $(OBJDIR_LINUX_RELEASE)/HousePreviewPanel.o $(OBJDIR_LINUX_RELEASE)/GenerateLyricsDialog.o $(OBJDIR_LINUX_RELEASE)/GenerateCustomModelDialog.o $(OBJDIR_LINUX_RELEASE)/DataLayer.o $(OBJDIR_LINUX_RELEASE)/DragColoursBitmapButton.o $(OBJDIR_LINUX_RELEASE)/DissolveTransitionPattern.o $(OBJDIR_LINUX_RELEASE)/Discovery.o $(OBJDIR_LINUX_RELEASE)/DimmingCurvePanel.o $(OBJDIR_LINUX_RELEASE)/DimmingCurve.o $(OBJDIR_LINUX_RELEASE)/CustomTimingDialog.o $(OBJDIR_LINUX_RELEASE)/CustomModelDialog.o $(OBJDIR_LINUX_RELEASE)/CopyFormat1.o $(OBJDIR_LINUX_RELEASE)/ConvertLogDialog.o $(OBJDIR_LINUX_RELEASE)/EffectAssist.o $(OBJDIR_LINUX_RELEASE)/EffectTreeDialog.o $(OBJDIR_LINUX_RELEASE)/EffectTimingDialog.o $(OBJDIR_LINUX_RELEASE)/EffectListDialog.o $(OBJDIR_LINUX_RELEASE)/EffectIconPanel.o $(OBJDIR_LINUX_RELEASE)/TabConvert.o $(OBJDIR_LINUX_RELEASE)/EditSubmodelAliasesDialog.o $(OBJDIR_LINUX_RELEASE)/EditAliasesDialog.o $(OBJDIR_LINUX_RELEASE)/DuplicateDialog.o $(OBJDIR_LINUX_RELEASE)/DragValueCurveBitmapButton.o $(OBJDIR_LINUX_RELEASE)/effects/LifeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/LinesEffect.o $(OBJDIR_LINUX_RELEASE)/effects/LightningPanel.o $(OBJDIR_LINUX_RELEASE)/effects/LightningEffect.o $(OBJDIR_LINUX_RELEASE)/effects/LifePanel.o $(OBJDIR_LINUX_RELEASE)/effects/LinesPanel.o $(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopePanel.o $(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/GuitarPanel.o $(OBJDIR_LINUX_RELEASE)/effects/GuitarEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MorphPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MorphEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MeteorsPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MeteorsEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MarqueePanel.o $(OBJDIR_LINUX_RELEASE)/effects/MarqueeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/LiquidPanel.o $(OBJDIR_LINUX_RELEASE)/effects/LiquidEffect.o $(OBJDIR_LINUX_RELEASE)/effects/FanEffect.o $(OBJDIR_LINUX_RELEASE)/effects/FireEffect.o $(OBJDIR_LINUX_RELEASE)/effects/FillPanel.o $(OBJDIR_LINUX_RELEASE)/effects/FillEffect.o $(OBJDIR_LINUX_RELEASE)/effects/FanPanel.o $(OBJDIR_LINUX_RELEASE)/effects/FirePanel.o $(OBJDIR_LINUX_RELEASE)/effects/FacesPanel.o $(OBJDIR_LINUX_RELEASE)/effects/FacesEffect.o $(OBJDIR_LINUX_RELEASE)/effects/FX.o $(OBJDIR_LINUX_RELEASE)/effects/EffectPanelUtils.o $(OBJDIR_LINUX_RELEASE)/effects/GlediatorPanel.o $(OBJDIR_LINUX_RELEASE)/effects/GlediatorEffect.o $(OBJDIR_LINUX_RELEASE)/effects/GarlandsPanel.o $(OBJDIR_LINUX_RELEASE)/effects/GarlandsEffect.o $(OBJDIR_LINUX_RELEASE)/effects/GalaxyPanel.o $(OBJDIR_LINUX_RELEASE)/effects/GalaxyEffect.o $(OBJDIR_LINUX_RELEASE)/effects/GIFImage.o $(OBJDIR_LINUX_RELEASE)/effects/FireworksPanel.o $(OBJDIR_LINUX_RELEASE)/effects/FireworksEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ShaderEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ServoPanel.o $(OBJDIR_LINUX_RELEASE)/effects/ServoEffect.o $(OBJDIR_LINUX_RELEASE)/effects/RipplePanel.o $(OBJDIR_LINUX_RELEASE)/effects/RippleEffect.o $(OBJDIR_LINUX_RELEASE)/effects/RenderableEffect.o $(OBJDIR_LINUX_RELEASE)/effects/PlasmaPanel.o $(OBJDIR_LINUX_RELEASE)/effects/PlasmaEffect.o $(OBJDIR_LINUX_RELEASE)/effects/PinwheelPanel.o $(OBJDIR_LINUX_RELEASE)/effects/ShimmerPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SingleStrandPanel.o $(OBJDIR_LINUX_RELEASE)/effects/SingleStrandEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ShockwavePanel.o $(OBJDIR_LINUX_RELEASE)/effects/ShockwaveEffect.o $(OBJDIR_LINUX_RELEASE)/effects/PinwheelEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ShimmerEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ShapePanel.o $(OBJDIR_LINUX_RELEASE)/effects/ShapeEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ShaderPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MusicEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHRgbPickerPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPresetBitmapButton.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHColorWheelPanel.o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanel.o $(OBJDIR_LINUX_RELEASE)/effects/OnPanel.o $(OBJDIR_LINUX_RELEASE)/effects/PicturesPanel.o $(OBJDIR_LINUX_RELEASE)/effects/PicturesEffect.o $(OBJDIR_LINUX_RELEASE)/effects/PianoPanel.o $(OBJDIR_LINUX_RELEASE)/effects/PianoEffect.o $(OBJDIR_LINUX_RELEASE)/effects/OnEffect.o $(OBJDIR_LINUX_RELEASE)/effects/OffPanel.o $(OBJDIR_LINUX_RELEASE)/effects/OffEffect.o $(OBJDIR_LINUX_RELEASE)/effects/MusicPanel.o $(OBJDIR_LINUX_RELEASE)/WiringDialog.o $(OBJDIR_LINUX_RELEASE)/VsaImportDialog.o $(OBJDIR_LINUX_RELEASE)/Vixen3.o $(OBJDIR_LINUX_RELEASE)/ViewsModelsPanel.o $(OBJDIR_LINUX_RELEASE)/automation/LuaRunner.o $(OBJDIR_LINUX_RELEASE)/ViewpointMgr.o $(OBJDIR_LINUX_RELEASE)/ViewpointDialog.o $(OBJDIR_LINUX_RELEASE)/ViewObjectPanel.o $(OBJDIR_LINUX_RELEASE)/VideoReader.o $(OBJDIR_LINUX_RELEASE)/controllers/AlphaPix.o $(OBJDIR_LINUX_RELEASE)/cad/VRMLWriter.o $(OBJDIR_LINUX_RELEASE)/cad/STLWriter.o $(OBJDIR_LINUX_RELEASE)/cad/ModelToCAD.o $(OBJDIR_LINUX_RELEASE)/cad/DXFWriter.o $(OBJDIR_LINUX_RELEASE)/VideoExporter.o $(OBJDIR_LINUX_RELEASE)/cad/CADWriter.o $(OBJDIR_LINUX_RELEASE)/cad/CADModel.o $(OBJDIR_LINUX_RELEASE)/automation/xLightsAutomations.o $(OBJDIR_LINUX_RELEASE)/automation/automation.o $(OBJDIR_LINUX_RELEASE)/UtilFunctions.o $(OBJDIR_LINUX_RELEASE)/UtilClasses.o $(OBJDIR_LINUX_RELEASE)/UpdaterDialog.o $(OBJDIR_LINUX_RELEASE)/TraceLog.o $(OBJDIR_LINUX_RELEASE)/TopEffectsPanel.o $(OBJDIR_LINUX_RELEASE)/TipOfTheDayDialog.o $(OBJDIR_LINUX_RELEASE)/TimingPanel.o $(OBJDIR_LINUX_RELEASE)/TempFileManager.o $(OBJDIR_LINUX_RELEASE)/TabSetup.o $(OBJDIR_LINUX_RELEASE)/TabSequence.o $(OBJDIR_LINUX_RELEASE)/TabPreview.o $(OBJDIR_LINUX_RELEASE)/ValueCurveDialog.o $(OBJDIR_LINUX_RELEASE)/VendorMusicHelpers.o $(OBJDIR_LINUX_RELEASE)/VendorMusicDialog.o $(OBJDIR_LINUX_RELEASE)/VendorModelDialog.o $(OBJDIR_LINUX_RELEASE)/ValueCurvesPanel.o $(OBJDIR_LINUX_RELEASE)/ValueCurveButton.o $(OBJDIR_LINUX_RELEASE)/ValueCurve.o $(OBJDIR_LINUX_RELEASE)/VSAFile.o $(OBJDIR_LINUX_RELEASE)/VAMPPluginDialog.o $(OBJDIR_LINUX_RELEASE)/effects/ButterflyEffect.o $(OBJDIR_LINUX_RELEASE)/effects/CirclesEffect.o $(OBJDIR_LINUX_RELEASE)/effects/CandlePanel.o $(OBJDIR_LINUX_RELEASE)/effects/CandleEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ButterflyPanel.o $(OBJDIR_LINUX_RELEASE)/effects/CirclesPanel.o $(OBJDIR_LINUX_RELEASE)/effects/BarsPanel.o $(OBJDIR_LINUX_RELEASE)/effects/BarsEffect.o $(OBJDIR_LINUX_RELEASE)/effects/AdjustPanel.o $(OBJDIR_LINUX_RELEASE)/effects/EffectManager.o $(OBJDIR_LINUX_RELEASE)/effects/DuplicatePanel.o $(OBJDIR_LINUX_RELEASE)/effects/DuplicateEffect.o $(OBJDIR_LINUX_RELEASE)/effects/DMXPanel.o $(OBJDIR_LINUX_RELEASE)/effects/DMXEffect.o $(OBJDIR_LINUX_RELEASE)/effects/AdjustEffect.o $(OBJDIR_LINUX_RELEASE)/effects/CurtainPanel.o $(OBJDIR_LINUX_RELEASE)/effects/CurtainEffect.o $(OBJDIR_LINUX_RELEASE)/effects/ColorWashPanel.o $(OBJDIR_LINUX_RELEASE)/effects/ColorWashEffect.o $(OBJDIR_LINUX_RELEASE)/controllers/Experience.o $(OBJDIR_LINUX_RELEASE)/controllers/Falcon.o $(OBJDIR_LINUX_RELEASE)/controllers/FPPUploadProgressDialog.o $(OBJDIR_LINUX_RELEASE)/controllers/FPPConnectDialog.o $(OBJDIR_LINUX_RELEASE)/controllers/FPP.o $(OBJDIR_LINUX_RELEASE)/controllers/HinksPix.o $(OBJDIR_LINUX_RELEASE)/controllers/ESPixelStick.o $(OBJDIR_LINUX_RELEASE)/controllers/ControllerUploadData.o $(OBJDIR_LINUX_RELEASE)/controllers/ControllerCaps.o $(OBJDIR_LINUX_RELEASE)/controllers/BaseController.o $(OBJDIR_LINUX_RELEASE)/controllers/WebSocketClient.o $(OBJDIR_LINUX_RELEASE)/controllers/WLED.o $(OBJDIR_LINUX_RELEASE)/controllers/SanDevices.o $(OBJDIR_LINUX_RELEASE)/controllers/Pixlite16.o $(OBJDIR_LINUX_RELEASE)/__/common/xlBaseApp.o $(OBJDIR_LINUX_RELEASE)/controllers/Minleon.o $(OBJDIR_LINUX_RELEASE)/controllers/J1Sys.o $(OBJDIR_LINUX_RELEASE)/controllers/ILightThat.o $(OBJDIR_LINUX_RELEASE)/controllers/HinksPixExportDialog.o

all: linux_debug linux_release

clean: clean_linux_debug clean_linux_release

before_linux_debug: 
	@test -d ../bin || mkdir -p ../bin
	@test -d $(OBJDIR_LINUX_DEBUG)/models || mkdir -p $(OBJDIR_LINUX_DEBUG)/models
	@test -d $(OBJDIR_LINUX_DEBUG)/models/DMX || mkdir -p $(OBJDIR_LINUX_DEBUG)/models/DMX
	@test -d $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads || mkdir -p $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads
	@test -d $(OBJDIR_LINUX_DEBUG)/outputs || mkdir -p $(OBJDIR_LINUX_DEBUG)/outputs
	@test -d $(OBJDIR_LINUX_DEBUG)/preferences || mkdir -p $(OBJDIR_LINUX_DEBUG)/preferences
	@test -d $(OBJDIR_LINUX_DEBUG)/effects || mkdir -p $(OBJDIR_LINUX_DEBUG)/effects
	@test -d $(OBJDIR_LINUX_DEBUG)/effects/assist || mkdir -p $(OBJDIR_LINUX_DEBUG)/effects/assist
	@test -d $(OBJDIR_LINUX_DEBUG)/graphics/opengl || mkdir -p $(OBJDIR_LINUX_DEBUG)/graphics/opengl
	@test -d $(OBJDIR_LINUX_DEBUG)/kiss_fft/tools || mkdir -p $(OBJDIR_LINUX_DEBUG)/kiss_fft/tools
	@test -d $(OBJDIR_LINUX_DEBUG)/kiss_fft || mkdir -p $(OBJDIR_LINUX_DEBUG)/kiss_fft
	@test -d $(OBJDIR_LINUX_DEBUG)/graphics || mkdir -p $(OBJDIR_LINUX_DEBUG)/graphics
	@test -d $(OBJDIR_LINUX_DEBUG) || mkdir -p $(OBJDIR_LINUX_DEBUG)
	@test -d $(OBJDIR_LINUX_DEBUG)/utils || mkdir -p $(OBJDIR_LINUX_DEBUG)/utils
	@test -d $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk || mkdir -p $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk
	@test -d $(OBJDIR_LINUX_DEBUG)/support || mkdir -p $(OBJDIR_LINUX_DEBUG)/support
	@test -d $(OBJDIR_LINUX_DEBUG)/sequencer || mkdir -p $(OBJDIR_LINUX_DEBUG)/sequencer
	@test -d $(OBJDIR_LINUX_DEBUG)/wxWEBPHandler || mkdir -p $(OBJDIR_LINUX_DEBUG)/wxWEBPHandler
	@test -d $(OBJDIR_LINUX_DEBUG)/MIDI || mkdir -p $(OBJDIR_LINUX_DEBUG)/MIDI
	@test -d $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer || mkdir -p $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer
	@test -d $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON || mkdir -p $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON
	@test -d $(OBJDIR_LINUX_DEBUG)/__/xSchedule || mkdir -p $(OBJDIR_LINUX_DEBUG)/__/xSchedule
	@test -d $(OBJDIR_LINUX_DEBUG)/__/xFade || mkdir -p $(OBJDIR_LINUX_DEBUG)/__/xFade
	@test -d $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels || mkdir -p $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels
	@test -d $(OBJDIR_LINUX_DEBUG)/automation || mkdir -p $(OBJDIR_LINUX_DEBUG)/automation
	@test -d $(OBJDIR_LINUX_DEBUG)/controllers || mkdir -p $(OBJDIR_LINUX_DEBUG)/controllers
	@test -d $(OBJDIR_LINUX_DEBUG)/cad || mkdir -p $(OBJDIR_LINUX_DEBUG)/cad
	@test -d $(OBJDIR_LINUX_DEBUG)/__/common || mkdir -p $(OBJDIR_LINUX_DEBUG)/__/common

after_linux_debug: 

linux_debug: before_linux_debug out_linux_debug after_linux_debug

out_linux_debug: before_linux_debug $(OBJ_LINUX_DEBUG) $(DEP_LINUX_DEBUG)
	$(LD) $(LIBDIR_LINUX_DEBUG) -o $(OUT_LINUX_DEBUG) $(OBJ_LINUX_DEBUG)  $(LDFLAGS_LINUX_DEBUG) $(LIB_LINUX_DEBUG)

$(OBJDIR_LINUX_DEBUG)/models/SpinnerModel.o: models/SpinnerModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/SpinnerModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/SpinnerModel.o

$(OBJDIR_LINUX_DEBUG)/models/SphereModel.o: models/SphereModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/SphereModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/SphereModel.o

$(OBJDIR_LINUX_DEBUG)/models/SingleLineModel.o: models/SingleLineModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/SingleLineModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/SingleLineModel.o

$(OBJDIR_LINUX_DEBUG)/models/Shapes.o: models/Shapes.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/Shapes.cpp -o $(OBJDIR_LINUX_DEBUG)/models/Shapes.o

$(OBJDIR_LINUX_DEBUG)/models/RulerObject.o: models/RulerObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/RulerObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/RulerObject.o

$(OBJDIR_LINUX_DEBUG)/models/PolyPointScreenLocation.o: models/PolyPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/PolyPointScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/PolyPointScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/PolyLineModel.o: models/PolyLineModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/PolyLineModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/PolyLineModel.o

$(OBJDIR_LINUX_DEBUG)/models/ObjectManager.o: models/ObjectManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ObjectManager.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ObjectManager.o

$(OBJDIR_LINUX_DEBUG)/models/Node.o: models/Node.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/Node.cpp -o $(OBJDIR_LINUX_DEBUG)/models/Node.o

$(OBJDIR_LINUX_DEBUG)/models/ThreePointScreenLocation.o: models/ThreePointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ThreePointScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ThreePointScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/ViewObjectManager.o: models/ViewObjectManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ViewObjectManager.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ViewObjectManager.o

$(OBJDIR_LINUX_DEBUG)/models/ViewObject.o: models/ViewObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ViewObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ViewObject.o

$(OBJDIR_LINUX_DEBUG)/models/TwoPointScreenLocation.o: models/TwoPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/TwoPointScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/TwoPointScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/TreeModel.o: models/TreeModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/TreeModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/TreeModel.o

$(OBJDIR_LINUX_DEBUG)/models/MultiPointScreenLocation.o: models/MultiPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/MultiPointScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/MultiPointScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/TerrianObject.o: models/TerrianObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/TerrianObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/TerrianObject.o

$(OBJDIR_LINUX_DEBUG)/models/TerrainScreenLocation.o: models/TerrainScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/TerrainScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/TerrainScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/SubModel.o: models/SubModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/SubModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/SubModel.o

$(OBJDIR_LINUX_DEBUG)/models/StarModel.o: models/StarModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/StarModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/StarModel.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/Servo.o: models/DMX/Servo.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/Servo.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/Servo.o

$(OBJDIR_LINUX_DEBUG)/models/IciclesModel.o: models/IciclesModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/IciclesModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/IciclesModel.o

$(OBJDIR_LINUX_DEBUG)/models/GridlinesObject.o: models/GridlinesObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/GridlinesObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/GridlinesObject.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/SkullConfigDialog.o: models/DMX/SkullConfigDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/SkullConfigDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/SkullConfigDialog.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/ServoConfigDialog.o: models/DMX/ServoConfigDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/ServoConfigDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/ServoConfigDialog.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeatureDialog.o: models/DMX/MovingHeads/MhFeatureDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/MovingHeads/MhFeatureDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeatureDialog.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeature.o: models/DMX/MovingHeads/MhFeature.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/MovingHeads/MhFeature.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhFeature.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannelDialog.o: models/DMX/MovingHeads/MhChannelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/MovingHeads/MhChannelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannelDialog.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannel.o: models/DMX/MovingHeads/MhChannel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/MovingHeads/MhChannel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/MovingHeads/MhChannel.o

$(OBJDIR_LINUX_DEBUG)/models/Model.o: models/Model.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/Model.cpp -o $(OBJDIR_LINUX_DEBUG)/models/Model.o

$(OBJDIR_LINUX_DEBUG)/models/MultiPointModel.o: models/MultiPointModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/MultiPointModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/MultiPointModel.o

$(OBJDIR_LINUX_DEBUG)/models/ModelScreenLocation.o: models/ModelScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ModelScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ModelScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/models/ModelManager.o: models/ModelManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ModelManager.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ModelManager.o

$(OBJDIR_LINUX_DEBUG)/models/ModelGroup.o: models/ModelGroup.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ModelGroup.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ModelGroup.o

$(OBJDIR_LINUX_DEBUG)/models/WholeHouseModel.o: models/WholeHouseModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/WholeHouseModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/WholeHouseModel.o

$(OBJDIR_LINUX_DEBUG)/models/MeshObject.o: models/MeshObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/MeshObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/MeshObject.o

$(OBJDIR_LINUX_DEBUG)/models/MatrixModel.o: models/MatrixModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/MatrixModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/MatrixModel.o

$(OBJDIR_LINUX_DEBUG)/models/ImageObject.o: models/ImageObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ImageObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ImageObject.o

$(OBJDIR_LINUX_DEBUG)/models/ImageModel.o: models/ImageModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ImageModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ImageModel.o

$(OBJDIR_LINUX_DEBUG)/outputs/TestPreset.o: outputs/TestPreset.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/TestPreset.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/TestPreset.o

$(OBJDIR_LINUX_DEBUG)/outputs/SerialOutput.o: outputs/SerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/SerialOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/SerialOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/RenardOutput.o: outputs/RenardOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/RenardOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/RenardOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/PixelNetOutput.o: outputs/PixelNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/PixelNetOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/PixelNetOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/OutputManager.o: outputs/OutputManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/OutputManager.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/OutputManager.o

$(OBJDIR_LINUX_DEBUG)/outputs/Output.o: outputs/Output.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/Output.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/Output.o

$(OBJDIR_LINUX_DEBUG)/outputs/OpenPixelNetOutput.o: outputs/OpenPixelNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/OpenPixelNetOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/OpenPixelNetOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/OpenDMXOutput.o: outputs/OpenDMXOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/OpenDMXOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/OpenDMXOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/OPCOutput.o: outputs/OPCOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/OPCOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/OPCOutput.o

$(OBJDIR_LINUX_DEBUG)/preferences/EffectsGridSettingsPanel.o: preferences/EffectsGridSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/EffectsGridSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/EffectsGridSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/ColorManagerSettingsPanel.o: preferences/ColorManagerSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/ColorManagerSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/ColorManagerSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/CheckSequenceSettingsPanel.o: preferences/CheckSequenceSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/CheckSequenceSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/CheckSequenceSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/BackupSettingsPanel.o: preferences/BackupSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/BackupSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/BackupSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/outputs/xxxSerialOutput.o: outputs/xxxSerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/xxxSerialOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/xxxSerialOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/NullOutput.o: outputs/NullOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/NullOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/NullOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/xxxEthernetOutput.o: outputs/xxxEthernetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/xxxEthernetOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/xxxEthernetOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/serial.o: outputs/serial.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/serial.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/serial.o

$(OBJDIR_LINUX_DEBUG)/outputs/ZCPPOutput.o: outputs/ZCPPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/ZCPPOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/ZCPPOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/TwinklyOutput.o: outputs/TwinklyOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/TwinklyOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/TwinklyOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/Controller.o: outputs/Controller.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/Controller.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/Controller.o

$(OBJDIR_LINUX_DEBUG)/outputs/DDPOutput.o: outputs/DDPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/DDPOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/DDPOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/ControllerSerial.o: outputs/ControllerSerial.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/ControllerSerial.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerSerial.o

$(OBJDIR_LINUX_DEBUG)/outputs/ControllerNull.o: outputs/ControllerNull.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/ControllerNull.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerNull.o

$(OBJDIR_LINUX_DEBUG)/outputs/ControllerEthernet.o: outputs/ControllerEthernet.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/ControllerEthernet.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/ControllerEthernet.o

$(OBJDIR_LINUX_DEBUG)/outputs/ArtNetOutput.o: outputs/ArtNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/ArtNetOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/ArtNetOutput.o

$(OBJDIR_LINUX_DEBUG)/models/WreathModel.o: models/WreathModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/WreathModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/WreathModel.o

$(OBJDIR_LINUX_DEBUG)/models/WindowFrameModel.o: models/WindowFrameModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/WindowFrameModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/WindowFrameModel.o

$(OBJDIR_LINUX_DEBUG)/outputs/KinetOutput.o: outputs/KinetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/KinetOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/KinetOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/LorControllers.o: outputs/LorControllers.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/LorControllers.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/LorControllers.o

$(OBJDIR_LINUX_DEBUG)/outputs/LorController.o: outputs/LorController.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/LorController.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/LorController.o

$(OBJDIR_LINUX_DEBUG)/outputs/LOROutput.o: outputs/LOROutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/LOROutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/LOROutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/LOROptimisedOutput.o: outputs/LOROptimisedOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/LOROptimisedOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/LOROptimisedOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/IPOutput.o: outputs/IPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/IPOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/IPOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/GenericSerialOutput.o: outputs/GenericSerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/GenericSerialOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/GenericSerialOutput.o

$(OBJDIR_LINUX_DEBUG)/outputs/E131Output.o: outputs/E131Output.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/E131Output.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/E131Output.o

$(OBJDIR_LINUX_DEBUG)/outputs/DMXOutput.o: outputs/DMXOutput.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c outputs/DMXOutput.cpp -o $(OBJDIR_LINUX_DEBUG)/outputs/DMXOutput.o

$(OBJDIR_LINUX_DEBUG)/effects/WarpPanel.o: effects/WarpPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/WarpPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/WarpPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/WarpEffect.o: effects/WarpEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/WarpEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/WarpEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/VideoPanel.o: effects/VideoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/VideoPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/VideoPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/VideoEffect.o: effects/VideoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/VideoEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/VideoEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/VUMeterPanel.o: effects/VUMeterPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/VUMeterPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/VUMeterPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/VUMeterEffect.o: effects/VUMeterEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/VUMeterEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/VUMeterEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/TwinklePanel.o: effects/TwinklePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TwinklePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TwinklePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/TwinkleEffect.o: effects/TwinkleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TwinkleEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TwinkleEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/TreePanel.o: effects/TreePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TreePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TreePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/SketchAssistPanel.o: effects/assist/SketchAssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/SketchAssistPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/SketchAssistPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasPictures.o: effects/assist/xlGridCanvasPictures.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/xlGridCanvasPictures.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasPictures.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasMorph.o: effects/assist/xlGridCanvasMorph.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/xlGridCanvasMorph.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasMorph.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasEmpty.o: effects/assist/xlGridCanvasEmpty.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/xlGridCanvasEmpty.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/xlGridCanvasEmpty.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/SketchCanvasPanel.o: effects/assist/SketchCanvasPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/SketchCanvasPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/SketchCanvasPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/TreeEffect.o: effects/TreeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TreeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TreeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/PicturesAssistPanel.o: effects/assist/PicturesAssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/PicturesAssistPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/PicturesAssistPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/assist/AssistPanel.o: effects/assist/AssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/assist/AssistPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/assist/AssistPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/WavePanel.o: effects/WavePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/WavePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/WavePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/WaveEffect.o: effects/WaveEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/WaveEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/WaveEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SpirographEffect.o: effects/SpirographEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SpirographEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SpirographEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SpiralsPanel.o: effects/SpiralsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SpiralsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SpiralsPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SpiralsEffect.o: effects/SpiralsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SpiralsEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SpiralsEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SnowstormPanel.o: effects/SnowstormPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SnowstormPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SnowstormPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SnowstormEffect.o: effects/SnowstormEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SnowstormEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SnowstormEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SnowflakesPanel.o: effects/SnowflakesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SnowflakesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SnowflakesPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SnowflakesEffect.o: effects/SnowflakesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SnowflakesEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SnowflakesEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SketchPanel.o: effects/SketchPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SketchPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SketchPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SketchEffectDrawing.o: effects/SketchEffectDrawing.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SketchEffectDrawing.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SketchEffectDrawing.o

$(OBJDIR_LINUX_DEBUG)/effects/StrobePanel.o: effects/StrobePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/StrobePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/StrobePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/TextPanel.o: effects/TextPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TextPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TextPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/TextEffect.o: effects/TextEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TextEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TextEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/TendrilPanel.o: effects/TendrilPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TendrilPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TendrilPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/TendrilEffect.o: effects/TendrilEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/TendrilEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/TendrilEffect.o

$(OBJDIR_LINUX_DEBUG)/graphics/opengl/DrawGLUtils.o: graphics/opengl/DrawGLUtils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/opengl/DrawGLUtils.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/DrawGLUtils.o

$(OBJDIR_LINUX_DEBUG)/effects/StrobeEffect.o: effects/StrobeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/StrobeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/StrobeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/StatePanel.o: effects/StatePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/StatePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/StatePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/StateEffect.o: effects/StateEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/StateEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/StateEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/SpirographPanel.o: effects/SpirographPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SpirographPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SpirographPanel.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHead.o: models/DMX/DmxMovingHead.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxMovingHead.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHead.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMotor.o: models/DMX/DmxMotor.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxMotor.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMotor.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxModel.o: models/DMX/DmxModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxModel.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxImage.o: models/DMX/DmxImage.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxImage.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxImage.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxGeneral.o: models/DMX/DmxGeneral.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxGeneral.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxGeneral.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodlight.o: models/DMX/DmxFloodlight.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxFloodlight.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodlight.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodArea.o: models/DMX/DmxFloodArea.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxFloodArea.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxFloodArea.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxDimmerAbility.o: models/DMX/DmxDimmerAbility.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxDimmerAbility.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxDimmerAbility.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/Mesh.o: models/DMX/Mesh.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/Mesh.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/Mesh.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkulltronix.o: models/DMX/DmxSkulltronix.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxSkulltronix.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkulltronix.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkull.o: models/DMX/DmxSkull.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxSkull.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxSkull.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxShutterAbility.o: models/DMX/DmxShutterAbility.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxShutterAbility.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxShutterAbility.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo3D.o: models/DMX/DmxServo3D.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxServo3D.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo3D.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityWheel.o: models/DMX/DmxColorAbilityWheel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxColorAbilityWheel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityWheel.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo.o: models/DMX/DmxServo.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxServo.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxServo.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPresetAbility.o: models/DMX/DmxPresetAbility.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxPresetAbility.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPresetAbility.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPanTiltAbility.o: models/DMX/DmxPanTiltAbility.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxPanTiltAbility.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxPanTiltAbility.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHeadAdv.o: models/DMX/DmxMovingHeadAdv.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxMovingHeadAdv.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxMovingHeadAdv.o

$(OBJDIR_LINUX_DEBUG)/models/BaseObject.o: models/BaseObject.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/BaseObject.cpp -o $(OBJDIR_LINUX_DEBUG)/models/BaseObject.o

$(OBJDIR_LINUX_DEBUG)/models/ArchesModel.o: models/ArchesModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ArchesModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ArchesModel.o

$(OBJDIR_LINUX_DEBUG)/kiss_fft/tools/kiss_fftr.o: kiss_fft/tools/kiss_fftr.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c kiss_fft/tools/kiss_fftr.c -o $(OBJDIR_LINUX_DEBUG)/kiss_fft/tools/kiss_fftr.o

$(OBJDIR_LINUX_DEBUG)/kiss_fft/kiss_fft.o: kiss_fft/kiss_fft.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c kiss_fft/kiss_fft.c -o $(OBJDIR_LINUX_DEBUG)/kiss_fft/kiss_fft.o

$(OBJDIR_LINUX_DEBUG)/graphics/xlMesh.o: graphics/xlMesh.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/xlMesh.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/xlMesh.o

$(OBJDIR_LINUX_DEBUG)/graphics/xlGraphicsAccumulators.o: graphics/xlGraphicsAccumulators.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/xlGraphicsAccumulators.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/xlGraphicsAccumulators.o

$(OBJDIR_LINUX_DEBUG)/graphics/xlFontInfo.o: graphics/xlFontInfo.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/xlFontInfo.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/xlFontInfo.o

$(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlOGL3GraphicsContext.o: graphics/opengl/xlOGL3GraphicsContext.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/opengl/xlOGL3GraphicsContext.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlOGL3GraphicsContext.o

$(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlGLCanvas.o: graphics/opengl/xlGLCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c graphics/opengl/xlGLCanvas.cpp -o $(OBJDIR_LINUX_DEBUG)/graphics/opengl/xlGLCanvas.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityRGB.o: models/DMX/DmxColorAbilityRGB.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxColorAbilityRGB.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityRGB.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityCMY.o: models/DMX/DmxColorAbilityCMY.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxColorAbilityCMY.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbilityCMY.o

$(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbility.o: models/DMX/DmxColorAbility.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/DMX/DmxColorAbility.cpp -o $(OBJDIR_LINUX_DEBUG)/models/DMX/DmxColorAbility.o

$(OBJDIR_LINUX_DEBUG)/models/CustomModel.o: models/CustomModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/CustomModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/CustomModel.o

$(OBJDIR_LINUX_DEBUG)/models/CubeModel.o: models/CubeModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/CubeModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/CubeModel.o

$(OBJDIR_LINUX_DEBUG)/models/CircleModel.o: models/CircleModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/CircleModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/CircleModel.o

$(OBJDIR_LINUX_DEBUG)/models/ChannelBlockModel.o: models/ChannelBlockModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/ChannelBlockModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/ChannelBlockModel.o

$(OBJDIR_LINUX_DEBUG)/models/CandyCaneModel.o: models/CandyCaneModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/CandyCaneModel.cpp -o $(OBJDIR_LINUX_DEBUG)/models/CandyCaneModel.o

$(OBJDIR_LINUX_DEBUG)/models/BoxedScreenLocation.o: models/BoxedScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c models/BoxedScreenLocation.cpp -o $(OBJDIR_LINUX_DEBUG)/models/BoxedScreenLocation.o

$(OBJDIR_LINUX_DEBUG)/xLightsTimer.o: xLightsTimer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsTimer.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsTimer.o

$(OBJDIR_LINUX_DEBUG)/xLightsMain.o: xLightsMain.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsMain.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsMain.o

$(OBJDIR_LINUX_DEBUG)/xLightsImportChannelMapDialog.o: xLightsImportChannelMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsImportChannelMapDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsImportChannelMapDialog.o

$(OBJDIR_LINUX_DEBUG)/xLightsApp.o: xLightsApp.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsApp.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsApp.o

$(OBJDIR_LINUX_DEBUG)/xLightsVersion.o: xLightsVersion.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsVersion.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsVersion.o

$(OBJDIR_LINUX_DEBUG)/xlSlider.o: xlSlider.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlSlider.cpp -o $(OBJDIR_LINUX_DEBUG)/xlSlider.o

$(OBJDIR_LINUX_DEBUG)/xlLockButton.o: xlLockButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlLockButton.cpp -o $(OBJDIR_LINUX_DEBUG)/xlLockButton.o

$(OBJDIR_LINUX_DEBUG)/xlGridCanvas.o: xlGridCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlGridCanvas.cpp -o $(OBJDIR_LINUX_DEBUG)/xlGridCanvas.o

$(OBJDIR_LINUX_DEBUG)/xlColourData.o: xlColourData.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlColourData.cpp -o $(OBJDIR_LINUX_DEBUG)/xlColourData.o

$(OBJDIR_LINUX_DEBUG)/xlColorPickerFields.o: xlColorPickerFields.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlColorPickerFields.cpp -o $(OBJDIR_LINUX_DEBUG)/xlColorPickerFields.o

$(OBJDIR_LINUX_DEBUG)/xlColorPicker.o: xlColorPicker.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlColorPicker.cpp -o $(OBJDIR_LINUX_DEBUG)/xlColorPicker.o

$(OBJDIR_LINUX_DEBUG)/xlColorCanvas.o: xlColorCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xlColorCanvas.cpp -o $(OBJDIR_LINUX_DEBUG)/xlColorCanvas.o

$(OBJDIR_LINUX_DEBUG)/xLightsXmlFile.o: xLightsXmlFile.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c xLightsXmlFile.cpp -o $(OBJDIR_LINUX_DEBUG)/xLightsXmlFile.o

$(OBJDIR_LINUX_DEBUG)/tmGridCell.o: tmGridCell.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c tmGridCell.cpp -o $(OBJDIR_LINUX_DEBUG)/tmGridCell.o

$(OBJDIR_LINUX_DEBUG)/utils/string_utils.o: utils/string_utils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c utils/string_utils.cpp -o $(OBJDIR_LINUX_DEBUG)/utils/string_utils.o

$(OBJDIR_LINUX_DEBUG)/utils/ip_utils.o: utils/ip_utils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c utils/ip_utils.cpp -o $(OBJDIR_LINUX_DEBUG)/utils/ip_utils.o

$(OBJDIR_LINUX_DEBUG)/utils/CurlManager.o: utils/CurlManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c utils/CurlManager.cpp -o $(OBJDIR_LINUX_DEBUG)/utils/CurlManager.o

$(OBJDIR_LINUX_DEBUG)/utils/Curl.o: utils/Curl.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c utils/Curl.cpp -o $(OBJDIR_LINUX_DEBUG)/utils/Curl.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/Files.o: vamp-hostsdk/Files.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/Files.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/Files.o

$(OBJDIR_LINUX_DEBUG)/support/VectorMath.o: support/VectorMath.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c support/VectorMath.cpp -o $(OBJDIR_LINUX_DEBUG)/support/VectorMath.o

$(OBJDIR_LINUX_DEBUG)/support/GridCellChoiceRenderer.o: support/GridCellChoiceRenderer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c support/GridCellChoiceRenderer.cpp -o $(OBJDIR_LINUX_DEBUG)/support/GridCellChoiceRenderer.o

$(OBJDIR_LINUX_DEBUG)/support/FastComboEditor.o: support/FastComboEditor.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c support/FastComboEditor.cpp -o $(OBJDIR_LINUX_DEBUG)/support/FastComboEditor.o

$(OBJDIR_LINUX_DEBUG)/support/EzGrid.o: support/EzGrid.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c support/EzGrid.cpp -o $(OBJDIR_LINUX_DEBUG)/support/EzGrid.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginWrapper.o: vamp-hostsdk/PluginWrapper.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginWrapper.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginWrapper.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginSummarisingAdapter.o: vamp-hostsdk/PluginSummarisingAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginSummarisingAdapter.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginSummarisingAdapter.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginLoader.o: vamp-hostsdk/PluginLoader.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginLoader.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginLoader.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginInputDomainAdapter.o: vamp-hostsdk/PluginInputDomainAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginInputDomainAdapter.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginInputDomainAdapter.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginHostAdapter.o: vamp-hostsdk/PluginHostAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginHostAdapter.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginHostAdapter.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginChannelAdapter.o: vamp-hostsdk/PluginChannelAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginChannelAdapter.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginChannelAdapter.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginBufferingAdapter.o: vamp-hostsdk/PluginBufferingAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/PluginBufferingAdapter.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/PluginBufferingAdapter.o

$(OBJDIR_LINUX_DEBUG)/preferences/ViewSettingsPanel.o: preferences/ViewSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/ViewSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/ViewSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/sequencer/EffectDropTarget.o: sequencer/EffectDropTarget.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/EffectDropTarget.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectDropTarget.o

$(OBJDIR_LINUX_DEBUG)/sequencer/Effect.o: sequencer/Effect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/Effect.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/Effect.o

$(OBJDIR_LINUX_DEBUG)/sequencer/DragEffectBitmapButton.o: sequencer/DragEffectBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/DragEffectBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/DragEffectBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/preferences/xLightsPreferences.o: preferences/xLightsPreferences.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/xLightsPreferences.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/xLightsPreferences.o

$(OBJDIR_LINUX_DEBUG)/sequencer/EffectLayer.o: sequencer/EffectLayer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/EffectLayer.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectLayer.o

$(OBJDIR_LINUX_DEBUG)/preferences/SequenceFileSettingsPanel.o: preferences/SequenceFileSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/SequenceFileSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/SequenceFileSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/RandomEffectsSettingsPanel.o: preferences/RandomEffectsSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/RandomEffectsSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/RandomEffectsSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/OutputSettingsPanel.o: preferences/OutputSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/OutputSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/OutputSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/preferences/OtherSettingsPanel.o: preferences/OtherSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c preferences/OtherSettingsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/preferences/OtherSettingsPanel.o

$(OBJDIR_LINUX_DEBUG)/sequencer/tabSequencer.o: sequencer/tabSequencer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/tabSequencer.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/tabSequencer.o

$(OBJDIR_LINUX_DEBUG)/sequencer/Waveform.o: sequencer/Waveform.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/Waveform.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/Waveform.o

$(OBJDIR_LINUX_DEBUG)/sequencer/UndoManager.o: sequencer/UndoManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/UndoManager.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/UndoManager.o

$(OBJDIR_LINUX_DEBUG)/sequencer/TimeLine.o: sequencer/TimeLine.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/TimeLine.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/TimeLine.o

$(OBJDIR_LINUX_DEBUG)/sequencer/SequenceElements.o: sequencer/SequenceElements.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/SequenceElements.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/SequenceElements.o

$(OBJDIR_LINUX_DEBUG)/sequencer/RowHeading.o: sequencer/RowHeading.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/RowHeading.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/RowHeading.o

$(OBJDIR_LINUX_DEBUG)/sequencer/MainSequencer.o: sequencer/MainSequencer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/MainSequencer.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/MainSequencer.o

$(OBJDIR_LINUX_DEBUG)/sequencer/Element.o: sequencer/Element.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/Element.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/Element.o

$(OBJDIR_LINUX_DEBUG)/sequencer/EffectsGrid.o: sequencer/EffectsGrid.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c sequencer/EffectsGrid.cpp -o $(OBJDIR_LINUX_DEBUG)/sequencer/EffectsGrid.o

$(OBJDIR_LINUX_DEBUG)/wxWEBPHandler/imagwebp.o: wxWEBPHandler/imagwebp.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c wxWEBPHandler/imagwebp.cpp -o $(OBJDIR_LINUX_DEBUG)/wxWEBPHandler/imagwebp.o

$(OBJDIR_LINUX_DEBUG)/wxModelGridCellRenderer.o: wxModelGridCellRenderer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c wxModelGridCellRenderer.cpp -o $(OBJDIR_LINUX_DEBUG)/wxModelGridCellRenderer.o

$(OBJDIR_LINUX_DEBUG)/wxCheckedListCtrl.o: wxCheckedListCtrl.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c wxCheckedListCtrl.cpp -o $(OBJDIR_LINUX_DEBUG)/wxCheckedListCtrl.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/host-c.o: vamp-hostsdk/host-c.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/host-c.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/host-c.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/acsymbols.o: vamp-hostsdk/acsymbols.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/acsymbols.c -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/acsymbols.o

$(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/RealTime.o: vamp-hostsdk/RealTime.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c vamp-hostsdk/RealTime.cpp -o $(OBJDIR_LINUX_DEBUG)/vamp-hostsdk/RealTime.o

$(OBJDIR_LINUX_DEBUG)/effects/SketchEffect.o: effects/SketchEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SketchEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SketchEffect.o

$(OBJDIR_LINUX_DEBUG)/NodeSelectGrid.o: NodeSelectGrid.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c NodeSelectGrid.cpp -o $(OBJDIR_LINUX_DEBUG)/NodeSelectGrid.o

$(OBJDIR_LINUX_DEBUG)/NewTimingDialog.o: NewTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c NewTimingDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/NewTimingDialog.o

$(OBJDIR_LINUX_DEBUG)/MusicXML.o: MusicXML.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MusicXML.cpp -o $(OBJDIR_LINUX_DEBUG)/MusicXML.o

$(OBJDIR_LINUX_DEBUG)/MultiControllerUploadDialog.o: MultiControllerUploadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MultiControllerUploadDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/MultiControllerUploadDialog.o

$(OBJDIR_LINUX_DEBUG)/Mouse3DManager.o: Mouse3DManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Mouse3DManager.cpp -o $(OBJDIR_LINUX_DEBUG)/Mouse3DManager.o

$(OBJDIR_LINUX_DEBUG)/ModelStateDialog.o: ModelStateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelStateDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelStateDialog.o

$(OBJDIR_LINUX_DEBUG)/ModelRemap.o: ModelRemap.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelRemap.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelRemap.o

$(OBJDIR_LINUX_DEBUG)/ModelPreview.o: ModelPreview.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelPreview.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelPreview.o

$(OBJDIR_LINUX_DEBUG)/ModelGroupPanel.o: ModelGroupPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelGroupPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelGroupPanel.o

$(OBJDIR_LINUX_DEBUG)/PerspectivesPanel.o: PerspectivesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PerspectivesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/PerspectivesPanel.o

$(OBJDIR_LINUX_DEBUG)/PathGenerationDialog.o: PathGenerationDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PathGenerationDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/PathGenerationDialog.o

$(OBJDIR_LINUX_DEBUG)/Parallel.o: Parallel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Parallel.cpp -o $(OBJDIR_LINUX_DEBUG)/Parallel.o

$(OBJDIR_LINUX_DEBUG)/PaletteMgmtDialog.o: PaletteMgmtDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PaletteMgmtDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/PaletteMgmtDialog.o

$(OBJDIR_LINUX_DEBUG)/OutputModelManager.o: OutputModelManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c OutputModelManager.cpp -o $(OBJDIR_LINUX_DEBUG)/OutputModelManager.o

$(OBJDIR_LINUX_DEBUG)/ModelFaceDialog.o: ModelFaceDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelFaceDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelFaceDialog.o

$(OBJDIR_LINUX_DEBUG)/OptionChooser.o: OptionChooser.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c OptionChooser.cpp -o $(OBJDIR_LINUX_DEBUG)/OptionChooser.o

$(OBJDIR_LINUX_DEBUG)/OpenGLShaders.o: OpenGLShaders.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c OpenGLShaders.cpp -o $(OBJDIR_LINUX_DEBUG)/OpenGLShaders.o

$(OBJDIR_LINUX_DEBUG)/NoteRangeDialog.o: NoteRangeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c NoteRangeDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/NoteRangeDialog.o

$(OBJDIR_LINUX_DEBUG)/NoteImportDialog.o: NoteImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c NoteImportDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/NoteImportDialog.o

$(OBJDIR_LINUX_DEBUG)/NodesGridCellEditor.o: NodesGridCellEditor.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c NodesGridCellEditor.cpp -o $(OBJDIR_LINUX_DEBUG)/NodesGridCellEditor.o

$(OBJDIR_LINUX_DEBUG)/LayoutGroup.o: LayoutGroup.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LayoutGroup.cpp -o $(OBJDIR_LINUX_DEBUG)/LayoutGroup.o

$(OBJDIR_LINUX_DEBUG)/LorConvertDialog.o: LorConvertDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LorConvertDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LorConvertDialog.o

$(OBJDIR_LINUX_DEBUG)/LinkJukeboxButtonDialog.o: LinkJukeboxButtonDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LinkJukeboxButtonDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LinkJukeboxButtonDialog.o

$(OBJDIR_LINUX_DEBUG)/LayoutUtils.o: LayoutUtils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LayoutUtils.cpp -o $(OBJDIR_LINUX_DEBUG)/LayoutUtils.o

$(OBJDIR_LINUX_DEBUG)/LayoutPanel.o: LayoutPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LayoutPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/LayoutPanel.o

$(OBJDIR_LINUX_DEBUG)/LyricUserDictDialog.o: LyricUserDictDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LyricUserDictDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LyricUserDictDialog.o

$(OBJDIR_LINUX_DEBUG)/LayerSelectDialog.o: LayerSelectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LayerSelectDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LayerSelectDialog.o

$(OBJDIR_LINUX_DEBUG)/LORPreview.o: LORPreview.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LORPreview.cpp -o $(OBJDIR_LINUX_DEBUG)/LORPreview.o

$(OBJDIR_LINUX_DEBUG)/LOREdit.o: LOREdit.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LOREdit.cpp -o $(OBJDIR_LINUX_DEBUG)/LOREdit.o

$(OBJDIR_LINUX_DEBUG)/LMSImportChannelMapDialog.o: LMSImportChannelMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LMSImportChannelMapDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LMSImportChannelMapDialog.o

$(OBJDIR_LINUX_DEBUG)/MatrixFaceDownloadDialog.o: MatrixFaceDownloadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MatrixFaceDownloadDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/MatrixFaceDownloadDialog.o

$(OBJDIR_LINUX_DEBUG)/ModelDimmingCurveDialog.o: ModelDimmingCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelDimmingCurveDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelDimmingCurveDialog.o

$(OBJDIR_LINUX_DEBUG)/ModelChainDialog.o: ModelChainDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ModelChainDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ModelChainDialog.o

$(OBJDIR_LINUX_DEBUG)/MetronomeLabelDialog.o: MetronomeLabelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MetronomeLabelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/MetronomeLabelDialog.o

$(OBJDIR_LINUX_DEBUG)/MediaImportOptionsDialog.o: MediaImportOptionsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MediaImportOptionsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/MediaImportOptionsDialog.o

$(OBJDIR_LINUX_DEBUG)/MIDI/MidiMessage.o: MIDI/MidiMessage.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MIDI/MidiMessage.cpp -o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiMessage.o

$(OBJDIR_LINUX_DEBUG)/MIDI/MidiFile.o: MIDI/MidiFile.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MIDI/MidiFile.cpp -o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiFile.o

$(OBJDIR_LINUX_DEBUG)/MIDI/MidiEventList.o: MIDI/MidiEventList.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MIDI/MidiEventList.cpp -o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiEventList.o

$(OBJDIR_LINUX_DEBUG)/MIDI/MidiEvent.o: MIDI/MidiEvent.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MIDI/MidiEvent.cpp -o $(OBJDIR_LINUX_DEBUG)/MIDI/MidiEvent.o

$(OBJDIR_LINUX_DEBUG)/MIDI/Binasc.o: MIDI/Binasc.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c MIDI/Binasc.cpp -o $(OBJDIR_LINUX_DEBUG)/MIDI/Binasc.o

$(OBJDIR_LINUX_DEBUG)/LyricsDialog.o: LyricsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c LyricsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/LyricsDialog.o

$(OBJDIR_LINUX_DEBUG)/SevenSegmentDialog.o: SevenSegmentDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SevenSegmentDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SevenSegmentDialog.o

$(OBJDIR_LINUX_DEBUG)/SequenceViewManager.o: SequenceViewManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SequenceViewManager.cpp -o $(OBJDIR_LINUX_DEBUG)/SequenceViewManager.o

$(OBJDIR_LINUX_DEBUG)/SequenceVideoPreview.o: SequenceVideoPreview.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SequenceVideoPreview.cpp -o $(OBJDIR_LINUX_DEBUG)/SequenceVideoPreview.o

$(OBJDIR_LINUX_DEBUG)/SequenceVideoPanel.o: SequenceVideoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SequenceVideoPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/SequenceVideoPanel.o

$(OBJDIR_LINUX_DEBUG)/SequencePackage.o: SequencePackage.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SequencePackage.cpp -o $(OBJDIR_LINUX_DEBUG)/SequencePackage.o

$(OBJDIR_LINUX_DEBUG)/SequenceData.o: SequenceData.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SequenceData.cpp -o $(OBJDIR_LINUX_DEBUG)/SequenceData.o

$(OBJDIR_LINUX_DEBUG)/SeqSettingsDialog.o: SeqSettingsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SeqSettingsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SeqSettingsDialog.o

$(OBJDIR_LINUX_DEBUG)/SeqFileUtilities.o: SeqFileUtilities.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SeqFileUtilities.cpp -o $(OBJDIR_LINUX_DEBUG)/SeqFileUtilities.o

$(OBJDIR_LINUX_DEBUG)/SeqExportDialog.o: SeqExportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SeqExportDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SeqExportDialog.o

$(OBJDIR_LINUX_DEBUG)/StrandNodeNamesDialog.o: StrandNodeNamesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c StrandNodeNamesDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/StrandNodeNamesDialog.o

$(OBJDIR_LINUX_DEBUG)/SuperStarImportDialog.o: SuperStarImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SuperStarImportDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SuperStarImportDialog.o

$(OBJDIR_LINUX_DEBUG)/SubModelsDialog.o: SubModelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SubModelsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SubModelsDialog.o

$(OBJDIR_LINUX_DEBUG)/SubModelGenerateDialog.o: SubModelGenerateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SubModelGenerateDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SubModelGenerateDialog.o

$(OBJDIR_LINUX_DEBUG)/SubBufferPanel.o: SubBufferPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SubBufferPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/SubBufferPanel.o

$(OBJDIR_LINUX_DEBUG)/SeqElementMismatchDialog.o: SeqElementMismatchDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SeqElementMismatchDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SeqElementMismatchDialog.o

$(OBJDIR_LINUX_DEBUG)/StartChannelDialog.o: StartChannelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c StartChannelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/StartChannelDialog.o

$(OBJDIR_LINUX_DEBUG)/SplashDialog.o: SplashDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SplashDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SplashDialog.o

$(OBJDIR_LINUX_DEBUG)/SpecialOptions.o: SpecialOptions.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SpecialOptions.cpp -o $(OBJDIR_LINUX_DEBUG)/SpecialOptions.o

$(OBJDIR_LINUX_DEBUG)/ShaderDownloadDialog.o: ShaderDownloadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ShaderDownloadDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ShaderDownloadDialog.o

$(OBJDIR_LINUX_DEBUG)/PreviewPane.o: PreviewPane.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PreviewPane.cpp -o $(OBJDIR_LINUX_DEBUG)/PreviewPane.o

$(OBJDIR_LINUX_DEBUG)/RenderCache.o: RenderCache.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RenderCache.cpp -o $(OBJDIR_LINUX_DEBUG)/RenderCache.o

$(OBJDIR_LINUX_DEBUG)/RenderBuffer.o: RenderBuffer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RenderBuffer.cpp -o $(OBJDIR_LINUX_DEBUG)/RenderBuffer.o

$(OBJDIR_LINUX_DEBUG)/Render.o: Render.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Render.cpp -o $(OBJDIR_LINUX_DEBUG)/Render.o

$(OBJDIR_LINUX_DEBUG)/RenameTextDialog.o: RenameTextDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RenameTextDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/RenameTextDialog.o

$(OBJDIR_LINUX_DEBUG)/RemapDMXChannelsDialog.o: RemapDMXChannelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RemapDMXChannelsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/RemapDMXChannelsDialog.o

$(OBJDIR_LINUX_DEBUG)/Pixels.o: Pixels.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Pixels.cpp -o $(OBJDIR_LINUX_DEBUG)/Pixels.o

$(OBJDIR_LINUX_DEBUG)/PixelTestDialog.o: PixelTestDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PixelTestDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/PixelTestDialog.o

$(OBJDIR_LINUX_DEBUG)/PixelBuffer.o: PixelBuffer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PixelBuffer.cpp -o $(OBJDIR_LINUX_DEBUG)/PixelBuffer.o

$(OBJDIR_LINUX_DEBUG)/PhonemeDictionary.o: PhonemeDictionary.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c PhonemeDictionary.cpp -o $(OBJDIR_LINUX_DEBUG)/PhonemeDictionary.o

$(OBJDIR_LINUX_DEBUG)/SaveChangesDialog.o: SaveChangesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SaveChangesDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SaveChangesDialog.o

$(OBJDIR_LINUX_DEBUG)/SelectTimingsDialog.o: SelectTimingsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SelectTimingsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/SelectTimingsDialog.o

$(OBJDIR_LINUX_DEBUG)/SelectPanel.o: SelectPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SelectPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/SelectPanel.o

$(OBJDIR_LINUX_DEBUG)/SearchPanel.o: SearchPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c SearchPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/SearchPanel.o

$(OBJDIR_LINUX_DEBUG)/ScriptsDialog.o: ScriptsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ScriptsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ScriptsDialog.o

$(OBJDIR_LINUX_DEBUG)/RestoreBackupDialog.o: RestoreBackupDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RestoreBackupDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/RestoreBackupDialog.o

$(OBJDIR_LINUX_DEBUG)/ResizeImageDialog.o: ResizeImageDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ResizeImageDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ResizeImageDialog.o

$(OBJDIR_LINUX_DEBUG)/RenderProgressDialog.o: RenderProgressDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c RenderProgressDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/RenderProgressDialog.o

$(OBJDIR_LINUX_DEBUG)/CheckboxSelectDialog.o: CheckboxSelectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CheckboxSelectDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/CheckboxSelectDialog.o

$(OBJDIR_LINUX_DEBUG)/CharMapDialog.o: CharMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CharMapDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/CharMapDialog.o

$(OBJDIR_LINUX_DEBUG)/ChannelLayoutDialog.o: ChannelLayoutDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ChannelLayoutDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ChannelLayoutDialog.o

$(OBJDIR_LINUX_DEBUG)/CachedFileDownloader.o: CachedFileDownloader.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CachedFileDownloader.cpp -o $(OBJDIR_LINUX_DEBUG)/CachedFileDownloader.o

$(OBJDIR_LINUX_DEBUG)/BulkEditSliderDialog.o: BulkEditSliderDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BulkEditSliderDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BulkEditSliderDialog.o

$(OBJDIR_LINUX_DEBUG)/BulkEditFontPickerDialog.o: BulkEditFontPickerDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BulkEditFontPickerDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BulkEditFontPickerDialog.o

$(OBJDIR_LINUX_DEBUG)/BulkEditControls.o: BulkEditControls.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BulkEditControls.cpp -o $(OBJDIR_LINUX_DEBUG)/BulkEditControls.o

$(OBJDIR_LINUX_DEBUG)/BulkEditComboDialog.o: BulkEditComboDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BulkEditComboDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BulkEditComboDialog.o

$(OBJDIR_LINUX_DEBUG)/BulkEditColourPickerDialog.o: BulkEditColourPickerDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BulkEditColourPickerDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BulkEditColourPickerDialog.o

$(OBJDIR_LINUX_DEBUG)/ConvertDialog.o: ConvertDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ConvertDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ConvertDialog.o

$(OBJDIR_LINUX_DEBUG)/ControllerModelDialog.o: ControllerModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ControllerModelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ControllerModelDialog.o

$(OBJDIR_LINUX_DEBUG)/ControllerConnectionDialog.o: ControllerConnectionDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ControllerConnectionDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ControllerConnectionDialog.o

$(OBJDIR_LINUX_DEBUG)/ColoursPanel.o: ColoursPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColoursPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ColoursPanel.o

$(OBJDIR_LINUX_DEBUG)/ColourReplaceDialog.o: ColourReplaceDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColourReplaceDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ColourReplaceDialog.o

$(OBJDIR_LINUX_DEBUG)/BufferSizeDialog.o: BufferSizeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BufferSizeDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BufferSizeDialog.o

$(OBJDIR_LINUX_DEBUG)/ColorPanel.o: ColorPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColorPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ColorPanel.o

$(OBJDIR_LINUX_DEBUG)/ColorManager.o: ColorManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColorManager.cpp -o $(OBJDIR_LINUX_DEBUG)/ColorManager.o

$(OBJDIR_LINUX_DEBUG)/ColorCurveDialog.o: ColorCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColorCurveDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ColorCurveDialog.o

$(OBJDIR_LINUX_DEBUG)/ColorCurve.o: ColorCurve.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ColorCurve.cpp -o $(OBJDIR_LINUX_DEBUG)/ColorCurve.o

$(OBJDIR_LINUX_DEBUG)/Color.o: Color.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Color.cpp -o $(OBJDIR_LINUX_DEBUG)/Color.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/message.o: ../xSchedule/wxHTTPServer/message.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/message.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/message.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/status.o: ../xSchedule/wxHTTPServer/status.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/status.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/status.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/sha1.o: ../xSchedule/wxHTTPServer/sha1.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/sha1.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/sha1.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/server.o: ../xSchedule/wxHTTPServer/server.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/server.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/server.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/response.o: ../xSchedule/wxHTTPServer/response.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/response.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/response.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/request.o: ../xSchedule/wxHTTPServer/request.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/request.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/request.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/pages.o: ../xSchedule/wxHTTPServer/pages.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/pages.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/pages.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonreader.o: ../xSchedule/wxJSON/jsonreader.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxJSON/jsonreader.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonreader.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/context.o: ../xSchedule/wxHTTPServer/context.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/context.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/context.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/connection.o: ../xSchedule/wxHTTPServer/connection.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxHTTPServer/connection.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxHTTPServer/connection.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/md5.o: ../xSchedule/md5.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/md5.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/md5.o

$(OBJDIR_LINUX_DEBUG)/__/xFade/wxLED.o: ../xFade/wxLED.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xFade/wxLED.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xFade/wxLED.o

$(OBJDIR_LINUX_DEBUG)/BufferPanel.o: BufferPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BufferPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/BufferPanel.o

$(OBJDIR_LINUX_DEBUG)/BitmapCache.o: BitmapCache.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BitmapCache.cpp -o $(OBJDIR_LINUX_DEBUG)/BitmapCache.o

$(OBJDIR_LINUX_DEBUG)/BatchRenderDialog.o: BatchRenderDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c BatchRenderDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/BatchRenderDialog.o

$(OBJDIR_LINUX_DEBUG)/AutoLabelDialog.o: AutoLabelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c AutoLabelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/AutoLabelDialog.o

$(OBJDIR_LINUX_DEBUG)/AudioManager.o: AudioManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c AudioManager.cpp -o $(OBJDIR_LINUX_DEBUG)/AudioManager.o

$(OBJDIR_LINUX_DEBUG)/AlignmentDialog.o: AlignmentDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c AlignmentDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/AlignmentDialog.o

$(OBJDIR_LINUX_DEBUG)/AboutDialog.o: AboutDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c AboutDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/AboutDialog.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonwriter.o: ../xSchedule/wxJSON/jsonwriter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxJSON/jsonwriter.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonwriter.o

$(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonval.o: ../xSchedule/wxJSON/jsonval.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../xSchedule/wxJSON/jsonval.cpp -o $(OBJDIR_LINUX_DEBUG)/__/xSchedule/wxJSON/jsonval.o

$(OBJDIR_LINUX_DEBUG)/GPURenderUtils.o: GPURenderUtils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c GPURenderUtils.cpp -o $(OBJDIR_LINUX_DEBUG)/GPURenderUtils.o

$(OBJDIR_LINUX_DEBUG)/FontManager.o: FontManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c FontManager.cpp -o $(OBJDIR_LINUX_DEBUG)/FontManager.o

$(OBJDIR_LINUX_DEBUG)/FlickerFreeBitmapButton.o: FlickerFreeBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c FlickerFreeBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/FlickerFreeBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/FindDataPanel.o: FindDataPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c FindDataPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/FindDataPanel.o

$(OBJDIR_LINUX_DEBUG)/FileConverter.o: FileConverter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c FileConverter.cpp -o $(OBJDIR_LINUX_DEBUG)/FileConverter.o

$(OBJDIR_LINUX_DEBUG)/FSEQFile.o: FSEQFile.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c FSEQFile.cpp -o $(OBJDIR_LINUX_DEBUG)/FSEQFile.o

$(OBJDIR_LINUX_DEBUG)/ExportSettings.o: ExportSettings.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ExportSettings.cpp -o $(OBJDIR_LINUX_DEBUG)/ExportSettings.o

$(OBJDIR_LINUX_DEBUG)/ExportModelSelect.o: ExportModelSelect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ExportModelSelect.cpp -o $(OBJDIR_LINUX_DEBUG)/ExportModelSelect.o

$(OBJDIR_LINUX_DEBUG)/EmailDialog.o: EmailDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EmailDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EmailDialog.o

$(OBJDIR_LINUX_DEBUG)/KeyBindings.o: KeyBindings.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c KeyBindings.cpp -o $(OBJDIR_LINUX_DEBUG)/KeyBindings.o

$(OBJDIR_LINUX_DEBUG)/KeyBindingEditDialog.o: KeyBindingEditDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c KeyBindingEditDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/KeyBindingEditDialog.o

$(OBJDIR_LINUX_DEBUG)/JukeboxPanel.o: JukeboxPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c JukeboxPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/JukeboxPanel.o

$(OBJDIR_LINUX_DEBUG)/JobPool.o: JobPool.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c JobPool.cpp -o $(OBJDIR_LINUX_DEBUG)/JobPool.o

$(OBJDIR_LINUX_DEBUG)/ImportPreviewsModelsDialog.o: ImportPreviewsModelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ImportPreviewsModelsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ImportPreviewsModelsDialog.o

$(OBJDIR_LINUX_DEBUG)/EffectsPanel.o: EffectsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectsPanel.o

$(OBJDIR_LINUX_DEBUG)/IPEntryDialog.o: IPEntryDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c IPEntryDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/IPEntryDialog.o

$(OBJDIR_LINUX_DEBUG)/HousePreviewPanel.o: HousePreviewPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c HousePreviewPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/HousePreviewPanel.o

$(OBJDIR_LINUX_DEBUG)/GenerateLyricsDialog.o: GenerateLyricsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c GenerateLyricsDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/GenerateLyricsDialog.o

$(OBJDIR_LINUX_DEBUG)/GenerateCustomModelDialog.o: GenerateCustomModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c GenerateCustomModelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/GenerateCustomModelDialog.o

$(OBJDIR_LINUX_DEBUG)/DataLayer.o: DataLayer.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DataLayer.cpp -o $(OBJDIR_LINUX_DEBUG)/DataLayer.o

$(OBJDIR_LINUX_DEBUG)/DragColoursBitmapButton.o: DragColoursBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DragColoursBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/DragColoursBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/DissolveTransitionPattern.o: DissolveTransitionPattern.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DissolveTransitionPattern.cpp -o $(OBJDIR_LINUX_DEBUG)/DissolveTransitionPattern.o

$(OBJDIR_LINUX_DEBUG)/Discovery.o: Discovery.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Discovery.cpp -o $(OBJDIR_LINUX_DEBUG)/Discovery.o

$(OBJDIR_LINUX_DEBUG)/DimmingCurvePanel.o: DimmingCurvePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DimmingCurvePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/DimmingCurvePanel.o

$(OBJDIR_LINUX_DEBUG)/DimmingCurve.o: DimmingCurve.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DimmingCurve.cpp -o $(OBJDIR_LINUX_DEBUG)/DimmingCurve.o

$(OBJDIR_LINUX_DEBUG)/CustomTimingDialog.o: CustomTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CustomTimingDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/CustomTimingDialog.o

$(OBJDIR_LINUX_DEBUG)/CustomModelDialog.o: CustomModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CustomModelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/CustomModelDialog.o

$(OBJDIR_LINUX_DEBUG)/CopyFormat1.o: CopyFormat1.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c CopyFormat1.cpp -o $(OBJDIR_LINUX_DEBUG)/CopyFormat1.o

$(OBJDIR_LINUX_DEBUG)/ConvertLogDialog.o: ConvertLogDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ConvertLogDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ConvertLogDialog.o

$(OBJDIR_LINUX_DEBUG)/EffectAssist.o: EffectAssist.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectAssist.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectAssist.o

$(OBJDIR_LINUX_DEBUG)/EffectTreeDialog.o: EffectTreeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectTreeDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectTreeDialog.o

$(OBJDIR_LINUX_DEBUG)/EffectTimingDialog.o: EffectTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectTimingDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectTimingDialog.o

$(OBJDIR_LINUX_DEBUG)/EffectListDialog.o: EffectListDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectListDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectListDialog.o

$(OBJDIR_LINUX_DEBUG)/EffectIconPanel.o: EffectIconPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EffectIconPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/EffectIconPanel.o

$(OBJDIR_LINUX_DEBUG)/TabConvert.o: TabConvert.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TabConvert.cpp -o $(OBJDIR_LINUX_DEBUG)/TabConvert.o

$(OBJDIR_LINUX_DEBUG)/EditSubmodelAliasesDialog.o: EditSubmodelAliasesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EditSubmodelAliasesDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EditSubmodelAliasesDialog.o

$(OBJDIR_LINUX_DEBUG)/EditAliasesDialog.o: EditAliasesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c EditAliasesDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/EditAliasesDialog.o

$(OBJDIR_LINUX_DEBUG)/DuplicateDialog.o: DuplicateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DuplicateDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/DuplicateDialog.o

$(OBJDIR_LINUX_DEBUG)/DragValueCurveBitmapButton.o: DragValueCurveBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c DragValueCurveBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/DragValueCurveBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/effects/LifeEffect.o: effects/LifeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LifeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LifeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/LinesEffect.o: effects/LinesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LinesEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LinesEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/LightningPanel.o: effects/LightningPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LightningPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LightningPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/LightningEffect.o: effects/LightningEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LightningEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LightningEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/LifePanel.o: effects/LifePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LifePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LifePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/LinesPanel.o: effects/LinesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LinesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LinesPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopePanel.o: effects/KaleidoscopePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/KaleidoscopePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopeEffect.o: effects/KaleidoscopeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/KaleidoscopeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/KaleidoscopeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/GuitarPanel.o: effects/GuitarPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GuitarPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GuitarPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/GuitarEffect.o: effects/GuitarEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GuitarEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GuitarEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadEffect.o: effects/MovingHeadEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MorphPanel.o: effects/MorphPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MorphPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MorphPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MorphEffect.o: effects/MorphEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MorphEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MorphEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MeteorsPanel.o: effects/MeteorsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MeteorsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MeteorsPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MeteorsEffect.o: effects/MeteorsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MeteorsEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MeteorsEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MarqueePanel.o: effects/MarqueePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MarqueePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MarqueePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MarqueeEffect.o: effects/MarqueeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MarqueeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MarqueeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/LiquidPanel.o: effects/LiquidPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LiquidPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LiquidPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/LiquidEffect.o: effects/LiquidEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/LiquidEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/LiquidEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/FanEffect.o: effects/FanEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FanEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FanEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/FireEffect.o: effects/FireEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FireEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FireEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/FillPanel.o: effects/FillPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FillPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FillPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/FillEffect.o: effects/FillEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FillEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FillEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/FanPanel.o: effects/FanPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FanPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FanPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/FirePanel.o: effects/FirePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FirePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FirePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/FacesPanel.o: effects/FacesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FacesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FacesPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/FacesEffect.o: effects/FacesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FacesEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FacesEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/FX.o: effects/FX.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FX.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FX.o

$(OBJDIR_LINUX_DEBUG)/effects/EffectPanelUtils.o: effects/EffectPanelUtils.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/EffectPanelUtils.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/EffectPanelUtils.o

$(OBJDIR_LINUX_DEBUG)/effects/GlediatorPanel.o: effects/GlediatorPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GlediatorPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GlediatorPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/GlediatorEffect.o: effects/GlediatorEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GlediatorEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GlediatorEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/GarlandsPanel.o: effects/GarlandsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GarlandsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GarlandsPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/GarlandsEffect.o: effects/GarlandsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GarlandsEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GarlandsEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/GalaxyPanel.o: effects/GalaxyPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GalaxyPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GalaxyPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/GalaxyEffect.o: effects/GalaxyEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GalaxyEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GalaxyEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/GIFImage.o: effects/GIFImage.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/GIFImage.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/GIFImage.o

$(OBJDIR_LINUX_DEBUG)/effects/FireworksPanel.o: effects/FireworksPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FireworksPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FireworksPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/FireworksEffect.o: effects/FireworksEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/FireworksEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/FireworksEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ShaderEffect.o: effects/ShaderEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShaderEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShaderEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ServoPanel.o: effects/ServoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ServoPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ServoPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/ServoEffect.o: effects/ServoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ServoEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ServoEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/RipplePanel.o: effects/RipplePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/RipplePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/RipplePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/RippleEffect.o: effects/RippleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/RippleEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/RippleEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/RenderableEffect.o: effects/RenderableEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/RenderableEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/RenderableEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/PlasmaPanel.o: effects/PlasmaPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PlasmaPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PlasmaPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/PlasmaEffect.o: effects/PlasmaEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PlasmaEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PlasmaEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/PinwheelPanel.o: effects/PinwheelPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PinwheelPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PinwheelPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/ShimmerPanel.o: effects/ShimmerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShimmerPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShimmerPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SingleStrandPanel.o: effects/SingleStrandPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SingleStrandPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SingleStrandPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/SingleStrandEffect.o: effects/SingleStrandEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/SingleStrandEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/SingleStrandEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ShockwavePanel.o: effects/ShockwavePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShockwavePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShockwavePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/ShockwaveEffect.o: effects/ShockwaveEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShockwaveEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShockwaveEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/PinwheelEffect.o: effects/PinwheelEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PinwheelEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PinwheelEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ShimmerEffect.o: effects/ShimmerEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShimmerEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShimmerEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ShapePanel.o: effects/ShapePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShapePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShapePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/ShapeEffect.o: effects/ShapeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShapeEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShapeEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ShaderPanel.o: effects/ShaderPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ShaderPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ShaderPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MusicEffect.o: effects/MusicEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MusicEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MusicEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o: effects/MovingHeadPanels/MovingHeadDimmerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MovingHeadDimmerPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o: effects/MovingHeadPanels/MovingHeadCanvasPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MovingHeadCanvasPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHRgbPickerPanel.o: effects/MovingHeadPanels/MHRgbPickerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MHRgbPickerPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHRgbPickerPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPresetBitmapButton.o: effects/MovingHeadPanels/MHPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MHPresetBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPresetBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o: effects/MovingHeadPanels/MHPathPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MHPathPresetBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o: effects/MovingHeadPanels/MHDimmerPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MHDimmerPresetBitmapButton.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHColorWheelPanel.o: effects/MovingHeadPanels/MHColorWheelPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanels/MHColorWheelPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanels/MHColorWheelPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanel.o: effects/MovingHeadPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MovingHeadPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MovingHeadPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/OnPanel.o: effects/OnPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/OnPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/OnPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/PicturesPanel.o: effects/PicturesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PicturesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PicturesPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/PicturesEffect.o: effects/PicturesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PicturesEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PicturesEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/PianoPanel.o: effects/PianoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PianoPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PianoPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/PianoEffect.o: effects/PianoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/PianoEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/PianoEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/OnEffect.o: effects/OnEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/OnEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/OnEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/OffPanel.o: effects/OffPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/OffPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/OffPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/OffEffect.o: effects/OffEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/OffEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/OffEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/MusicPanel.o: effects/MusicPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/MusicPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/MusicPanel.o

$(OBJDIR_LINUX_DEBUG)/WiringDialog.o: WiringDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c WiringDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/WiringDialog.o

$(OBJDIR_LINUX_DEBUG)/VsaImportDialog.o: VsaImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VsaImportDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/VsaImportDialog.o

$(OBJDIR_LINUX_DEBUG)/Vixen3.o: Vixen3.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c Vixen3.cpp -o $(OBJDIR_LINUX_DEBUG)/Vixen3.o

$(OBJDIR_LINUX_DEBUG)/ViewsModelsPanel.o: ViewsModelsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ViewsModelsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ViewsModelsPanel.o

$(OBJDIR_LINUX_DEBUG)/automation/LuaRunner.o: automation/LuaRunner.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c automation/LuaRunner.cpp -o $(OBJDIR_LINUX_DEBUG)/automation/LuaRunner.o

$(OBJDIR_LINUX_DEBUG)/ViewpointMgr.o: ViewpointMgr.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ViewpointMgr.cpp -o $(OBJDIR_LINUX_DEBUG)/ViewpointMgr.o

$(OBJDIR_LINUX_DEBUG)/ViewpointDialog.o: ViewpointDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ViewpointDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ViewpointDialog.o

$(OBJDIR_LINUX_DEBUG)/ViewObjectPanel.o: ViewObjectPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ViewObjectPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ViewObjectPanel.o

$(OBJDIR_LINUX_DEBUG)/VideoReader.o: VideoReader.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VideoReader.cpp -o $(OBJDIR_LINUX_DEBUG)/VideoReader.o

$(OBJDIR_LINUX_DEBUG)/controllers/AlphaPix.o: controllers/AlphaPix.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/AlphaPix.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/AlphaPix.o

$(OBJDIR_LINUX_DEBUG)/cad/VRMLWriter.o: cad/VRMLWriter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/VRMLWriter.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/VRMLWriter.o

$(OBJDIR_LINUX_DEBUG)/cad/STLWriter.o: cad/STLWriter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/STLWriter.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/STLWriter.o

$(OBJDIR_LINUX_DEBUG)/cad/ModelToCAD.o: cad/ModelToCAD.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/ModelToCAD.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/ModelToCAD.o

$(OBJDIR_LINUX_DEBUG)/cad/DXFWriter.o: cad/DXFWriter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/DXFWriter.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/DXFWriter.o

$(OBJDIR_LINUX_DEBUG)/VideoExporter.o: VideoExporter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VideoExporter.cpp -o $(OBJDIR_LINUX_DEBUG)/VideoExporter.o

$(OBJDIR_LINUX_DEBUG)/cad/CADWriter.o: cad/CADWriter.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/CADWriter.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/CADWriter.o

$(OBJDIR_LINUX_DEBUG)/cad/CADModel.o: cad/CADModel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c cad/CADModel.cpp -o $(OBJDIR_LINUX_DEBUG)/cad/CADModel.o

$(OBJDIR_LINUX_DEBUG)/automation/xLightsAutomations.o: automation/xLightsAutomations.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c automation/xLightsAutomations.cpp -o $(OBJDIR_LINUX_DEBUG)/automation/xLightsAutomations.o

$(OBJDIR_LINUX_DEBUG)/automation/automation.o: automation/automation.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c automation/automation.cpp -o $(OBJDIR_LINUX_DEBUG)/automation/automation.o

$(OBJDIR_LINUX_DEBUG)/UtilFunctions.o: UtilFunctions.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c UtilFunctions.cpp -o $(OBJDIR_LINUX_DEBUG)/UtilFunctions.o

$(OBJDIR_LINUX_DEBUG)/UtilClasses.o: UtilClasses.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c UtilClasses.cpp -o $(OBJDIR_LINUX_DEBUG)/UtilClasses.o

$(OBJDIR_LINUX_DEBUG)/UpdaterDialog.o: UpdaterDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c UpdaterDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/UpdaterDialog.o

$(OBJDIR_LINUX_DEBUG)/TraceLog.o: TraceLog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TraceLog.cpp -o $(OBJDIR_LINUX_DEBUG)/TraceLog.o

$(OBJDIR_LINUX_DEBUG)/TopEffectsPanel.o: TopEffectsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TopEffectsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/TopEffectsPanel.o

$(OBJDIR_LINUX_DEBUG)/TipOfTheDayDialog.o: TipOfTheDayDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TipOfTheDayDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/TipOfTheDayDialog.o

$(OBJDIR_LINUX_DEBUG)/TimingPanel.o: TimingPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TimingPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/TimingPanel.o

$(OBJDIR_LINUX_DEBUG)/TempFileManager.o: TempFileManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TempFileManager.cpp -o $(OBJDIR_LINUX_DEBUG)/TempFileManager.o

$(OBJDIR_LINUX_DEBUG)/TabSetup.o: TabSetup.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TabSetup.cpp -o $(OBJDIR_LINUX_DEBUG)/TabSetup.o

$(OBJDIR_LINUX_DEBUG)/TabSequence.o: TabSequence.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TabSequence.cpp -o $(OBJDIR_LINUX_DEBUG)/TabSequence.o

$(OBJDIR_LINUX_DEBUG)/TabPreview.o: TabPreview.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c TabPreview.cpp -o $(OBJDIR_LINUX_DEBUG)/TabPreview.o

$(OBJDIR_LINUX_DEBUG)/ValueCurveDialog.o: ValueCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ValueCurveDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/ValueCurveDialog.o

$(OBJDIR_LINUX_DEBUG)/VendorMusicHelpers.o: VendorMusicHelpers.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VendorMusicHelpers.cpp -o $(OBJDIR_LINUX_DEBUG)/VendorMusicHelpers.o

$(OBJDIR_LINUX_DEBUG)/VendorMusicDialog.o: VendorMusicDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VendorMusicDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/VendorMusicDialog.o

$(OBJDIR_LINUX_DEBUG)/VendorModelDialog.o: VendorModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VendorModelDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/VendorModelDialog.o

$(OBJDIR_LINUX_DEBUG)/ValueCurvesPanel.o: ValueCurvesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ValueCurvesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/ValueCurvesPanel.o

$(OBJDIR_LINUX_DEBUG)/ValueCurveButton.o: ValueCurveButton.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ValueCurveButton.cpp -o $(OBJDIR_LINUX_DEBUG)/ValueCurveButton.o

$(OBJDIR_LINUX_DEBUG)/ValueCurve.o: ValueCurve.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ValueCurve.cpp -o $(OBJDIR_LINUX_DEBUG)/ValueCurve.o

$(OBJDIR_LINUX_DEBUG)/VSAFile.o: VSAFile.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VSAFile.cpp -o $(OBJDIR_LINUX_DEBUG)/VSAFile.o

$(OBJDIR_LINUX_DEBUG)/VAMPPluginDialog.o: VAMPPluginDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c VAMPPluginDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/VAMPPluginDialog.o

$(OBJDIR_LINUX_DEBUG)/effects/ButterflyEffect.o: effects/ButterflyEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ButterflyEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ButterflyEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/CirclesEffect.o: effects/CirclesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CirclesEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CirclesEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/CandlePanel.o: effects/CandlePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CandlePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CandlePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/CandleEffect.o: effects/CandleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CandleEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CandleEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ButterflyPanel.o: effects/ButterflyPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ButterflyPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ButterflyPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/CirclesPanel.o: effects/CirclesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CirclesPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CirclesPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/BarsPanel.o: effects/BarsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/BarsPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/BarsPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/BarsEffect.o: effects/BarsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/BarsEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/BarsEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/AdjustPanel.o: effects/AdjustPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/AdjustPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/AdjustPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/EffectManager.o: effects/EffectManager.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/EffectManager.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/EffectManager.o

$(OBJDIR_LINUX_DEBUG)/effects/DuplicatePanel.o: effects/DuplicatePanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/DuplicatePanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/DuplicatePanel.o

$(OBJDIR_LINUX_DEBUG)/effects/DuplicateEffect.o: effects/DuplicateEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/DuplicateEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/DuplicateEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/DMXPanel.o: effects/DMXPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/DMXPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/DMXPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/DMXEffect.o: effects/DMXEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/DMXEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/DMXEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/AdjustEffect.o: effects/AdjustEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/AdjustEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/AdjustEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/CurtainPanel.o: effects/CurtainPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CurtainPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CurtainPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/CurtainEffect.o: effects/CurtainEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/CurtainEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/CurtainEffect.o

$(OBJDIR_LINUX_DEBUG)/effects/ColorWashPanel.o: effects/ColorWashPanel.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ColorWashPanel.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ColorWashPanel.o

$(OBJDIR_LINUX_DEBUG)/effects/ColorWashEffect.o: effects/ColorWashEffect.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c effects/ColorWashEffect.cpp -o $(OBJDIR_LINUX_DEBUG)/effects/ColorWashEffect.o

$(OBJDIR_LINUX_DEBUG)/controllers/Experience.o: controllers/Experience.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/Experience.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/Experience.o

$(OBJDIR_LINUX_DEBUG)/controllers/Falcon.o: controllers/Falcon.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/Falcon.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/Falcon.o

$(OBJDIR_LINUX_DEBUG)/controllers/FPPUploadProgressDialog.o: controllers/FPPUploadProgressDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/FPPUploadProgressDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/FPPUploadProgressDialog.o

$(OBJDIR_LINUX_DEBUG)/controllers/FPPConnectDialog.o: controllers/FPPConnectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/FPPConnectDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/FPPConnectDialog.o

$(OBJDIR_LINUX_DEBUG)/controllers/FPP.o: controllers/FPP.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/FPP.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/FPP.o

$(OBJDIR_LINUX_DEBUG)/controllers/HinksPix.o: controllers/HinksPix.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/HinksPix.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/HinksPix.o

$(OBJDIR_LINUX_DEBUG)/controllers/ESPixelStick.o: controllers/ESPixelStick.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/ESPixelStick.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/ESPixelStick.o

$(OBJDIR_LINUX_DEBUG)/controllers/ControllerUploadData.o: controllers/ControllerUploadData.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/ControllerUploadData.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/ControllerUploadData.o

$(OBJDIR_LINUX_DEBUG)/controllers/ControllerCaps.o: controllers/ControllerCaps.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/ControllerCaps.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/ControllerCaps.o

$(OBJDIR_LINUX_DEBUG)/controllers/BaseController.o: controllers/BaseController.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/BaseController.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/BaseController.o

$(OBJDIR_LINUX_DEBUG)/controllers/WebSocketClient.o: controllers/WebSocketClient.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/WebSocketClient.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/WebSocketClient.o

$(OBJDIR_LINUX_DEBUG)/controllers/WLED.o: controllers/WLED.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/WLED.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/WLED.o

$(OBJDIR_LINUX_DEBUG)/controllers/SanDevices.o: controllers/SanDevices.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/SanDevices.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/SanDevices.o

$(OBJDIR_LINUX_DEBUG)/controllers/Pixlite16.o: controllers/Pixlite16.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/Pixlite16.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/Pixlite16.o

$(OBJDIR_LINUX_DEBUG)/__/common/xlBaseApp.o: ../common/xlBaseApp.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c ../common/xlBaseApp.cpp -o $(OBJDIR_LINUX_DEBUG)/__/common/xlBaseApp.o

$(OBJDIR_LINUX_DEBUG)/controllers/Minleon.o: controllers/Minleon.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/Minleon.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/Minleon.o

$(OBJDIR_LINUX_DEBUG)/controllers/J1Sys.o: controllers/J1Sys.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/J1Sys.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/J1Sys.o

$(OBJDIR_LINUX_DEBUG)/controllers/ILightThat.o: controllers/ILightThat.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/ILightThat.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/ILightThat.o

$(OBJDIR_LINUX_DEBUG)/controllers/HinksPixExportDialog.o: controllers/HinksPixExportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c controllers/HinksPixExportDialog.cpp -o $(OBJDIR_LINUX_DEBUG)/controllers/HinksPixExportDialog.o

clean_linux_debug: 
	rm -f $(OBJ_LINUX_DEBUG) $(OUT_LINUX_DEBUG)

before_linux_release: 
	@test -d ../bin || mkdir -p ../bin
	@test -d $(OBJDIR_LINUX_RELEASE)/models || mkdir -p $(OBJDIR_LINUX_RELEASE)/models
	@test -d $(OBJDIR_LINUX_RELEASE)/models/DMX || mkdir -p $(OBJDIR_LINUX_RELEASE)/models/DMX
	@test -d $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads || mkdir -p $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads
	@test -d $(OBJDIR_LINUX_RELEASE)/outputs || mkdir -p $(OBJDIR_LINUX_RELEASE)/outputs
	@test -d $(OBJDIR_LINUX_RELEASE)/preferences || mkdir -p $(OBJDIR_LINUX_RELEASE)/preferences
	@test -d $(OBJDIR_LINUX_RELEASE)/effects || mkdir -p $(OBJDIR_LINUX_RELEASE)/effects
	@test -d $(OBJDIR_LINUX_RELEASE)/effects/assist || mkdir -p $(OBJDIR_LINUX_RELEASE)/effects/assist
	@test -d $(OBJDIR_LINUX_RELEASE)/graphics/opengl || mkdir -p $(OBJDIR_LINUX_RELEASE)/graphics/opengl
	@test -d $(OBJDIR_LINUX_RELEASE)/kiss_fft/tools || mkdir -p $(OBJDIR_LINUX_RELEASE)/kiss_fft/tools
	@test -d $(OBJDIR_LINUX_RELEASE)/kiss_fft || mkdir -p $(OBJDIR_LINUX_RELEASE)/kiss_fft
	@test -d $(OBJDIR_LINUX_RELEASE)/graphics || mkdir -p $(OBJDIR_LINUX_RELEASE)/graphics
	@test -d $(OBJDIR_LINUX_RELEASE) || mkdir -p $(OBJDIR_LINUX_RELEASE)
	@test -d $(OBJDIR_LINUX_RELEASE)/utils || mkdir -p $(OBJDIR_LINUX_RELEASE)/utils
	@test -d $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk || mkdir -p $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk
	@test -d $(OBJDIR_LINUX_RELEASE)/support || mkdir -p $(OBJDIR_LINUX_RELEASE)/support
	@test -d $(OBJDIR_LINUX_RELEASE)/sequencer || mkdir -p $(OBJDIR_LINUX_RELEASE)/sequencer
	@test -d $(OBJDIR_LINUX_RELEASE)/wxWEBPHandler || mkdir -p $(OBJDIR_LINUX_RELEASE)/wxWEBPHandler
	@test -d $(OBJDIR_LINUX_RELEASE)/MIDI || mkdir -p $(OBJDIR_LINUX_RELEASE)/MIDI
	@test -d $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer || mkdir -p $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer
	@test -d $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON || mkdir -p $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON
	@test -d $(OBJDIR_LINUX_RELEASE)/__/xSchedule || mkdir -p $(OBJDIR_LINUX_RELEASE)/__/xSchedule
	@test -d $(OBJDIR_LINUX_RELEASE)/__/xFade || mkdir -p $(OBJDIR_LINUX_RELEASE)/__/xFade
	@test -d $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels || mkdir -p $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels
	@test -d $(OBJDIR_LINUX_RELEASE)/automation || mkdir -p $(OBJDIR_LINUX_RELEASE)/automation
	@test -d $(OBJDIR_LINUX_RELEASE)/controllers || mkdir -p $(OBJDIR_LINUX_RELEASE)/controllers
	@test -d $(OBJDIR_LINUX_RELEASE)/cad || mkdir -p $(OBJDIR_LINUX_RELEASE)/cad
	@test -d $(OBJDIR_LINUX_RELEASE)/__/common || mkdir -p $(OBJDIR_LINUX_RELEASE)/__/common

after_linux_release: 

linux_release: before_linux_release out_linux_release after_linux_release

out_linux_release: before_linux_release $(OBJ_LINUX_RELEASE) $(DEP_LINUX_RELEASE)
	$(LD) $(LIBDIR_LINUX_RELEASE) -o $(OUT_LINUX_RELEASE) $(OBJ_LINUX_RELEASE)  $(LDFLAGS_LINUX_RELEASE) $(LIB_LINUX_RELEASE)

$(OBJDIR_LINUX_RELEASE)/models/SpinnerModel.o: models/SpinnerModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/SpinnerModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/SpinnerModel.o

$(OBJDIR_LINUX_RELEASE)/models/SphereModel.o: models/SphereModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/SphereModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/SphereModel.o

$(OBJDIR_LINUX_RELEASE)/models/SingleLineModel.o: models/SingleLineModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/SingleLineModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/SingleLineModel.o

$(OBJDIR_LINUX_RELEASE)/models/Shapes.o: models/Shapes.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/Shapes.cpp -o $(OBJDIR_LINUX_RELEASE)/models/Shapes.o

$(OBJDIR_LINUX_RELEASE)/models/RulerObject.o: models/RulerObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/RulerObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/RulerObject.o

$(OBJDIR_LINUX_RELEASE)/models/PolyPointScreenLocation.o: models/PolyPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/PolyPointScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/PolyPointScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/PolyLineModel.o: models/PolyLineModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/PolyLineModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/PolyLineModel.o

$(OBJDIR_LINUX_RELEASE)/models/ObjectManager.o: models/ObjectManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ObjectManager.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ObjectManager.o

$(OBJDIR_LINUX_RELEASE)/models/Node.o: models/Node.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/Node.cpp -o $(OBJDIR_LINUX_RELEASE)/models/Node.o

$(OBJDIR_LINUX_RELEASE)/models/ThreePointScreenLocation.o: models/ThreePointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ThreePointScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ThreePointScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/ViewObjectManager.o: models/ViewObjectManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ViewObjectManager.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ViewObjectManager.o

$(OBJDIR_LINUX_RELEASE)/models/ViewObject.o: models/ViewObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ViewObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ViewObject.o

$(OBJDIR_LINUX_RELEASE)/models/TwoPointScreenLocation.o: models/TwoPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/TwoPointScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/TwoPointScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/TreeModel.o: models/TreeModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/TreeModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/TreeModel.o

$(OBJDIR_LINUX_RELEASE)/models/MultiPointScreenLocation.o: models/MultiPointScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/MultiPointScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/MultiPointScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/TerrianObject.o: models/TerrianObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/TerrianObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/TerrianObject.o

$(OBJDIR_LINUX_RELEASE)/models/TerrainScreenLocation.o: models/TerrainScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/TerrainScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/TerrainScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/SubModel.o: models/SubModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/SubModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/SubModel.o

$(OBJDIR_LINUX_RELEASE)/models/StarModel.o: models/StarModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/StarModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/StarModel.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/Servo.o: models/DMX/Servo.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/Servo.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/Servo.o

$(OBJDIR_LINUX_RELEASE)/models/IciclesModel.o: models/IciclesModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/IciclesModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/IciclesModel.o

$(OBJDIR_LINUX_RELEASE)/models/GridlinesObject.o: models/GridlinesObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/GridlinesObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/GridlinesObject.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/SkullConfigDialog.o: models/DMX/SkullConfigDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/SkullConfigDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/SkullConfigDialog.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/ServoConfigDialog.o: models/DMX/ServoConfigDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/ServoConfigDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/ServoConfigDialog.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeatureDialog.o: models/DMX/MovingHeads/MhFeatureDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/MovingHeads/MhFeatureDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeatureDialog.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeature.o: models/DMX/MovingHeads/MhFeature.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/MovingHeads/MhFeature.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhFeature.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannelDialog.o: models/DMX/MovingHeads/MhChannelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/MovingHeads/MhChannelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannelDialog.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannel.o: models/DMX/MovingHeads/MhChannel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/MovingHeads/MhChannel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/MovingHeads/MhChannel.o

$(OBJDIR_LINUX_RELEASE)/models/Model.o: models/Model.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/Model.cpp -o $(OBJDIR_LINUX_RELEASE)/models/Model.o

$(OBJDIR_LINUX_RELEASE)/models/MultiPointModel.o: models/MultiPointModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/MultiPointModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/MultiPointModel.o

$(OBJDIR_LINUX_RELEASE)/models/ModelScreenLocation.o: models/ModelScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ModelScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ModelScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/models/ModelManager.o: models/ModelManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ModelManager.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ModelManager.o

$(OBJDIR_LINUX_RELEASE)/models/ModelGroup.o: models/ModelGroup.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ModelGroup.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ModelGroup.o

$(OBJDIR_LINUX_RELEASE)/models/WholeHouseModel.o: models/WholeHouseModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/WholeHouseModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/WholeHouseModel.o

$(OBJDIR_LINUX_RELEASE)/models/MeshObject.o: models/MeshObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/MeshObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/MeshObject.o

$(OBJDIR_LINUX_RELEASE)/models/MatrixModel.o: models/MatrixModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/MatrixModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/MatrixModel.o

$(OBJDIR_LINUX_RELEASE)/models/ImageObject.o: models/ImageObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ImageObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ImageObject.o

$(OBJDIR_LINUX_RELEASE)/models/ImageModel.o: models/ImageModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ImageModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ImageModel.o

$(OBJDIR_LINUX_RELEASE)/outputs/TestPreset.o: outputs/TestPreset.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/TestPreset.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/TestPreset.o

$(OBJDIR_LINUX_RELEASE)/outputs/SerialOutput.o: outputs/SerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/SerialOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/SerialOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/RenardOutput.o: outputs/RenardOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/RenardOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/RenardOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/PixelNetOutput.o: outputs/PixelNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/PixelNetOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/PixelNetOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/OutputManager.o: outputs/OutputManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/OutputManager.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/OutputManager.o

$(OBJDIR_LINUX_RELEASE)/outputs/Output.o: outputs/Output.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/Output.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/Output.o

$(OBJDIR_LINUX_RELEASE)/outputs/OpenPixelNetOutput.o: outputs/OpenPixelNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/OpenPixelNetOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/OpenPixelNetOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/OpenDMXOutput.o: outputs/OpenDMXOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/OpenDMXOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/OpenDMXOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/OPCOutput.o: outputs/OPCOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/OPCOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/OPCOutput.o

$(OBJDIR_LINUX_RELEASE)/preferences/EffectsGridSettingsPanel.o: preferences/EffectsGridSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/EffectsGridSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/EffectsGridSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/ColorManagerSettingsPanel.o: preferences/ColorManagerSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/ColorManagerSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/ColorManagerSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/CheckSequenceSettingsPanel.o: preferences/CheckSequenceSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/CheckSequenceSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/CheckSequenceSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/BackupSettingsPanel.o: preferences/BackupSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/BackupSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/BackupSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/outputs/xxxSerialOutput.o: outputs/xxxSerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/xxxSerialOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/xxxSerialOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/NullOutput.o: outputs/NullOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/NullOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/NullOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/xxxEthernetOutput.o: outputs/xxxEthernetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/xxxEthernetOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/xxxEthernetOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/serial.o: outputs/serial.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/serial.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/serial.o

$(OBJDIR_LINUX_RELEASE)/outputs/ZCPPOutput.o: outputs/ZCPPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/ZCPPOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/ZCPPOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/TwinklyOutput.o: outputs/TwinklyOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/TwinklyOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/TwinklyOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/Controller.o: outputs/Controller.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/Controller.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/Controller.o

$(OBJDIR_LINUX_RELEASE)/outputs/DDPOutput.o: outputs/DDPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/DDPOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/DDPOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/ControllerSerial.o: outputs/ControllerSerial.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/ControllerSerial.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerSerial.o

$(OBJDIR_LINUX_RELEASE)/outputs/ControllerNull.o: outputs/ControllerNull.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/ControllerNull.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerNull.o

$(OBJDIR_LINUX_RELEASE)/outputs/ControllerEthernet.o: outputs/ControllerEthernet.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/ControllerEthernet.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/ControllerEthernet.o

$(OBJDIR_LINUX_RELEASE)/outputs/ArtNetOutput.o: outputs/ArtNetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/ArtNetOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/ArtNetOutput.o

$(OBJDIR_LINUX_RELEASE)/models/WreathModel.o: models/WreathModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/WreathModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/WreathModel.o

$(OBJDIR_LINUX_RELEASE)/models/WindowFrameModel.o: models/WindowFrameModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/WindowFrameModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/WindowFrameModel.o

$(OBJDIR_LINUX_RELEASE)/outputs/KinetOutput.o: outputs/KinetOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/KinetOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/KinetOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/LorControllers.o: outputs/LorControllers.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/LorControllers.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/LorControllers.o

$(OBJDIR_LINUX_RELEASE)/outputs/LorController.o: outputs/LorController.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/LorController.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/LorController.o

$(OBJDIR_LINUX_RELEASE)/outputs/LOROutput.o: outputs/LOROutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/LOROutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/LOROutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/LOROptimisedOutput.o: outputs/LOROptimisedOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/LOROptimisedOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/LOROptimisedOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/IPOutput.o: outputs/IPOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/IPOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/IPOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/GenericSerialOutput.o: outputs/GenericSerialOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/GenericSerialOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/GenericSerialOutput.o

$(OBJDIR_LINUX_RELEASE)/outputs/E131Output.o: outputs/E131Output.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/E131Output.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/E131Output.o

$(OBJDIR_LINUX_RELEASE)/outputs/DMXOutput.o: outputs/DMXOutput.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c outputs/DMXOutput.cpp -o $(OBJDIR_LINUX_RELEASE)/outputs/DMXOutput.o

$(OBJDIR_LINUX_RELEASE)/effects/WarpPanel.o: effects/WarpPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/WarpPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/WarpPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/WarpEffect.o: effects/WarpEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/WarpEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/WarpEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/VideoPanel.o: effects/VideoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/VideoPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/VideoPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/VideoEffect.o: effects/VideoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/VideoEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/VideoEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/VUMeterPanel.o: effects/VUMeterPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/VUMeterPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/VUMeterPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/VUMeterEffect.o: effects/VUMeterEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/VUMeterEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/VUMeterEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/TwinklePanel.o: effects/TwinklePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TwinklePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TwinklePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/TwinkleEffect.o: effects/TwinkleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TwinkleEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TwinkleEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/TreePanel.o: effects/TreePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TreePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TreePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/SketchAssistPanel.o: effects/assist/SketchAssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/SketchAssistPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/SketchAssistPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasPictures.o: effects/assist/xlGridCanvasPictures.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/xlGridCanvasPictures.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasPictures.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasMorph.o: effects/assist/xlGridCanvasMorph.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/xlGridCanvasMorph.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasMorph.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasEmpty.o: effects/assist/xlGridCanvasEmpty.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/xlGridCanvasEmpty.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/xlGridCanvasEmpty.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/SketchCanvasPanel.o: effects/assist/SketchCanvasPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/SketchCanvasPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/SketchCanvasPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/TreeEffect.o: effects/TreeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TreeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TreeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/PicturesAssistPanel.o: effects/assist/PicturesAssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/PicturesAssistPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/PicturesAssistPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/assist/AssistPanel.o: effects/assist/AssistPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/assist/AssistPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/assist/AssistPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/WavePanel.o: effects/WavePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/WavePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/WavePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/WaveEffect.o: effects/WaveEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/WaveEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/WaveEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SpirographEffect.o: effects/SpirographEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SpirographEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SpirographEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SpiralsPanel.o: effects/SpiralsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SpiralsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SpiralsPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SpiralsEffect.o: effects/SpiralsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SpiralsEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SpiralsEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SnowstormPanel.o: effects/SnowstormPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SnowstormPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SnowstormPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SnowstormEffect.o: effects/SnowstormEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SnowstormEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SnowstormEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SnowflakesPanel.o: effects/SnowflakesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SnowflakesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SnowflakesPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SnowflakesEffect.o: effects/SnowflakesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SnowflakesEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SnowflakesEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SketchPanel.o: effects/SketchPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SketchPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SketchPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SketchEffectDrawing.o: effects/SketchEffectDrawing.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SketchEffectDrawing.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SketchEffectDrawing.o

$(OBJDIR_LINUX_RELEASE)/effects/StrobePanel.o: effects/StrobePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/StrobePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/StrobePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/TextPanel.o: effects/TextPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TextPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TextPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/TextEffect.o: effects/TextEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TextEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TextEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/TendrilPanel.o: effects/TendrilPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TendrilPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TendrilPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/TendrilEffect.o: effects/TendrilEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/TendrilEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/TendrilEffect.o

$(OBJDIR_LINUX_RELEASE)/graphics/opengl/DrawGLUtils.o: graphics/opengl/DrawGLUtils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/opengl/DrawGLUtils.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/DrawGLUtils.o

$(OBJDIR_LINUX_RELEASE)/effects/StrobeEffect.o: effects/StrobeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/StrobeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/StrobeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/StatePanel.o: effects/StatePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/StatePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/StatePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/StateEffect.o: effects/StateEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/StateEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/StateEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/SpirographPanel.o: effects/SpirographPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SpirographPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SpirographPanel.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHead.o: models/DMX/DmxMovingHead.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxMovingHead.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHead.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMotor.o: models/DMX/DmxMotor.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxMotor.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMotor.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxModel.o: models/DMX/DmxModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxModel.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxImage.o: models/DMX/DmxImage.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxImage.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxImage.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxGeneral.o: models/DMX/DmxGeneral.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxGeneral.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxGeneral.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodlight.o: models/DMX/DmxFloodlight.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxFloodlight.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodlight.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodArea.o: models/DMX/DmxFloodArea.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxFloodArea.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxFloodArea.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxDimmerAbility.o: models/DMX/DmxDimmerAbility.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxDimmerAbility.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxDimmerAbility.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/Mesh.o: models/DMX/Mesh.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/Mesh.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/Mesh.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkulltronix.o: models/DMX/DmxSkulltronix.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxSkulltronix.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkulltronix.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkull.o: models/DMX/DmxSkull.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxSkull.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxSkull.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxShutterAbility.o: models/DMX/DmxShutterAbility.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxShutterAbility.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxShutterAbility.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo3D.o: models/DMX/DmxServo3D.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxServo3D.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo3D.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityWheel.o: models/DMX/DmxColorAbilityWheel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxColorAbilityWheel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityWheel.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo.o: models/DMX/DmxServo.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxServo.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxServo.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPresetAbility.o: models/DMX/DmxPresetAbility.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxPresetAbility.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPresetAbility.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPanTiltAbility.o: models/DMX/DmxPanTiltAbility.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxPanTiltAbility.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxPanTiltAbility.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHeadAdv.o: models/DMX/DmxMovingHeadAdv.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxMovingHeadAdv.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxMovingHeadAdv.o

$(OBJDIR_LINUX_RELEASE)/models/BaseObject.o: models/BaseObject.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/BaseObject.cpp -o $(OBJDIR_LINUX_RELEASE)/models/BaseObject.o

$(OBJDIR_LINUX_RELEASE)/models/ArchesModel.o: models/ArchesModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ArchesModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ArchesModel.o

$(OBJDIR_LINUX_RELEASE)/kiss_fft/tools/kiss_fftr.o: kiss_fft/tools/kiss_fftr.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c kiss_fft/tools/kiss_fftr.c -o $(OBJDIR_LINUX_RELEASE)/kiss_fft/tools/kiss_fftr.o

$(OBJDIR_LINUX_RELEASE)/kiss_fft/kiss_fft.o: kiss_fft/kiss_fft.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c kiss_fft/kiss_fft.c -o $(OBJDIR_LINUX_RELEASE)/kiss_fft/kiss_fft.o

$(OBJDIR_LINUX_RELEASE)/graphics/xlMesh.o: graphics/xlMesh.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/xlMesh.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/xlMesh.o

$(OBJDIR_LINUX_RELEASE)/graphics/xlGraphicsAccumulators.o: graphics/xlGraphicsAccumulators.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/xlGraphicsAccumulators.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/xlGraphicsAccumulators.o

$(OBJDIR_LINUX_RELEASE)/graphics/xlFontInfo.o: graphics/xlFontInfo.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/xlFontInfo.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/xlFontInfo.o

$(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlOGL3GraphicsContext.o: graphics/opengl/xlOGL3GraphicsContext.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/opengl/xlOGL3GraphicsContext.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlOGL3GraphicsContext.o

$(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlGLCanvas.o: graphics/opengl/xlGLCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c graphics/opengl/xlGLCanvas.cpp -o $(OBJDIR_LINUX_RELEASE)/graphics/opengl/xlGLCanvas.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityRGB.o: models/DMX/DmxColorAbilityRGB.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxColorAbilityRGB.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityRGB.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityCMY.o: models/DMX/DmxColorAbilityCMY.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxColorAbilityCMY.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbilityCMY.o

$(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbility.o: models/DMX/DmxColorAbility.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/DMX/DmxColorAbility.cpp -o $(OBJDIR_LINUX_RELEASE)/models/DMX/DmxColorAbility.o

$(OBJDIR_LINUX_RELEASE)/models/CustomModel.o: models/CustomModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/CustomModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/CustomModel.o

$(OBJDIR_LINUX_RELEASE)/models/CubeModel.o: models/CubeModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/CubeModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/CubeModel.o

$(OBJDIR_LINUX_RELEASE)/models/CircleModel.o: models/CircleModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/CircleModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/CircleModel.o

$(OBJDIR_LINUX_RELEASE)/models/ChannelBlockModel.o: models/ChannelBlockModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/ChannelBlockModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/ChannelBlockModel.o

$(OBJDIR_LINUX_RELEASE)/models/CandyCaneModel.o: models/CandyCaneModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/CandyCaneModel.cpp -o $(OBJDIR_LINUX_RELEASE)/models/CandyCaneModel.o

$(OBJDIR_LINUX_RELEASE)/models/BoxedScreenLocation.o: models/BoxedScreenLocation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c models/BoxedScreenLocation.cpp -o $(OBJDIR_LINUX_RELEASE)/models/BoxedScreenLocation.o

$(OBJDIR_LINUX_RELEASE)/xLightsTimer.o: xLightsTimer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsTimer.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsTimer.o

$(OBJDIR_LINUX_RELEASE)/xLightsMain.o: xLightsMain.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsMain.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsMain.o

$(OBJDIR_LINUX_RELEASE)/xLightsImportChannelMapDialog.o: xLightsImportChannelMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsImportChannelMapDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsImportChannelMapDialog.o

$(OBJDIR_LINUX_RELEASE)/xLightsApp.o: xLightsApp.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsApp.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsApp.o

$(OBJDIR_LINUX_RELEASE)/xLightsVersion.o: xLightsVersion.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsVersion.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsVersion.o

$(OBJDIR_LINUX_RELEASE)/xlSlider.o: xlSlider.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlSlider.cpp -o $(OBJDIR_LINUX_RELEASE)/xlSlider.o

$(OBJDIR_LINUX_RELEASE)/xlLockButton.o: xlLockButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlLockButton.cpp -o $(OBJDIR_LINUX_RELEASE)/xlLockButton.o

$(OBJDIR_LINUX_RELEASE)/xlGridCanvas.o: xlGridCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlGridCanvas.cpp -o $(OBJDIR_LINUX_RELEASE)/xlGridCanvas.o

$(OBJDIR_LINUX_RELEASE)/xlColourData.o: xlColourData.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlColourData.cpp -o $(OBJDIR_LINUX_RELEASE)/xlColourData.o

$(OBJDIR_LINUX_RELEASE)/xlColorPickerFields.o: xlColorPickerFields.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlColorPickerFields.cpp -o $(OBJDIR_LINUX_RELEASE)/xlColorPickerFields.o

$(OBJDIR_LINUX_RELEASE)/xlColorPicker.o: xlColorPicker.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlColorPicker.cpp -o $(OBJDIR_LINUX_RELEASE)/xlColorPicker.o

$(OBJDIR_LINUX_RELEASE)/xlColorCanvas.o: xlColorCanvas.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xlColorCanvas.cpp -o $(OBJDIR_LINUX_RELEASE)/xlColorCanvas.o

$(OBJDIR_LINUX_RELEASE)/xLightsXmlFile.o: xLightsXmlFile.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c xLightsXmlFile.cpp -o $(OBJDIR_LINUX_RELEASE)/xLightsXmlFile.o

$(OBJDIR_LINUX_RELEASE)/tmGridCell.o: tmGridCell.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c tmGridCell.cpp -o $(OBJDIR_LINUX_RELEASE)/tmGridCell.o

$(OBJDIR_LINUX_RELEASE)/utils/string_utils.o: utils/string_utils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c utils/string_utils.cpp -o $(OBJDIR_LINUX_RELEASE)/utils/string_utils.o

$(OBJDIR_LINUX_RELEASE)/utils/ip_utils.o: utils/ip_utils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c utils/ip_utils.cpp -o $(OBJDIR_LINUX_RELEASE)/utils/ip_utils.o

$(OBJDIR_LINUX_RELEASE)/utils/CurlManager.o: utils/CurlManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c utils/CurlManager.cpp -o $(OBJDIR_LINUX_RELEASE)/utils/CurlManager.o

$(OBJDIR_LINUX_RELEASE)/utils/Curl.o: utils/Curl.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c utils/Curl.cpp -o $(OBJDIR_LINUX_RELEASE)/utils/Curl.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/Files.o: vamp-hostsdk/Files.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/Files.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/Files.o

$(OBJDIR_LINUX_RELEASE)/support/VectorMath.o: support/VectorMath.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c support/VectorMath.cpp -o $(OBJDIR_LINUX_RELEASE)/support/VectorMath.o

$(OBJDIR_LINUX_RELEASE)/support/GridCellChoiceRenderer.o: support/GridCellChoiceRenderer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c support/GridCellChoiceRenderer.cpp -o $(OBJDIR_LINUX_RELEASE)/support/GridCellChoiceRenderer.o

$(OBJDIR_LINUX_RELEASE)/support/FastComboEditor.o: support/FastComboEditor.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c support/FastComboEditor.cpp -o $(OBJDIR_LINUX_RELEASE)/support/FastComboEditor.o

$(OBJDIR_LINUX_RELEASE)/support/EzGrid.o: support/EzGrid.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c support/EzGrid.cpp -o $(OBJDIR_LINUX_RELEASE)/support/EzGrid.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginWrapper.o: vamp-hostsdk/PluginWrapper.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginWrapper.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginWrapper.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginSummarisingAdapter.o: vamp-hostsdk/PluginSummarisingAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginSummarisingAdapter.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginSummarisingAdapter.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginLoader.o: vamp-hostsdk/PluginLoader.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginLoader.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginLoader.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginInputDomainAdapter.o: vamp-hostsdk/PluginInputDomainAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginInputDomainAdapter.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginInputDomainAdapter.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginHostAdapter.o: vamp-hostsdk/PluginHostAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginHostAdapter.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginHostAdapter.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginChannelAdapter.o: vamp-hostsdk/PluginChannelAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginChannelAdapter.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginChannelAdapter.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginBufferingAdapter.o: vamp-hostsdk/PluginBufferingAdapter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/PluginBufferingAdapter.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/PluginBufferingAdapter.o

$(OBJDIR_LINUX_RELEASE)/preferences/ViewSettingsPanel.o: preferences/ViewSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/ViewSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/ViewSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/sequencer/EffectDropTarget.o: sequencer/EffectDropTarget.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/EffectDropTarget.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectDropTarget.o

$(OBJDIR_LINUX_RELEASE)/sequencer/Effect.o: sequencer/Effect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/Effect.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/Effect.o

$(OBJDIR_LINUX_RELEASE)/sequencer/DragEffectBitmapButton.o: sequencer/DragEffectBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/DragEffectBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/DragEffectBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/preferences/xLightsPreferences.o: preferences/xLightsPreferences.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/xLightsPreferences.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/xLightsPreferences.o

$(OBJDIR_LINUX_RELEASE)/sequencer/EffectLayer.o: sequencer/EffectLayer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/EffectLayer.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectLayer.o

$(OBJDIR_LINUX_RELEASE)/preferences/SequenceFileSettingsPanel.o: preferences/SequenceFileSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/SequenceFileSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/SequenceFileSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/RandomEffectsSettingsPanel.o: preferences/RandomEffectsSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/RandomEffectsSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/RandomEffectsSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/OutputSettingsPanel.o: preferences/OutputSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/OutputSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/OutputSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/preferences/OtherSettingsPanel.o: preferences/OtherSettingsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c preferences/OtherSettingsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/preferences/OtherSettingsPanel.o

$(OBJDIR_LINUX_RELEASE)/sequencer/tabSequencer.o: sequencer/tabSequencer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/tabSequencer.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/tabSequencer.o

$(OBJDIR_LINUX_RELEASE)/sequencer/Waveform.o: sequencer/Waveform.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/Waveform.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/Waveform.o

$(OBJDIR_LINUX_RELEASE)/sequencer/UndoManager.o: sequencer/UndoManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/UndoManager.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/UndoManager.o

$(OBJDIR_LINUX_RELEASE)/sequencer/TimeLine.o: sequencer/TimeLine.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/TimeLine.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/TimeLine.o

$(OBJDIR_LINUX_RELEASE)/sequencer/SequenceElements.o: sequencer/SequenceElements.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/SequenceElements.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/SequenceElements.o

$(OBJDIR_LINUX_RELEASE)/sequencer/RowHeading.o: sequencer/RowHeading.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/RowHeading.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/RowHeading.o

$(OBJDIR_LINUX_RELEASE)/sequencer/MainSequencer.o: sequencer/MainSequencer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/MainSequencer.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/MainSequencer.o

$(OBJDIR_LINUX_RELEASE)/sequencer/Element.o: sequencer/Element.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/Element.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/Element.o

$(OBJDIR_LINUX_RELEASE)/sequencer/EffectsGrid.o: sequencer/EffectsGrid.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c sequencer/EffectsGrid.cpp -o $(OBJDIR_LINUX_RELEASE)/sequencer/EffectsGrid.o

$(OBJDIR_LINUX_RELEASE)/wxWEBPHandler/imagwebp.o: wxWEBPHandler/imagwebp.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c wxWEBPHandler/imagwebp.cpp -o $(OBJDIR_LINUX_RELEASE)/wxWEBPHandler/imagwebp.o

$(OBJDIR_LINUX_RELEASE)/wxModelGridCellRenderer.o: wxModelGridCellRenderer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c wxModelGridCellRenderer.cpp -o $(OBJDIR_LINUX_RELEASE)/wxModelGridCellRenderer.o

$(OBJDIR_LINUX_RELEASE)/wxCheckedListCtrl.o: wxCheckedListCtrl.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c wxCheckedListCtrl.cpp -o $(OBJDIR_LINUX_RELEASE)/wxCheckedListCtrl.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/host-c.o: vamp-hostsdk/host-c.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/host-c.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/host-c.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/acsymbols.o: vamp-hostsdk/acsymbols.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/acsymbols.c -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/acsymbols.o

$(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/RealTime.o: vamp-hostsdk/RealTime.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c vamp-hostsdk/RealTime.cpp -o $(OBJDIR_LINUX_RELEASE)/vamp-hostsdk/RealTime.o

$(OBJDIR_LINUX_RELEASE)/effects/SketchEffect.o: effects/SketchEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SketchEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SketchEffect.o

$(OBJDIR_LINUX_RELEASE)/NodeSelectGrid.o: NodeSelectGrid.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c NodeSelectGrid.cpp -o $(OBJDIR_LINUX_RELEASE)/NodeSelectGrid.o

$(OBJDIR_LINUX_RELEASE)/NewTimingDialog.o: NewTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c NewTimingDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/NewTimingDialog.o

$(OBJDIR_LINUX_RELEASE)/MusicXML.o: MusicXML.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MusicXML.cpp -o $(OBJDIR_LINUX_RELEASE)/MusicXML.o

$(OBJDIR_LINUX_RELEASE)/MultiControllerUploadDialog.o: MultiControllerUploadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MultiControllerUploadDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/MultiControllerUploadDialog.o

$(OBJDIR_LINUX_RELEASE)/Mouse3DManager.o: Mouse3DManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Mouse3DManager.cpp -o $(OBJDIR_LINUX_RELEASE)/Mouse3DManager.o

$(OBJDIR_LINUX_RELEASE)/ModelStateDialog.o: ModelStateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelStateDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelStateDialog.o

$(OBJDIR_LINUX_RELEASE)/ModelRemap.o: ModelRemap.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelRemap.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelRemap.o

$(OBJDIR_LINUX_RELEASE)/ModelPreview.o: ModelPreview.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelPreview.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelPreview.o

$(OBJDIR_LINUX_RELEASE)/ModelGroupPanel.o: ModelGroupPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelGroupPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelGroupPanel.o

$(OBJDIR_LINUX_RELEASE)/PerspectivesPanel.o: PerspectivesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PerspectivesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/PerspectivesPanel.o

$(OBJDIR_LINUX_RELEASE)/PathGenerationDialog.o: PathGenerationDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PathGenerationDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/PathGenerationDialog.o

$(OBJDIR_LINUX_RELEASE)/Parallel.o: Parallel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Parallel.cpp -o $(OBJDIR_LINUX_RELEASE)/Parallel.o

$(OBJDIR_LINUX_RELEASE)/PaletteMgmtDialog.o: PaletteMgmtDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PaletteMgmtDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/PaletteMgmtDialog.o

$(OBJDIR_LINUX_RELEASE)/OutputModelManager.o: OutputModelManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c OutputModelManager.cpp -o $(OBJDIR_LINUX_RELEASE)/OutputModelManager.o

$(OBJDIR_LINUX_RELEASE)/ModelFaceDialog.o: ModelFaceDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelFaceDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelFaceDialog.o

$(OBJDIR_LINUX_RELEASE)/OptionChooser.o: OptionChooser.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c OptionChooser.cpp -o $(OBJDIR_LINUX_RELEASE)/OptionChooser.o

$(OBJDIR_LINUX_RELEASE)/OpenGLShaders.o: OpenGLShaders.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c OpenGLShaders.cpp -o $(OBJDIR_LINUX_RELEASE)/OpenGLShaders.o

$(OBJDIR_LINUX_RELEASE)/NoteRangeDialog.o: NoteRangeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c NoteRangeDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/NoteRangeDialog.o

$(OBJDIR_LINUX_RELEASE)/NoteImportDialog.o: NoteImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c NoteImportDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/NoteImportDialog.o

$(OBJDIR_LINUX_RELEASE)/NodesGridCellEditor.o: NodesGridCellEditor.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c NodesGridCellEditor.cpp -o $(OBJDIR_LINUX_RELEASE)/NodesGridCellEditor.o

$(OBJDIR_LINUX_RELEASE)/LayoutGroup.o: LayoutGroup.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LayoutGroup.cpp -o $(OBJDIR_LINUX_RELEASE)/LayoutGroup.o

$(OBJDIR_LINUX_RELEASE)/LorConvertDialog.o: LorConvertDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LorConvertDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LorConvertDialog.o

$(OBJDIR_LINUX_RELEASE)/LinkJukeboxButtonDialog.o: LinkJukeboxButtonDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LinkJukeboxButtonDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LinkJukeboxButtonDialog.o

$(OBJDIR_LINUX_RELEASE)/LayoutUtils.o: LayoutUtils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LayoutUtils.cpp -o $(OBJDIR_LINUX_RELEASE)/LayoutUtils.o

$(OBJDIR_LINUX_RELEASE)/LayoutPanel.o: LayoutPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LayoutPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/LayoutPanel.o

$(OBJDIR_LINUX_RELEASE)/LyricUserDictDialog.o: LyricUserDictDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LyricUserDictDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LyricUserDictDialog.o

$(OBJDIR_LINUX_RELEASE)/LayerSelectDialog.o: LayerSelectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LayerSelectDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LayerSelectDialog.o

$(OBJDIR_LINUX_RELEASE)/LORPreview.o: LORPreview.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LORPreview.cpp -o $(OBJDIR_LINUX_RELEASE)/LORPreview.o

$(OBJDIR_LINUX_RELEASE)/LOREdit.o: LOREdit.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LOREdit.cpp -o $(OBJDIR_LINUX_RELEASE)/LOREdit.o

$(OBJDIR_LINUX_RELEASE)/LMSImportChannelMapDialog.o: LMSImportChannelMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LMSImportChannelMapDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LMSImportChannelMapDialog.o

$(OBJDIR_LINUX_RELEASE)/MatrixFaceDownloadDialog.o: MatrixFaceDownloadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MatrixFaceDownloadDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/MatrixFaceDownloadDialog.o

$(OBJDIR_LINUX_RELEASE)/ModelDimmingCurveDialog.o: ModelDimmingCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelDimmingCurveDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelDimmingCurveDialog.o

$(OBJDIR_LINUX_RELEASE)/ModelChainDialog.o: ModelChainDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ModelChainDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ModelChainDialog.o

$(OBJDIR_LINUX_RELEASE)/MetronomeLabelDialog.o: MetronomeLabelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MetronomeLabelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/MetronomeLabelDialog.o

$(OBJDIR_LINUX_RELEASE)/MediaImportOptionsDialog.o: MediaImportOptionsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MediaImportOptionsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/MediaImportOptionsDialog.o

$(OBJDIR_LINUX_RELEASE)/MIDI/MidiMessage.o: MIDI/MidiMessage.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MIDI/MidiMessage.cpp -o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiMessage.o

$(OBJDIR_LINUX_RELEASE)/MIDI/MidiFile.o: MIDI/MidiFile.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MIDI/MidiFile.cpp -o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiFile.o

$(OBJDIR_LINUX_RELEASE)/MIDI/MidiEventList.o: MIDI/MidiEventList.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MIDI/MidiEventList.cpp -o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiEventList.o

$(OBJDIR_LINUX_RELEASE)/MIDI/MidiEvent.o: MIDI/MidiEvent.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MIDI/MidiEvent.cpp -o $(OBJDIR_LINUX_RELEASE)/MIDI/MidiEvent.o

$(OBJDIR_LINUX_RELEASE)/MIDI/Binasc.o: MIDI/Binasc.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c MIDI/Binasc.cpp -o $(OBJDIR_LINUX_RELEASE)/MIDI/Binasc.o

$(OBJDIR_LINUX_RELEASE)/LyricsDialog.o: LyricsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c LyricsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/LyricsDialog.o

$(OBJDIR_LINUX_RELEASE)/SevenSegmentDialog.o: SevenSegmentDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SevenSegmentDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SevenSegmentDialog.o

$(OBJDIR_LINUX_RELEASE)/SequenceViewManager.o: SequenceViewManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SequenceViewManager.cpp -o $(OBJDIR_LINUX_RELEASE)/SequenceViewManager.o

$(OBJDIR_LINUX_RELEASE)/SequenceVideoPreview.o: SequenceVideoPreview.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SequenceVideoPreview.cpp -o $(OBJDIR_LINUX_RELEASE)/SequenceVideoPreview.o

$(OBJDIR_LINUX_RELEASE)/SequenceVideoPanel.o: SequenceVideoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SequenceVideoPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/SequenceVideoPanel.o

$(OBJDIR_LINUX_RELEASE)/SequencePackage.o: SequencePackage.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SequencePackage.cpp -o $(OBJDIR_LINUX_RELEASE)/SequencePackage.o

$(OBJDIR_LINUX_RELEASE)/SequenceData.o: SequenceData.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SequenceData.cpp -o $(OBJDIR_LINUX_RELEASE)/SequenceData.o

$(OBJDIR_LINUX_RELEASE)/SeqSettingsDialog.o: SeqSettingsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SeqSettingsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SeqSettingsDialog.o

$(OBJDIR_LINUX_RELEASE)/SeqFileUtilities.o: SeqFileUtilities.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SeqFileUtilities.cpp -o $(OBJDIR_LINUX_RELEASE)/SeqFileUtilities.o

$(OBJDIR_LINUX_RELEASE)/SeqExportDialog.o: SeqExportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SeqExportDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SeqExportDialog.o

$(OBJDIR_LINUX_RELEASE)/StrandNodeNamesDialog.o: StrandNodeNamesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c StrandNodeNamesDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/StrandNodeNamesDialog.o

$(OBJDIR_LINUX_RELEASE)/SuperStarImportDialog.o: SuperStarImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SuperStarImportDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SuperStarImportDialog.o

$(OBJDIR_LINUX_RELEASE)/SubModelsDialog.o: SubModelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SubModelsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SubModelsDialog.o

$(OBJDIR_LINUX_RELEASE)/SubModelGenerateDialog.o: SubModelGenerateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SubModelGenerateDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SubModelGenerateDialog.o

$(OBJDIR_LINUX_RELEASE)/SubBufferPanel.o: SubBufferPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SubBufferPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/SubBufferPanel.o

$(OBJDIR_LINUX_RELEASE)/SeqElementMismatchDialog.o: SeqElementMismatchDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SeqElementMismatchDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SeqElementMismatchDialog.o

$(OBJDIR_LINUX_RELEASE)/StartChannelDialog.o: StartChannelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c StartChannelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/StartChannelDialog.o

$(OBJDIR_LINUX_RELEASE)/SplashDialog.o: SplashDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SplashDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SplashDialog.o

$(OBJDIR_LINUX_RELEASE)/SpecialOptions.o: SpecialOptions.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SpecialOptions.cpp -o $(OBJDIR_LINUX_RELEASE)/SpecialOptions.o

$(OBJDIR_LINUX_RELEASE)/ShaderDownloadDialog.o: ShaderDownloadDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ShaderDownloadDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ShaderDownloadDialog.o

$(OBJDIR_LINUX_RELEASE)/PreviewPane.o: PreviewPane.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PreviewPane.cpp -o $(OBJDIR_LINUX_RELEASE)/PreviewPane.o

$(OBJDIR_LINUX_RELEASE)/RenderCache.o: RenderCache.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RenderCache.cpp -o $(OBJDIR_LINUX_RELEASE)/RenderCache.o

$(OBJDIR_LINUX_RELEASE)/RenderBuffer.o: RenderBuffer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RenderBuffer.cpp -o $(OBJDIR_LINUX_RELEASE)/RenderBuffer.o

$(OBJDIR_LINUX_RELEASE)/Render.o: Render.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Render.cpp -o $(OBJDIR_LINUX_RELEASE)/Render.o

$(OBJDIR_LINUX_RELEASE)/RenameTextDialog.o: RenameTextDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RenameTextDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/RenameTextDialog.o

$(OBJDIR_LINUX_RELEASE)/RemapDMXChannelsDialog.o: RemapDMXChannelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RemapDMXChannelsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/RemapDMXChannelsDialog.o

$(OBJDIR_LINUX_RELEASE)/Pixels.o: Pixels.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Pixels.cpp -o $(OBJDIR_LINUX_RELEASE)/Pixels.o

$(OBJDIR_LINUX_RELEASE)/PixelTestDialog.o: PixelTestDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PixelTestDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/PixelTestDialog.o

$(OBJDIR_LINUX_RELEASE)/PixelBuffer.o: PixelBuffer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PixelBuffer.cpp -o $(OBJDIR_LINUX_RELEASE)/PixelBuffer.o

$(OBJDIR_LINUX_RELEASE)/PhonemeDictionary.o: PhonemeDictionary.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c PhonemeDictionary.cpp -o $(OBJDIR_LINUX_RELEASE)/PhonemeDictionary.o

$(OBJDIR_LINUX_RELEASE)/SaveChangesDialog.o: SaveChangesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SaveChangesDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SaveChangesDialog.o

$(OBJDIR_LINUX_RELEASE)/SelectTimingsDialog.o: SelectTimingsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SelectTimingsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/SelectTimingsDialog.o

$(OBJDIR_LINUX_RELEASE)/SelectPanel.o: SelectPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SelectPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/SelectPanel.o

$(OBJDIR_LINUX_RELEASE)/SearchPanel.o: SearchPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c SearchPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/SearchPanel.o

$(OBJDIR_LINUX_RELEASE)/ScriptsDialog.o: ScriptsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ScriptsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ScriptsDialog.o

$(OBJDIR_LINUX_RELEASE)/RestoreBackupDialog.o: RestoreBackupDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RestoreBackupDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/RestoreBackupDialog.o

$(OBJDIR_LINUX_RELEASE)/ResizeImageDialog.o: ResizeImageDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ResizeImageDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ResizeImageDialog.o

$(OBJDIR_LINUX_RELEASE)/RenderProgressDialog.o: RenderProgressDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c RenderProgressDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/RenderProgressDialog.o

$(OBJDIR_LINUX_RELEASE)/CheckboxSelectDialog.o: CheckboxSelectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CheckboxSelectDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/CheckboxSelectDialog.o

$(OBJDIR_LINUX_RELEASE)/CharMapDialog.o: CharMapDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CharMapDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/CharMapDialog.o

$(OBJDIR_LINUX_RELEASE)/ChannelLayoutDialog.o: ChannelLayoutDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ChannelLayoutDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ChannelLayoutDialog.o

$(OBJDIR_LINUX_RELEASE)/CachedFileDownloader.o: CachedFileDownloader.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CachedFileDownloader.cpp -o $(OBJDIR_LINUX_RELEASE)/CachedFileDownloader.o

$(OBJDIR_LINUX_RELEASE)/BulkEditSliderDialog.o: BulkEditSliderDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BulkEditSliderDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BulkEditSliderDialog.o

$(OBJDIR_LINUX_RELEASE)/BulkEditFontPickerDialog.o: BulkEditFontPickerDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BulkEditFontPickerDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BulkEditFontPickerDialog.o

$(OBJDIR_LINUX_RELEASE)/BulkEditControls.o: BulkEditControls.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BulkEditControls.cpp -o $(OBJDIR_LINUX_RELEASE)/BulkEditControls.o

$(OBJDIR_LINUX_RELEASE)/BulkEditComboDialog.o: BulkEditComboDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BulkEditComboDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BulkEditComboDialog.o

$(OBJDIR_LINUX_RELEASE)/BulkEditColourPickerDialog.o: BulkEditColourPickerDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BulkEditColourPickerDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BulkEditColourPickerDialog.o

$(OBJDIR_LINUX_RELEASE)/ConvertDialog.o: ConvertDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ConvertDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ConvertDialog.o

$(OBJDIR_LINUX_RELEASE)/ControllerModelDialog.o: ControllerModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ControllerModelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ControllerModelDialog.o

$(OBJDIR_LINUX_RELEASE)/ControllerConnectionDialog.o: ControllerConnectionDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ControllerConnectionDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ControllerConnectionDialog.o

$(OBJDIR_LINUX_RELEASE)/ColoursPanel.o: ColoursPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColoursPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ColoursPanel.o

$(OBJDIR_LINUX_RELEASE)/ColourReplaceDialog.o: ColourReplaceDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColourReplaceDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ColourReplaceDialog.o

$(OBJDIR_LINUX_RELEASE)/BufferSizeDialog.o: BufferSizeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BufferSizeDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BufferSizeDialog.o

$(OBJDIR_LINUX_RELEASE)/ColorPanel.o: ColorPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColorPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ColorPanel.o

$(OBJDIR_LINUX_RELEASE)/ColorManager.o: ColorManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColorManager.cpp -o $(OBJDIR_LINUX_RELEASE)/ColorManager.o

$(OBJDIR_LINUX_RELEASE)/ColorCurveDialog.o: ColorCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColorCurveDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ColorCurveDialog.o

$(OBJDIR_LINUX_RELEASE)/ColorCurve.o: ColorCurve.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ColorCurve.cpp -o $(OBJDIR_LINUX_RELEASE)/ColorCurve.o

$(OBJDIR_LINUX_RELEASE)/Color.o: Color.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Color.cpp -o $(OBJDIR_LINUX_RELEASE)/Color.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/message.o: ../xSchedule/wxHTTPServer/message.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/message.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/message.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/status.o: ../xSchedule/wxHTTPServer/status.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/status.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/status.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/sha1.o: ../xSchedule/wxHTTPServer/sha1.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/sha1.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/sha1.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/server.o: ../xSchedule/wxHTTPServer/server.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/server.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/server.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/response.o: ../xSchedule/wxHTTPServer/response.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/response.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/response.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/request.o: ../xSchedule/wxHTTPServer/request.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/request.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/request.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/pages.o: ../xSchedule/wxHTTPServer/pages.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/pages.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/pages.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonreader.o: ../xSchedule/wxJSON/jsonreader.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxJSON/jsonreader.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonreader.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/context.o: ../xSchedule/wxHTTPServer/context.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/context.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/context.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/connection.o: ../xSchedule/wxHTTPServer/connection.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxHTTPServer/connection.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxHTTPServer/connection.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/md5.o: ../xSchedule/md5.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/md5.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/md5.o

$(OBJDIR_LINUX_RELEASE)/__/xFade/wxLED.o: ../xFade/wxLED.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xFade/wxLED.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xFade/wxLED.o

$(OBJDIR_LINUX_RELEASE)/BufferPanel.o: BufferPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BufferPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/BufferPanel.o

$(OBJDIR_LINUX_RELEASE)/BitmapCache.o: BitmapCache.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BitmapCache.cpp -o $(OBJDIR_LINUX_RELEASE)/BitmapCache.o

$(OBJDIR_LINUX_RELEASE)/BatchRenderDialog.o: BatchRenderDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c BatchRenderDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/BatchRenderDialog.o

$(OBJDIR_LINUX_RELEASE)/AutoLabelDialog.o: AutoLabelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c AutoLabelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/AutoLabelDialog.o

$(OBJDIR_LINUX_RELEASE)/AudioManager.o: AudioManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c AudioManager.cpp -o $(OBJDIR_LINUX_RELEASE)/AudioManager.o

$(OBJDIR_LINUX_RELEASE)/AlignmentDialog.o: AlignmentDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c AlignmentDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/AlignmentDialog.o

$(OBJDIR_LINUX_RELEASE)/AboutDialog.o: AboutDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c AboutDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/AboutDialog.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonwriter.o: ../xSchedule/wxJSON/jsonwriter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxJSON/jsonwriter.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonwriter.o

$(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonval.o: ../xSchedule/wxJSON/jsonval.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../xSchedule/wxJSON/jsonval.cpp -o $(OBJDIR_LINUX_RELEASE)/__/xSchedule/wxJSON/jsonval.o

$(OBJDIR_LINUX_RELEASE)/GPURenderUtils.o: GPURenderUtils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c GPURenderUtils.cpp -o $(OBJDIR_LINUX_RELEASE)/GPURenderUtils.o

$(OBJDIR_LINUX_RELEASE)/FontManager.o: FontManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c FontManager.cpp -o $(OBJDIR_LINUX_RELEASE)/FontManager.o

$(OBJDIR_LINUX_RELEASE)/FlickerFreeBitmapButton.o: FlickerFreeBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c FlickerFreeBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/FlickerFreeBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/FindDataPanel.o: FindDataPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c FindDataPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/FindDataPanel.o

$(OBJDIR_LINUX_RELEASE)/FileConverter.o: FileConverter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c FileConverter.cpp -o $(OBJDIR_LINUX_RELEASE)/FileConverter.o

$(OBJDIR_LINUX_RELEASE)/FSEQFile.o: FSEQFile.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c FSEQFile.cpp -o $(OBJDIR_LINUX_RELEASE)/FSEQFile.o

$(OBJDIR_LINUX_RELEASE)/ExportSettings.o: ExportSettings.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ExportSettings.cpp -o $(OBJDIR_LINUX_RELEASE)/ExportSettings.o

$(OBJDIR_LINUX_RELEASE)/ExportModelSelect.o: ExportModelSelect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ExportModelSelect.cpp -o $(OBJDIR_LINUX_RELEASE)/ExportModelSelect.o

$(OBJDIR_LINUX_RELEASE)/EmailDialog.o: EmailDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EmailDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EmailDialog.o

$(OBJDIR_LINUX_RELEASE)/KeyBindings.o: KeyBindings.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c KeyBindings.cpp -o $(OBJDIR_LINUX_RELEASE)/KeyBindings.o

$(OBJDIR_LINUX_RELEASE)/KeyBindingEditDialog.o: KeyBindingEditDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c KeyBindingEditDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/KeyBindingEditDialog.o

$(OBJDIR_LINUX_RELEASE)/JukeboxPanel.o: JukeboxPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c JukeboxPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/JukeboxPanel.o

$(OBJDIR_LINUX_RELEASE)/JobPool.o: JobPool.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c JobPool.cpp -o $(OBJDIR_LINUX_RELEASE)/JobPool.o

$(OBJDIR_LINUX_RELEASE)/ImportPreviewsModelsDialog.o: ImportPreviewsModelsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ImportPreviewsModelsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ImportPreviewsModelsDialog.o

$(OBJDIR_LINUX_RELEASE)/EffectsPanel.o: EffectsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectsPanel.o

$(OBJDIR_LINUX_RELEASE)/IPEntryDialog.o: IPEntryDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c IPEntryDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/IPEntryDialog.o

$(OBJDIR_LINUX_RELEASE)/HousePreviewPanel.o: HousePreviewPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c HousePreviewPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/HousePreviewPanel.o

$(OBJDIR_LINUX_RELEASE)/GenerateLyricsDialog.o: GenerateLyricsDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c GenerateLyricsDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/GenerateLyricsDialog.o

$(OBJDIR_LINUX_RELEASE)/GenerateCustomModelDialog.o: GenerateCustomModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c GenerateCustomModelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/GenerateCustomModelDialog.o

$(OBJDIR_LINUX_RELEASE)/DataLayer.o: DataLayer.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DataLayer.cpp -o $(OBJDIR_LINUX_RELEASE)/DataLayer.o

$(OBJDIR_LINUX_RELEASE)/DragColoursBitmapButton.o: DragColoursBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DragColoursBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/DragColoursBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/DissolveTransitionPattern.o: DissolveTransitionPattern.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DissolveTransitionPattern.cpp -o $(OBJDIR_LINUX_RELEASE)/DissolveTransitionPattern.o

$(OBJDIR_LINUX_RELEASE)/Discovery.o: Discovery.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Discovery.cpp -o $(OBJDIR_LINUX_RELEASE)/Discovery.o

$(OBJDIR_LINUX_RELEASE)/DimmingCurvePanel.o: DimmingCurvePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DimmingCurvePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/DimmingCurvePanel.o

$(OBJDIR_LINUX_RELEASE)/DimmingCurve.o: DimmingCurve.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DimmingCurve.cpp -o $(OBJDIR_LINUX_RELEASE)/DimmingCurve.o

$(OBJDIR_LINUX_RELEASE)/CustomTimingDialog.o: CustomTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CustomTimingDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/CustomTimingDialog.o

$(OBJDIR_LINUX_RELEASE)/CustomModelDialog.o: CustomModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CustomModelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/CustomModelDialog.o

$(OBJDIR_LINUX_RELEASE)/CopyFormat1.o: CopyFormat1.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c CopyFormat1.cpp -o $(OBJDIR_LINUX_RELEASE)/CopyFormat1.o

$(OBJDIR_LINUX_RELEASE)/ConvertLogDialog.o: ConvertLogDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ConvertLogDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ConvertLogDialog.o

$(OBJDIR_LINUX_RELEASE)/EffectAssist.o: EffectAssist.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectAssist.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectAssist.o

$(OBJDIR_LINUX_RELEASE)/EffectTreeDialog.o: EffectTreeDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectTreeDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectTreeDialog.o

$(OBJDIR_LINUX_RELEASE)/EffectTimingDialog.o: EffectTimingDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectTimingDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectTimingDialog.o

$(OBJDIR_LINUX_RELEASE)/EffectListDialog.o: EffectListDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectListDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectListDialog.o

$(OBJDIR_LINUX_RELEASE)/EffectIconPanel.o: EffectIconPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EffectIconPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/EffectIconPanel.o

$(OBJDIR_LINUX_RELEASE)/TabConvert.o: TabConvert.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TabConvert.cpp -o $(OBJDIR_LINUX_RELEASE)/TabConvert.o

$(OBJDIR_LINUX_RELEASE)/EditSubmodelAliasesDialog.o: EditSubmodelAliasesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EditSubmodelAliasesDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EditSubmodelAliasesDialog.o

$(OBJDIR_LINUX_RELEASE)/EditAliasesDialog.o: EditAliasesDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c EditAliasesDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/EditAliasesDialog.o

$(OBJDIR_LINUX_RELEASE)/DuplicateDialog.o: DuplicateDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DuplicateDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/DuplicateDialog.o

$(OBJDIR_LINUX_RELEASE)/DragValueCurveBitmapButton.o: DragValueCurveBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c DragValueCurveBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/DragValueCurveBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/effects/LifeEffect.o: effects/LifeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LifeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LifeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/LinesEffect.o: effects/LinesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LinesEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LinesEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/LightningPanel.o: effects/LightningPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LightningPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LightningPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/LightningEffect.o: effects/LightningEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LightningEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LightningEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/LifePanel.o: effects/LifePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LifePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LifePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/LinesPanel.o: effects/LinesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LinesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LinesPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopePanel.o: effects/KaleidoscopePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/KaleidoscopePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopeEffect.o: effects/KaleidoscopeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/KaleidoscopeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/KaleidoscopeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/GuitarPanel.o: effects/GuitarPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GuitarPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GuitarPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/GuitarEffect.o: effects/GuitarEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GuitarEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GuitarEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadEffect.o: effects/MovingHeadEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MorphPanel.o: effects/MorphPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MorphPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MorphPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MorphEffect.o: effects/MorphEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MorphEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MorphEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MeteorsPanel.o: effects/MeteorsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MeteorsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MeteorsPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MeteorsEffect.o: effects/MeteorsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MeteorsEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MeteorsEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MarqueePanel.o: effects/MarqueePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MarqueePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MarqueePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MarqueeEffect.o: effects/MarqueeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MarqueeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MarqueeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/LiquidPanel.o: effects/LiquidPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LiquidPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LiquidPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/LiquidEffect.o: effects/LiquidEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/LiquidEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/LiquidEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/FanEffect.o: effects/FanEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FanEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FanEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/FireEffect.o: effects/FireEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FireEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FireEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/FillPanel.o: effects/FillPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FillPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FillPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/FillEffect.o: effects/FillEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FillEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FillEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/FanPanel.o: effects/FanPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FanPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FanPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/FirePanel.o: effects/FirePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FirePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FirePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/FacesPanel.o: effects/FacesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FacesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FacesPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/FacesEffect.o: effects/FacesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FacesEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FacesEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/FX.o: effects/FX.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FX.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FX.o

$(OBJDIR_LINUX_RELEASE)/effects/EffectPanelUtils.o: effects/EffectPanelUtils.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/EffectPanelUtils.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/EffectPanelUtils.o

$(OBJDIR_LINUX_RELEASE)/effects/GlediatorPanel.o: effects/GlediatorPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GlediatorPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GlediatorPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/GlediatorEffect.o: effects/GlediatorEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GlediatorEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GlediatorEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/GarlandsPanel.o: effects/GarlandsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GarlandsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GarlandsPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/GarlandsEffect.o: effects/GarlandsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GarlandsEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GarlandsEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/GalaxyPanel.o: effects/GalaxyPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GalaxyPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GalaxyPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/GalaxyEffect.o: effects/GalaxyEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GalaxyEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GalaxyEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/GIFImage.o: effects/GIFImage.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/GIFImage.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/GIFImage.o

$(OBJDIR_LINUX_RELEASE)/effects/FireworksPanel.o: effects/FireworksPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FireworksPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FireworksPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/FireworksEffect.o: effects/FireworksEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/FireworksEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/FireworksEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ShaderEffect.o: effects/ShaderEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShaderEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShaderEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ServoPanel.o: effects/ServoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ServoPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ServoPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/ServoEffect.o: effects/ServoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ServoEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ServoEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/RipplePanel.o: effects/RipplePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/RipplePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/RipplePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/RippleEffect.o: effects/RippleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/RippleEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/RippleEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/RenderableEffect.o: effects/RenderableEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/RenderableEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/RenderableEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/PlasmaPanel.o: effects/PlasmaPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PlasmaPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PlasmaPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/PlasmaEffect.o: effects/PlasmaEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PlasmaEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PlasmaEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/PinwheelPanel.o: effects/PinwheelPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PinwheelPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PinwheelPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/ShimmerPanel.o: effects/ShimmerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShimmerPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShimmerPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SingleStrandPanel.o: effects/SingleStrandPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SingleStrandPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SingleStrandPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/SingleStrandEffect.o: effects/SingleStrandEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/SingleStrandEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/SingleStrandEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ShockwavePanel.o: effects/ShockwavePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShockwavePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShockwavePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/ShockwaveEffect.o: effects/ShockwaveEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShockwaveEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShockwaveEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/PinwheelEffect.o: effects/PinwheelEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PinwheelEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PinwheelEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ShimmerEffect.o: effects/ShimmerEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShimmerEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShimmerEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ShapePanel.o: effects/ShapePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShapePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShapePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/ShapeEffect.o: effects/ShapeEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShapeEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShapeEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ShaderPanel.o: effects/ShaderPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ShaderPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ShaderPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MusicEffect.o: effects/MusicEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MusicEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MusicEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o: effects/MovingHeadPanels/MovingHeadDimmerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MovingHeadDimmerPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadDimmerPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o: effects/MovingHeadPanels/MovingHeadCanvasPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MovingHeadCanvasPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MovingHeadCanvasPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHRgbPickerPanel.o: effects/MovingHeadPanels/MHRgbPickerPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MHRgbPickerPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHRgbPickerPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPresetBitmapButton.o: effects/MovingHeadPanels/MHPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MHPresetBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPresetBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o: effects/MovingHeadPanels/MHPathPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MHPathPresetBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHPathPresetBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o: effects/MovingHeadPanels/MHDimmerPresetBitmapButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MHDimmerPresetBitmapButton.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHDimmerPresetBitmapButton.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHColorWheelPanel.o: effects/MovingHeadPanels/MHColorWheelPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanels/MHColorWheelPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanels/MHColorWheelPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanel.o: effects/MovingHeadPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MovingHeadPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MovingHeadPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/OnPanel.o: effects/OnPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/OnPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/OnPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/PicturesPanel.o: effects/PicturesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PicturesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PicturesPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/PicturesEffect.o: effects/PicturesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PicturesEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PicturesEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/PianoPanel.o: effects/PianoPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PianoPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PianoPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/PianoEffect.o: effects/PianoEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/PianoEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/PianoEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/OnEffect.o: effects/OnEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/OnEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/OnEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/OffPanel.o: effects/OffPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/OffPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/OffPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/OffEffect.o: effects/OffEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/OffEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/OffEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/MusicPanel.o: effects/MusicPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/MusicPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/MusicPanel.o

$(OBJDIR_LINUX_RELEASE)/WiringDialog.o: WiringDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c WiringDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/WiringDialog.o

$(OBJDIR_LINUX_RELEASE)/VsaImportDialog.o: VsaImportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VsaImportDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/VsaImportDialog.o

$(OBJDIR_LINUX_RELEASE)/Vixen3.o: Vixen3.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c Vixen3.cpp -o $(OBJDIR_LINUX_RELEASE)/Vixen3.o

$(OBJDIR_LINUX_RELEASE)/ViewsModelsPanel.o: ViewsModelsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ViewsModelsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ViewsModelsPanel.o

$(OBJDIR_LINUX_RELEASE)/automation/LuaRunner.o: automation/LuaRunner.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c automation/LuaRunner.cpp -o $(OBJDIR_LINUX_RELEASE)/automation/LuaRunner.o

$(OBJDIR_LINUX_RELEASE)/ViewpointMgr.o: ViewpointMgr.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ViewpointMgr.cpp -o $(OBJDIR_LINUX_RELEASE)/ViewpointMgr.o

$(OBJDIR_LINUX_RELEASE)/ViewpointDialog.o: ViewpointDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ViewpointDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ViewpointDialog.o

$(OBJDIR_LINUX_RELEASE)/ViewObjectPanel.o: ViewObjectPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ViewObjectPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ViewObjectPanel.o

$(OBJDIR_LINUX_RELEASE)/VideoReader.o: VideoReader.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VideoReader.cpp -o $(OBJDIR_LINUX_RELEASE)/VideoReader.o

$(OBJDIR_LINUX_RELEASE)/controllers/AlphaPix.o: controllers/AlphaPix.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/AlphaPix.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/AlphaPix.o

$(OBJDIR_LINUX_RELEASE)/cad/VRMLWriter.o: cad/VRMLWriter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/VRMLWriter.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/VRMLWriter.o

$(OBJDIR_LINUX_RELEASE)/cad/STLWriter.o: cad/STLWriter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/STLWriter.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/STLWriter.o

$(OBJDIR_LINUX_RELEASE)/cad/ModelToCAD.o: cad/ModelToCAD.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/ModelToCAD.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/ModelToCAD.o

$(OBJDIR_LINUX_RELEASE)/cad/DXFWriter.o: cad/DXFWriter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/DXFWriter.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/DXFWriter.o

$(OBJDIR_LINUX_RELEASE)/VideoExporter.o: VideoExporter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VideoExporter.cpp -o $(OBJDIR_LINUX_RELEASE)/VideoExporter.o

$(OBJDIR_LINUX_RELEASE)/cad/CADWriter.o: cad/CADWriter.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/CADWriter.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/CADWriter.o

$(OBJDIR_LINUX_RELEASE)/cad/CADModel.o: cad/CADModel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c cad/CADModel.cpp -o $(OBJDIR_LINUX_RELEASE)/cad/CADModel.o

$(OBJDIR_LINUX_RELEASE)/automation/xLightsAutomations.o: automation/xLightsAutomations.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c automation/xLightsAutomations.cpp -o $(OBJDIR_LINUX_RELEASE)/automation/xLightsAutomations.o

$(OBJDIR_LINUX_RELEASE)/automation/automation.o: automation/automation.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c automation/automation.cpp -o $(OBJDIR_LINUX_RELEASE)/automation/automation.o

$(OBJDIR_LINUX_RELEASE)/UtilFunctions.o: UtilFunctions.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c UtilFunctions.cpp -o $(OBJDIR_LINUX_RELEASE)/UtilFunctions.o

$(OBJDIR_LINUX_RELEASE)/UtilClasses.o: UtilClasses.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c UtilClasses.cpp -o $(OBJDIR_LINUX_RELEASE)/UtilClasses.o

$(OBJDIR_LINUX_RELEASE)/UpdaterDialog.o: UpdaterDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c UpdaterDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/UpdaterDialog.o

$(OBJDIR_LINUX_RELEASE)/TraceLog.o: TraceLog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TraceLog.cpp -o $(OBJDIR_LINUX_RELEASE)/TraceLog.o

$(OBJDIR_LINUX_RELEASE)/TopEffectsPanel.o: TopEffectsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TopEffectsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/TopEffectsPanel.o

$(OBJDIR_LINUX_RELEASE)/TipOfTheDayDialog.o: TipOfTheDayDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TipOfTheDayDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/TipOfTheDayDialog.o

$(OBJDIR_LINUX_RELEASE)/TimingPanel.o: TimingPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TimingPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/TimingPanel.o

$(OBJDIR_LINUX_RELEASE)/TempFileManager.o: TempFileManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TempFileManager.cpp -o $(OBJDIR_LINUX_RELEASE)/TempFileManager.o

$(OBJDIR_LINUX_RELEASE)/TabSetup.o: TabSetup.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TabSetup.cpp -o $(OBJDIR_LINUX_RELEASE)/TabSetup.o

$(OBJDIR_LINUX_RELEASE)/TabSequence.o: TabSequence.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TabSequence.cpp -o $(OBJDIR_LINUX_RELEASE)/TabSequence.o

$(OBJDIR_LINUX_RELEASE)/TabPreview.o: TabPreview.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c TabPreview.cpp -o $(OBJDIR_LINUX_RELEASE)/TabPreview.o

$(OBJDIR_LINUX_RELEASE)/ValueCurveDialog.o: ValueCurveDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ValueCurveDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/ValueCurveDialog.o

$(OBJDIR_LINUX_RELEASE)/VendorMusicHelpers.o: VendorMusicHelpers.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VendorMusicHelpers.cpp -o $(OBJDIR_LINUX_RELEASE)/VendorMusicHelpers.o

$(OBJDIR_LINUX_RELEASE)/VendorMusicDialog.o: VendorMusicDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VendorMusicDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/VendorMusicDialog.o

$(OBJDIR_LINUX_RELEASE)/VendorModelDialog.o: VendorModelDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VendorModelDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/VendorModelDialog.o

$(OBJDIR_LINUX_RELEASE)/ValueCurvesPanel.o: ValueCurvesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ValueCurvesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/ValueCurvesPanel.o

$(OBJDIR_LINUX_RELEASE)/ValueCurveButton.o: ValueCurveButton.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ValueCurveButton.cpp -o $(OBJDIR_LINUX_RELEASE)/ValueCurveButton.o

$(OBJDIR_LINUX_RELEASE)/ValueCurve.o: ValueCurve.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ValueCurve.cpp -o $(OBJDIR_LINUX_RELEASE)/ValueCurve.o

$(OBJDIR_LINUX_RELEASE)/VSAFile.o: VSAFile.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VSAFile.cpp -o $(OBJDIR_LINUX_RELEASE)/VSAFile.o

$(OBJDIR_LINUX_RELEASE)/VAMPPluginDialog.o: VAMPPluginDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c VAMPPluginDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/VAMPPluginDialog.o

$(OBJDIR_LINUX_RELEASE)/effects/ButterflyEffect.o: effects/ButterflyEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ButterflyEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ButterflyEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/CirclesEffect.o: effects/CirclesEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CirclesEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CirclesEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/CandlePanel.o: effects/CandlePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CandlePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CandlePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/CandleEffect.o: effects/CandleEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CandleEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CandleEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ButterflyPanel.o: effects/ButterflyPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ButterflyPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ButterflyPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/CirclesPanel.o: effects/CirclesPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CirclesPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CirclesPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/BarsPanel.o: effects/BarsPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/BarsPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/BarsPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/BarsEffect.o: effects/BarsEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/BarsEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/BarsEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/AdjustPanel.o: effects/AdjustPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/AdjustPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/AdjustPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/EffectManager.o: effects/EffectManager.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/EffectManager.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/EffectManager.o

$(OBJDIR_LINUX_RELEASE)/effects/DuplicatePanel.o: effects/DuplicatePanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/DuplicatePanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/DuplicatePanel.o

$(OBJDIR_LINUX_RELEASE)/effects/DuplicateEffect.o: effects/DuplicateEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/DuplicateEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/DuplicateEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/DMXPanel.o: effects/DMXPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/DMXPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/DMXPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/DMXEffect.o: effects/DMXEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/DMXEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/DMXEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/AdjustEffect.o: effects/AdjustEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/AdjustEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/AdjustEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/CurtainPanel.o: effects/CurtainPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CurtainPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CurtainPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/CurtainEffect.o: effects/CurtainEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/CurtainEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/CurtainEffect.o

$(OBJDIR_LINUX_RELEASE)/effects/ColorWashPanel.o: effects/ColorWashPanel.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ColorWashPanel.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ColorWashPanel.o

$(OBJDIR_LINUX_RELEASE)/effects/ColorWashEffect.o: effects/ColorWashEffect.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c effects/ColorWashEffect.cpp -o $(OBJDIR_LINUX_RELEASE)/effects/ColorWashEffect.o

$(OBJDIR_LINUX_RELEASE)/controllers/Experience.o: controllers/Experience.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/Experience.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/Experience.o

$(OBJDIR_LINUX_RELEASE)/controllers/Falcon.o: controllers/Falcon.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/Falcon.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/Falcon.o

$(OBJDIR_LINUX_RELEASE)/controllers/FPPUploadProgressDialog.o: controllers/FPPUploadProgressDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/FPPUploadProgressDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/FPPUploadProgressDialog.o

$(OBJDIR_LINUX_RELEASE)/controllers/FPPConnectDialog.o: controllers/FPPConnectDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/FPPConnectDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/FPPConnectDialog.o

$(OBJDIR_LINUX_RELEASE)/controllers/FPP.o: controllers/FPP.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/FPP.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/FPP.o

$(OBJDIR_LINUX_RELEASE)/controllers/HinksPix.o: controllers/HinksPix.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/HinksPix.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/HinksPix.o

$(OBJDIR_LINUX_RELEASE)/controllers/ESPixelStick.o: controllers/ESPixelStick.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/ESPixelStick.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/ESPixelStick.o

$(OBJDIR_LINUX_RELEASE)/controllers/ControllerUploadData.o: controllers/ControllerUploadData.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/ControllerUploadData.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/ControllerUploadData.o

$(OBJDIR_LINUX_RELEASE)/controllers/ControllerCaps.o: controllers/ControllerCaps.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/ControllerCaps.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/ControllerCaps.o

$(OBJDIR_LINUX_RELEASE)/controllers/BaseController.o: controllers/BaseController.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/BaseController.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/BaseController.o

$(OBJDIR_LINUX_RELEASE)/controllers/WebSocketClient.o: controllers/WebSocketClient.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/WebSocketClient.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/WebSocketClient.o

$(OBJDIR_LINUX_RELEASE)/controllers/WLED.o: controllers/WLED.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/WLED.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/WLED.o

$(OBJDIR_LINUX_RELEASE)/controllers/SanDevices.o: controllers/SanDevices.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/SanDevices.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/SanDevices.o

$(OBJDIR_LINUX_RELEASE)/controllers/Pixlite16.o: controllers/Pixlite16.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/Pixlite16.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/Pixlite16.o

$(OBJDIR_LINUX_RELEASE)/__/common/xlBaseApp.o: ../common/xlBaseApp.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c ../common/xlBaseApp.cpp -o $(OBJDIR_LINUX_RELEASE)/__/common/xlBaseApp.o

$(OBJDIR_LINUX_RELEASE)/controllers/Minleon.o: controllers/Minleon.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/Minleon.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/Minleon.o

$(OBJDIR_LINUX_RELEASE)/controllers/J1Sys.o: controllers/J1Sys.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/J1Sys.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/J1Sys.o

$(OBJDIR_LINUX_RELEASE)/controllers/ILightThat.o: controllers/ILightThat.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/ILightThat.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/ILightThat.o

$(OBJDIR_LINUX_RELEASE)/controllers/HinksPixExportDialog.o: controllers/HinksPixExportDialog.cpp
	$(CXX) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c controllers/HinksPixExportDialog.cpp -o $(OBJDIR_LINUX_RELEASE)/controllers/HinksPixExportDialog.o

clean_linux_release: 
	rm -f $(OBJ_LINUX_RELEASE) $(OUT_LINUX_RELEASE)

models/SpinnerModel.cpp: models/SpinnerModel.h models/ModelScreenLocation.h

models/SpinnerModel.h: models/Model.h

models/Model.h: models/ModelScreenLocation.h models/BoxedScreenLocation.h models/TwoPointScreenLocation.h models/ThreePointScreenLocation.h models/PolyPointScreenLocation.h models/PWMOutput.h Color.h models/BaseObject.h UtilFunctions.h

models/ModelScreenLocation.h: models/Node.h

models/Node.h: Color.h

models/BoxedScreenLocation.h: models/ModelScreenLocation.h

models/TwoPointScreenLocation.h: models/ModelScreenLocation.h

models/ThreePointScreenLocation.h: models/TwoPointScreenLocation.h

models/PolyPointScreenLocation.h: models/ModelScreenLocation.h

models/BaseObject.h: OutputModelManager.h models/BaseObjectVisitor.h models/ModelScreenLocation.h

models/SphereModel.cpp: models/SphereModel.h models/ModelScreenLocation.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h models/CustomModel.h

models/SphereModel.h: models/MatrixModel.h

models/MatrixModel.h: models/Model.h

xLightsMain.h: outputs/OutputManager.h PixelBuffer.h SequenceData.h effects/EffectManager.h models/ModelManager.h models/ViewObjectManager.h xLightsTimer.h JobPool.h SequenceViewManager.h ColorManager.h ViewpointMgr.h PhonemeDictionary.h xLightsXmlFile.h sequencer/EffectsGrid.h RenderCache.h outputs/ZCPP.h OutputModelManager.h models/Model.h SequencePackage.h ScriptsDialog.h TipOfTheDayDialog.h

PixelBuffer.h: Color.h GPURenderUtils.h RenderBuffer.h RenderUtils.h ValueCurve.h models/Model.h models/SingleLineModel.h

RenderBuffer.h: ../include/globals.h Color.h ColorCurve.h models/Node.h

ColorCurve.h: Color.h

models/SingleLineModel.h: models/Model.h

models/ModelManager.h: models/ObjectManager.h

models/ViewObjectManager.h: models/ObjectManager.h

ColorManager.h: Color.h

xLightsXmlFile.h: sequencer/SequenceElements.h DataLayer.h AudioManager.h Vixen3.h

sequencer/SequenceElements.h: sequencer/EffectLayer.h sequencer/Element.h sequencer/UndoManager.h

sequencer/EffectLayer.h: sequencer/Effect.h sequencer/UndoManager.h effects/EffectManager.h

sequencer/Effect.h: ColorCurve.h UtilClasses.h Color.h

UtilClasses.h: UtilFunctions.h

sequencer/Element.h: sequencer/EffectLayer.h effects/EffectManager.h

DataLayer.h: SequenceData.h

sequencer/EffectsGrid.h: Color.h sequencer/SequenceElements.h sequencer/TimeLine.h sequencer/EffectLayer.h sequencer/Effect.h sequencer/Element.h EffectTreeDialog.h ValueCurve.h sequencer/RowHeading.h

EffectTreeDialog.h: effects/GIFImage.h

sequencer/RowHeading.h: sequencer/SequenceElements.h Color.h

SequencePackage.h: sequencer/Element.h sequencer/Effect.h

ModelPreview.h: Color.h ViewpointMgr.h models/ModelManager.h Mouse3DManager.h

models/CustomModel.h: models/Model.h

models/SingleLineModel.cpp: models/SingleLineModel.h models/ModelScreenLocation.h

models/Shapes.cpp: models/Shapes.h support/VectorMath.h

models/Shapes.h: Color.h

models/RulerObject.cpp: models/RulerObject.h ModelPreview.h models/Model.h

models/RulerObject.h: models/ViewObject.h models/TwoPointScreenLocation.h

models/ViewObject.h: models/BaseObject.h models/ModelScreenLocation.h models/ViewObjectManager.h

models/PolyPointScreenLocation.cpp: models/PolyPointScreenLocation.h ModelPreview.h models/Shapes.h support/VectorMath.h UtilFunctions.h models/RulerObject.h

models/PolyLineModel.cpp: models/PolyLineModel.h models/ModelScreenLocation.h models/Shapes.h support/VectorMath.h xLightsMain.h xLightsVersion.h UtilFunctions.h ModelPreview.h

models/PolyLineModel.h: models/Model.h

models/ObjectManager.cpp: models/ObjectManager.h

models/Node.cpp: models/Node.h

models/ThreePointScreenLocation.cpp: models/ThreePointScreenLocation.h ModelPreview.h support/VectorMath.h UtilFunctions.h models/RulerObject.h

models/ViewObjectManager.cpp: models/ViewObjectManager.h models/GridlinesObject.h models/RulerObject.h models/ImageObject.h models/MeshObject.h models/TerrianObject.h xLightsMain.h

models/GridlinesObject.h: models/ViewObject.h models/BoxedScreenLocation.h

models/ImageObject.h: models/ViewObject.h models/BoxedScreenLocation.h

models/MeshObject.h: models/ViewObject.h models/BoxedScreenLocation.h

models/TerrianObject.h: models/ViewObject.h models/TerrianScreenLocation.h

models/TerrianScreenLocation.h: models/BoxedScreenLocation.h

models/ViewObject.cpp: models/ViewObject.h models/Model.h

models/TwoPointScreenLocation.cpp: models/TwoPointScreenLocation.h models/Model.h ModelPreview.h support/VectorMath.h UtilFunctions.h models/RulerObject.h

models/TreeModel.cpp: models/TreeModel.h models/ModelScreenLocation.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h models/CustomModel.h

models/TreeModel.h: models/MatrixModel.h

models/MultiPointScreenLocation.cpp: models/MultiPointScreenLocation.h

models/MultiPointScreenLocation.h: models/PolyPointScreenLocation.h

models/TerrianObject.cpp: models/TerrianObject.h ModelPreview.h models/Model.h models/RulerObject.h ExternalHooks.h

ExternalHooks.h: Color.h

models/TerrainScreenLocation.cpp: support/VectorMath.h models/TerrianScreenLocation.h

models/SubModel.cpp: models/SubModel.h models/ModelManager.h models/ModelGroup.h

models/SubModel.h: models/Model.h

models/ModelGroup.h: models/Model.h

models/StarModel.cpp: models/StarModel.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h

models/StarModel.h: models/Model.h

models/DMX/Servo.cpp: models/BaseObject.h models/ModelScreenLocation.h

models/IciclesModel.cpp: models/IciclesModel.h OutputModelManager.h

models/IciclesModel.h: models/Model.h

models/GridlinesObject.cpp: models/GridlinesObject.h ModelPreview.h models/Model.h models/RulerObject.h

models/DMX/MovingHeads/MhFeatureDialog.cpp: MhFeatureDialog.h tmGridCell.h UtilFunctions.h

models/DMX/MovingHeads/MhChannelDialog.cpp: UtilFunctions.h

models/Model.cpp: CachedFileDownloader.h models/CustomModel.h models/Model.h models/ModelGroup.h models/ModelManager.h models/ModelScreenLocation.h models/RulerObject.h models/SubModel.h Color.h DimmingCurve.h EditAliasesDialog.h ExternalHooks.h ModelChainDialog.h ModelDimmingCurveDialog.h ModelFaceDialog.h ModelPreview.h ModelStateDialog.h Pixels.h StartChannelDialog.h StrandNodeNamesDialog.h SubModelsDialog.h UtilFunctions.h VendorModelDialog.h outputs/Controller.h outputs/ControllerSerial.h outputs/IPOutput.h outputs/Output.h outputs/OutputManager.h xLightsApp.h xLightsMain.h xLightsVersion.h xLightsXmlFile.h models/XmlSerializer.h

DimmingCurve.h: Color.h

ModelDimmingCurveDialog.h: DimmingCurvePanel.h

DimmingCurvePanel.h: DimmingCurve.h

VendorModelDialog.h: CachedFileDownloader.h

outputs/Controller.h: UtilFunctions.h outputs/Output.h

outputs/ControllerSerial.h: outputs/Controller.h

outputs/IPOutput.h: outputs/Output.h

models/XmlSerializer.h: models/ArchesModel.h models/BaseObject.h models/BaseObjectVisitor.h models/ThreePointScreenLocation.h

models/ArchesModel.h: models/Model.h

models/MultiPointModel.cpp: models/MultiPointModel.h xLightsMain.h xLightsVersion.h

models/MultiPointModel.h: models/Model.h models/MultiPointScreenLocation.h

models/ModelScreenLocation.cpp: models/ModelScreenLocation.h models/Model.h ModelPreview.h models/Shapes.h ViewpointMgr.h support/VectorMath.h UtilFunctions.h xLightsApp.h xLightsMain.h models/RulerObject.h

models/ModelManager.cpp: models/ArchesModel.h models/CandyCaneModel.h models/ChannelBlockModel.h CheckboxSelectDialog.h models/CircleModel.h models/CubeModel.h models/CustomModel.h models/IciclesModel.h models/ImageModel.h models/Model.h models/ModelGroup.h models/ModelManager.h models/MultiPointModel.h Parallel.h models/PolyLineModel.h models/SingleLineModel.h models/SphereModel.h models/SpinnerModel.h models/StarModel.h models/SubModel.h models/TreeModel.h UtilFunctions.h models/WholeHouseModel.h models/WindowFrameModel.h models/WreathModel.h ModelPreview.h Pixels.h sequencer/Element.h xLightsMain.h outputs/Controller.h outputs/ControllerEthernet.h outputs/Output.h

models/CandyCaneModel.h: models/Model.h

models/ChannelBlockModel.h: models/Model.h

models/CircleModel.h: models/Model.h

models/CubeModel.h: models/Model.h

models/ImageModel.h: models/Model.h

Parallel.h: JobPool.h

models/WholeHouseModel.h: models/Model.h

models/WindowFrameModel.h: models/Model.h

models/WreathModel.h: models/Model.h

outputs/ControllerEthernet.h: outputs/Controller.h outputs/IPOutput.h

models/ModelGroup.cpp: models/ModelGroup.h models/ModelManager.h models/SingleLineModel.h models/ModelScreenLocation.h UtilFunctions.h

models/WholeHouseModel.cpp: models/WholeHouseModel.h models/ModelScreenLocation.h

models/MeshObject.cpp: models/MeshObject.h UtilFunctions.h ModelPreview.h ExternalHooks.h xLightsMain.h

models/MatrixModel.cpp: models/MatrixModel.h models/ModelScreenLocation.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h

models/ImageObject.cpp: models/ImageObject.h UtilFunctions.h ModelPreview.h xLightsMain.h ExternalHooks.h

models/ImageModel.cpp: models/ImageModel.h models/ModelScreenLocation.h ModelPreview.h RenderBuffer.h xLightsMain.h UtilFunctions.h ExternalHooks.h

outputs/TestPreset.cpp: outputs/TestPreset.h outputs/Output.h UtilFunctions.h

outputs/SerialOutput.cpp: outputs/SerialOutput.h outputs/LOROutput.h outputs/LOROptimisedOutput.h outputs/DLightOutput.h outputs/RenardOutput.h outputs/DMXOutput.h outputs/xxxSerialOutput.h outputs/PixelNetOutput.h outputs/OpenDMXOutput.h outputs/OpenPixelNetOutput.h outputs/GenericSerialOutput.h outputs/OutputManager.h UtilFunctions.h

outputs/SerialOutput.h: outputs/Output.h outputs/serial.h

outputs/LOROutput.h: outputs/SerialOutput.h

outputs/LOROptimisedOutput.h: outputs/LOROutput.h outputs/LorControllers.h

outputs/LorControllers.h: outputs/LorController.h

outputs/DLightOutput.h: outputs/LOROutput.h

outputs/RenardOutput.h: outputs/SerialOutput.h

outputs/DMXOutput.h: outputs/SerialOutput.h

outputs/xxxSerialOutput.h: outputs/SerialOutput.h

outputs/PixelNetOutput.h: outputs/SerialOutput.h

outputs/OpenDMXOutput.h: outputs/SerialOutput.h

outputs/OpenPixelNetOutput.h: outputs/SerialOutput.h

outputs/GenericSerialOutput.h: outputs/SerialOutput.h

outputs/RenardOutput.cpp: outputs/RenardOutput.h

outputs/PixelNetOutput.cpp: outputs/PixelNetOutput.h

outputs/OutputManager.cpp: outputs/OutputManager.h outputs/ControllerEthernet.h outputs/ControllerNull.h outputs/ControllerSerial.h outputs/SerialOutput.h outputs/E131Output.h outputs/ZCPPOutput.h outputs/ArtNetOutput.h outputs/DDPOutput.h outputs/xxxEthernetOutput.h outputs/OPCOutput.h outputs/TestPreset.h Parallel.h UtilFunctions.h

outputs/ControllerNull.h: outputs/Controller.h

outputs/E131Output.h: outputs/IPOutput.h

outputs/ZCPPOutput.h: outputs/IPOutput.h outputs/ZCPP.h

outputs/ArtNetOutput.h: outputs/IPOutput.h

outputs/DDPOutput.h: outputs/IPOutput.h

outputs/xxxEthernetOutput.h: outputs/IPOutput.h

outputs/OPCOutput.h: outputs/IPOutput.h

outputs/Output.cpp: outputs/Output.h outputs/E131Output.h outputs/ZCPPOutput.h outputs/ArtNetOutput.h outputs/KinetOutput.h outputs/DDPOutput.h outputs/NullOutput.h outputs/LOROutput.h outputs/LOROptimisedOutput.h outputs/DLightOutput.h outputs/DMXOutput.h outputs/xxxSerialOutput.h outputs/xxxEthernetOutput.h outputs/TwinklyOutput.h outputs/OPCOutput.h outputs/PixelNetOutput.h outputs/RenardOutput.h outputs/OpenPixelNetOutput.h outputs/OpenDMXOutput.h outputs/GenericSerialOutput.h UtilFunctions.h outputs/OutputManager.h outputs/Controller.h

outputs/KinetOutput.h: outputs/IPOutput.h

outputs/NullOutput.h: outputs/Output.h

outputs/TwinklyOutput.h: outputs/IPOutput.h

outputs/OpenPixelNetOutput.cpp: outputs/OpenPixelNetOutput.h

outputs/OpenDMXOutput.cpp: outputs/OpenDMXOutput.h

outputs/OPCOutput.cpp: outputs/OPCOutput.h outputs/OutputManager.h UtilFunctions.h outputs/ControllerEthernet.h

preferences/EffectsGridSettingsPanel.cpp: xLightsMain.h

preferences/ColorManagerSettingsPanel.cpp: xLightsMain.h sequencer/MainSequencer.h UtilFunctions.h xlColourData.h

sequencer/MainSequencer.h: sequencer/RowHeading.h sequencer/EffectsGrid.h sequencer/Waveform.h KeyBindings.h

sequencer/Waveform.h: AudioManager.h

preferences/CheckSequenceSettingsPanel.cpp: xLightsMain.h

preferences/BackupSettingsPanel.cpp: xLightsMain.h

outputs/xxxSerialOutput.cpp: outputs/xxxSerialOutput.h outputs/ControllerSerial.h OutputModelManager.h outputs/ControllerEthernet.h models/ModelManager.h

outputs/NullOutput.cpp: outputs/NullOutput.h OutputModelManager.h

outputs/xxxEthernetOutput.cpp: outputs/xxxEthernetOutput.h outputs/OutputManager.h UtilFunctions.h models/ModelManager.h outputs/ControllerEthernet.h

outputs/serial.cpp: outputs/serial.h outputs/serial_win32.cpp outputs/serial_posix.cpp

outputs/serial_posix.cpp: outputs/serial.h

outputs/ZCPPOutput.cpp: outputs/ZCPPOutput.h outputs/OutputManager.h UtilFunctions.h outputs/ControllerEthernet.h OutputModelManager.h ExternalHooks.h Discovery.h

Discovery.h: outputs/ControllerEthernet.h

outputs/TwinklyOutput.cpp: outputs/TwinklyOutput.h outputs/OutputManager.h UtilFunctions.h Discovery.h OutputModelManager.h

outputs/Controller.cpp: outputs/Controller.h UtilFunctions.h outputs/Output.h outputs/OutputManager.h OutputModelManager.h outputs/ControllerEthernet.h outputs/ControllerNull.h outputs/ControllerSerial.h models/Model.h

outputs/DDPOutput.cpp: outputs/DDPOutput.h outputs/OutputManager.h UtilFunctions.h OutputModelManager.h outputs/ControllerEthernet.h Discovery.h

outputs/ControllerSerial.cpp: outputs/ControllerSerial.h OutputModelManager.h UtilFunctions.h SpecialOptions.h outputs/OutputManager.h outputs/Output.h outputs/SerialOutput.h outputs/DDPOutput.h outputs/DLightOutput.h outputs/DMXOutput.h outputs/OpenDMXOutput.h outputs/OpenPixelNetOutput.h outputs/RenardOutput.h outputs/LOROutput.h outputs/LOROptimisedOutput.h outputs/PixelNetOutput.h outputs/xxxSerialOutput.h outputs/GenericSerialOutput.h models/ModelManager.h

outputs/ControllerNull.cpp: outputs/ControllerNull.h outputs/OutputManager.h outputs/Output.h UtilFunctions.h SpecialOptions.h OutputModelManager.h outputs/NullOutput.h models/ModelManager.h

outputs/ControllerEthernet.cpp: outputs/ControllerEthernet.h outputs/OutputManager.h outputs/Output.h UtilFunctions.h SpecialOptions.h OutputModelManager.h outputs/IPOutput.h outputs/E131Output.h outputs/ArtNetOutput.h outputs/ZCPPOutput.h outputs/DDPOutput.h outputs/KinetOutput.h outputs/xxxEthernetOutput.h outputs/TwinklyOutput.h outputs/OPCOutput.h models/ModelManager.h xLightsMain.h

outputs/ArtNetOutput.cpp: outputs/ArtNetOutput.h outputs/OutputManager.h UtilFunctions.h outputs/ControllerEthernet.h OutputModelManager.h SpecialOptions.h models/ModelManager.h Discovery.h

models/WreathModel.cpp: models/WreathModel.h

models/WindowFrameModel.cpp: models/WindowFrameModel.h models/ModelScreenLocation.h

outputs/KinetOutput.cpp: outputs/KinetOutput.h outputs/OutputManager.h UtilFunctions.h outputs/ControllerEthernet.h models/ModelManager.h

outputs/LorControllers.cpp: outputs/LorControllers.h

outputs/LorController.cpp: outputs/LorController.h UtilFunctions.h

outputs/LOROutput.cpp: outputs/LOROutput.h

outputs/LOROptimisedOutput.cpp: outputs/LOROptimisedOutput.h outputs/Controller.h OutputModelManager.h UtilFunctions.h

outputs/IPOutput.cpp: outputs/IPOutput.h

outputs/GenericSerialOutput.cpp: outputs/GenericSerialOutput.h

outputs/E131Output.cpp: outputs/E131Output.h outputs/OutputManager.h UtilFunctions.h outputs/ControllerEthernet.h models/ModelManager.h

outputs/DMXOutput.cpp: outputs/DMXOutput.h

effects/WarpPanel.cpp: effects/WarpPanel.h effects/WarpEffect.h effects/EffectPanelUtils.h

effects/WarpPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

BulkEditControls.h: ValueCurveButton.h xlLockButton.h

ValueCurveButton.h: ValueCurve.h

effects/EffectPanelUtils.h: xlLockButton.h

effects/WarpEffect.h: effects/RenderableEffect.h

effects/RenderableEffect.h: Color.h effects/assist/AssistPanel.h

effects/assist/AssistPanel.h: xlGridCanvas.h

xlGridCanvas.h: sequencer/Effect.h

effects/WarpEffect.cpp: ../include/warp-64.xpm ../include/warp-48.xpm ../include/warp-32.xpm ../include/warp-24.xpm ../include/warp-16.xpm effects/WarpEffect.h effects/WarpPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h xLightsMain.h DissolveTransitionPattern.h xLightsApp.h TimingPanel.h UtilFunctions.h Parallel.h

TimingPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/VideoPanel.cpp: effects/VideoPanel.h effects/VideoEffect.h effects/EffectPanelUtils.h UtilFunctions.h ExternalHooks.h xLightsMain.h xLightsApp.h

effects/VideoPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/VideoEffect.h: effects/RenderableEffect.h RenderBuffer.h

effects/VideoEffect.cpp: ../include/video-16.xpm ../include/video-24.xpm ../include/video-32.xpm ../include/video-48.xpm ../include/video-64.xpm effects/VideoEffect.h effects/VideoPanel.h VideoReader.h sequencer/Effect.h RenderBuffer.h UtilClasses.h xLightsXmlFile.h xLightsMain.h models/Model.h UtilFunctions.h ExternalHooks.h

effects/VUMeterPanel.cpp: effects/VUMeterPanel.h effects/EffectPanelUtils.h effects/VUMeterEffect.h UtilFunctions.h

effects/VUMeterPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/VUMeterEffect.h: effects/RenderableEffect.h RenderBuffer.h

effects/VUMeterEffect.cpp: effects/VUMeterEffect.h effects/VUMeterPanel.h AudioManager.h sequencer/SequenceElements.h xLightsMain.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h UtilFunctions.h ExternalHooks.h ../include/vumeter-16.xpm ../include/vumeter-24.xpm ../include/vumeter-32.xpm ../include/vumeter-48.xpm ../include/vumeter-64.xpm

effects/TwinklePanel.cpp: effects/TwinklePanel.h effects/TwinkleEffect.h effects/EffectPanelUtils.h

effects/TwinklePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/TwinkleEffect.h: effects/RenderableEffect.h

effects/TwinkleEffect.cpp: effects/TwinkleEffect.h effects/TwinklePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/twinkle-16.xpm ../include/twinkle-24.xpm ../include/twinkle-32.xpm ../include/twinkle-48.xpm ../include/twinkle-64.xpm ValueCurve.h Parallel.h

effects/TreePanel.cpp: effects/TreePanel.h effects/EffectPanelUtils.h

effects/TreePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/assist/SketchAssistPanel.cpp: effects/assist/SketchAssistPanel.h effects/assist/SketchCanvasPanel.h UtilFunctions.h xLightsMain.h ExternalHooks.h

effects/assist/SketchAssistPanel.h: effects/SketchEffectDrawing.h effects/assist/SketchCanvasPanel.h

effects/SketchEffectDrawing.h: effects/assist/SketchCanvasPanel.h

effects/assist/xlGridCanvasPictures.cpp: effects/assist/xlGridCanvasPictures.h ResizeImageDialog.h ExternalHooks.h UtilFunctions.h

effects/assist/xlGridCanvasPictures.h: xlGridCanvas.h sequencer/Effect.h

effects/assist/xlGridCanvasMorph.cpp: effects/assist/xlGridCanvasMorph.h BitmapCache.h xLightsApp.h xLightsMain.h ValueCurveButton.h

effects/assist/xlGridCanvasMorph.h: xlGridCanvas.h sequencer/Effect.h

effects/assist/xlGridCanvasEmpty.cpp: effects/assist/xlGridCanvasEmpty.h

effects/assist/xlGridCanvasEmpty.h: xlGridCanvas.h sequencer/Effect.h

effects/assist/SketchCanvasPanel.cpp: effects/assist/SketchCanvasPanel.h effects/SketchEffectDrawing.h

effects/TreeEffect.cpp: effects/TreeEffect.h effects/TreePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/tree-16.xpm ../include/tree-24.xpm ../include/tree-32.xpm ../include/tree-48.xpm ../include/tree-64.xpm

effects/TreeEffect.h: effects/RenderableEffect.h

effects/assist/PicturesAssistPanel.cpp: effects/assist/PicturesAssistPanel.h xlColorPicker.h xlColorPickerFields.h ../include/PaintToolIcons.h models/Model.h xLightsMain.h xLightsXmlFile.h ExternalHooks.h ColorPanel.h

effects/assist/PicturesAssistPanel.h: FlickerFreeBitmapButton.h effects/assist/xlGridCanvasPictures.h sequencer/Effect.h ColorPanel.h

ColorPanel.h: xlLockButton.h ColorCurve.h BulkEditControls.h effects/EffectPanelUtils.h

xlColorPicker.h: Color.h

xlColorPickerFields.h: xlColorPicker.h Color.h xlColorCanvas.h xlSlider.h

xlColorCanvas.h: Color.h

effects/assist/AssistPanel.cpp: effects/assist/AssistPanel.h effects/assist/SketchAssistPanel.h xLightsMain.h models/Model.h sequencer/Element.h

effects/WavePanel.cpp: effects/WavePanel.h effects/EffectPanelUtils.h effects/WaveEffect.h

effects/WavePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/WaveEffect.h: effects/RenderableEffect.h

effects/WaveEffect.cpp: effects/WaveEffect.h effects/WavePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h UtilFunctions.h ../include/wave-16.xpm ../include/wave-24.xpm ../include/wave-32.xpm ../include/wave-48.xpm ../include/wave-64.xpm

effects/SpirographEffect.cpp: effects/SpirographEffect.h effects/SpirographPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/spirograph-16.xpm ../include/spirograph-24.xpm ../include/spirograph-32.xpm ../include/spirograph-48.xpm ../include/spirograph-64.xpm

effects/SpirographEffect.h: effects/RenderableEffect.h

effects/SpirographPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/SpiralsPanel.cpp: effects/SpiralsPanel.h effects/EffectPanelUtils.h effects/SpiralsEffect.h

effects/SpiralsPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/SpiralsEffect.h: effects/RenderableEffect.h

effects/SpiralsEffect.cpp: effects/SpiralsEffect.h effects/SpiralsPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/spirals-16.xpm ../include/spirals-24.xpm ../include/spirals-32.xpm ../include/spirals-48.xpm ../include/spirals-64.xpm Parallel.h

effects/SnowstormPanel.cpp: effects/SnowstormPanel.h effects/EffectPanelUtils.h

effects/SnowstormPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/SnowstormEffect.cpp: effects/SnowstormEffect.h effects/SnowstormPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/snowstorm-16.xpm ../include/snowstorm-24.xpm ../include/snowstorm-32.xpm ../include/snowstorm-48.xpm ../include/snowstorm-64.xpm

effects/SnowstormEffect.h: effects/RenderableEffect.h

effects/SnowflakesPanel.cpp: effects/SnowflakesPanel.h effects/EffectPanelUtils.h effects/SnowflakesEffect.h

effects/SnowflakesPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/SnowflakesEffect.h: effects/RenderableEffect.h

effects/SnowflakesEffect.cpp: effects/SnowflakesEffect.h effects/SnowflakesPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/snowflakes-16.xpm ../include/snowflakes-24.xpm ../include/snowflakes-32.xpm ../include/snowflakes-48.xpm ../include/snowflakes-64.xpm

effects/SketchPanel.cpp: effects/SketchPanel.h BulkEditControls.h xLightsMain.h effects/assist/SketchAssistPanel.h

effects/SketchPanel.h: effects/EffectPanelUtils.h BulkEditControls.h

effects/SketchEffectDrawing.cpp: effects/SketchEffectDrawing.h

effects/StrobePanel.cpp: effects/StrobePanel.h effects/EffectPanelUtils.h

effects/StrobePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/TextPanel.cpp: effects/TextPanel.h effects/EffectPanelUtils.h ExternalHooks.h FontManager.h

effects/TextPanel.h: BulkEditControls.h effects/EffectPanelUtils.h ExternalHooks.h

effects/TextEffect.cpp: effects/TextEffect.h effects/TextPanel.h sequencer/Effect.h sequencer/Element.h sequencer/EffectsGrid.h RenderBuffer.h UtilClasses.h models/Model.h UtilFunctions.h FontManager.h xLightsMain.h ExternalHooks.h xLightsXmlFile.h ../include/text-16.xpm ../include/text-24.xpm ../include/text-32.xpm ../include/text-48.xpm ../include/text-64.xpm

effects/TextEffect.h: effects/RenderableEffect.h

effects/TendrilPanel.cpp: effects/TendrilPanel.h effects/EffectPanelUtils.h effects/TendrilEffect.h

effects/TendrilPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/TendrilEffect.h: effects/RenderableEffect.h RenderBuffer.h

effects/TendrilEffect.cpp: effects/TendrilEffect.h effects/TendrilPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h ../include/tendril-16.xpm ../include/tendril-24.xpm ../include/tendril-32.xpm ../include/tendril-48.xpm ../include/tendril-64.xpm

graphics/opengl/DrawGLUtils.cpp: ExternalHooks.h UtilFunctions.h

effects/StrobeEffect.cpp: effects/StrobeEffect.h effects/StrobePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h models/Model.h ../include/strobe.xpm UtilFunctions.h

effects/StrobeEffect.h: effects/RenderableEffect.h

effects/StatePanel.cpp: effects/StatePanel.h effects/EffectPanelUtils.h effects/StateEffect.h

effects/StatePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/StateEffect.h: effects/RenderableEffect.h

effects/StateEffect.cpp: effects/StateEffect.h effects/StatePanel.h RenderBuffer.h UtilClasses.h UtilFunctions.h models/Model.h models/ModelGroup.h models/SubModel.h sequencer/Effect.h sequencer/SequenceElements.h ../include/state-16.xpm ../include/state-64.xpm

effects/SpirographPanel.cpp: effects/SpirographPanel.h effects/EffectPanelUtils.h effects/SpirographEffect.h

models/DMX/DmxMovingHead.cpp: models/ModelScreenLocation.h ModelPreview.h RenderBuffer.h xLightsVersion.h xLightsMain.h UtilFunctions.h models/XmlSerializer.h

models/DMX/DmxMotor.cpp: models/BaseObject.h models/ModelScreenLocation.h

models/DMX/DmxModel.cpp: models/ModelScreenLocation.h ModelPreview.h RenderBuffer.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxImage.cpp: UtilFunctions.h ExternalHooks.h ModelPreview.h xLightsMain.h

models/DMX/DmxGeneral.cpp: models/ModelScreenLocation.h ModelPreview.h RenderBuffer.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxFloodlight.cpp: ModelPreview.h UtilFunctions.h xLightsMain.h xLightsVersion.h

models/DMX/DmxFloodArea.cpp: ModelPreview.h UtilFunctions.h xLightsMain.h xLightsVersion.h

models/DMX/DmxDimmerAbility.cpp: models/BaseObject.h Color.h

models/DMX/Mesh.cpp: UtilFunctions.h ExternalHooks.h ModelPreview.h xLightsMain.h

models/DMX/DmxSkulltronix.cpp: ModelPreview.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxSkull.cpp: ModelPreview.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxShutterAbility.cpp: models/BaseObject.h Color.h

models/DMX/DmxServo3D.cpp: ModelPreview.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxColorAbilityWheel.cpp: models/BaseObject.h models/Model.h models/Node.h Color.h

models/DMX/DmxServo.cpp: ModelPreview.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/DMX/DmxPresetAbility.cpp: models/BaseObject.h models/Model.h models/Node.h Color.h

models/DMX/DmxPanTiltAbility.cpp: models/BaseObject.h

models/DMX/DmxMovingHeadAdv.cpp: MhFeatureDialog.h ModelPreview.h xLightsVersion.h xLightsMain.h UtilFunctions.h

models/BaseObject.cpp: models/BaseObject.h models/ModelScreenLocation.h xLightsMain.h xLightsApp.h

models/ArchesModel.cpp: models/ArchesModel.h models/ModelScreenLocation.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h

graphics/xlMesh.cpp: ExternalHooks.h UtilFunctions.h

graphics/opengl/xlGLCanvas.cpp: UtilFunctions.h ExternalHooks.h

models/DMX/DmxColorAbilityRGB.cpp: models/BaseObject.h models/Model.h models/Node.h

models/DMX/DmxColorAbilityCMY.cpp: models/BaseObject.h models/Model.h Color.h models/Node.h

models/DMX/DmxColorAbility.cpp: models/BaseObject.h

models/CustomModel.cpp: models/CustomModel.h CustomModelDialog.h xLightsMain.h xLightsVersion.h outputs/Controller.h UtilFunctions.h ExternalHooks.h outputs/OutputManager.h ModelPreview.h

models/CubeModel.cpp: models/CubeModel.h models/ModelScreenLocation.h xLightsVersion.h xLightsMain.h UtilFunctions.h outputs/OutputManager.h outputs/Controller.h ModelPreview.h models/CustomModel.h

models/CircleModel.cpp: models/CircleModel.h models/ModelScreenLocation.h OutputModelManager.h xLightsVersion.h xLightsMain.h UtilFunctions.h ModelPreview.h

models/ChannelBlockModel.cpp: models/ChannelBlockModel.h models/ModelScreenLocation.h OutputModelManager.h

models/CandyCaneModel.cpp: OutputModelManager.h models/CandyCaneModel.h models/ModelScreenLocation.h

models/BoxedScreenLocation.cpp: models/BoxedScreenLocation.h models/Model.h ModelPreview.h support/VectorMath.h models/RulerObject.h

xLightsTimer.cpp: xLightsTimer.h

xLightsMain.cpp: AboutDialog.h BatchRenderDialog.h CachedFileDownloader.h CheckboxSelectDialog.h ColourReplaceDialog.h ColoursPanel.h ConvertDialog.h EffectAssist.h EffectIconPanel.h EffectsPanel.h EmailDialog.h ExportSettings.h ExternalHooks.h FindDataPanel.h GPURenderUtils.h GenerateCustomModelDialog.h GenerateLyricsDialog.h HousePreviewPanel.h IPEntryDialog.h JukeboxPanel.h KeyBindingEditDialog.h LayoutGroup.h LayoutPanel.h LyricUserDictDialog.h ModelPreview.h ModelRemap.h MultiControllerUploadDialog.h Parallel.h PathGenerationDialog.h PixelTestDialog.h RenderCommandEvent.h RestoreBackupDialog.h SeqSettingsDialog.h ShaderDownloadDialog.h SpecialOptions.h SplashDialog.h TopEffectsPanel.h TraceLog.h UpdaterDialog.h UtilFunctions.h ValueCurveButton.h ValueCurvesPanel.h VendorModelDialog.h VendorMusicDialog.h VideoExporter.h ViewsModelsPanel.h xLightsApp.h xLightsMain.h xLightsVersion.h effects/FacesEffect.h effects/RenderableEffect.h effects/ShaderEffect.h effects/StateEffect.h models/ModelGroup.h models/RulerObject.h models/SubModel.h models/ViewObject.h outputs/ControllerEthernet.h outputs/ControllerSerial.h outputs/E131Output.h outputs/IPOutput.h outputs/ZCPPOutput.h sequencer/MainSequencer.h TempFileManager.h xlColourData.h ../include/control-pause-blue-icon.xpm ../include/control-play-blue-icon.xpm ../dependencies/libxlsxwriter/include/xlsxwriter.h

ConvertDialog.h: SequenceData.h

EffectAssist.h: xlGridCanvas.h effects/assist/AssistPanel.h

EffectIconPanel.h: sequencer/DragEffectBitmapButton.h

FindDataPanel.h: sequencer/EffectsGrid.h

GenerateCustomModelDialog.h: VideoReader.h

LayoutPanel.h: wxCheckedListCtrl.h ControllerConnectionDialog.h

PixelTestDialog.h: xLightsTimer.h models/ModelManager.h outputs/OutputManager.h SequenceData.h

RenderCommandEvent.h: sequencer/Element.h sequencer/Effect.h sequencer/EffectLayer.h

SeqSettingsDialog.h: xLightsXmlFile.h tmGridCell.h FlickerFreeBitmapButton.h

ShaderDownloadDialog.h: CachedFileDownloader.h

TopEffectsPanel.h: sequencer/DragEffectBitmapButton.h

ValueCurvesPanel.h: DragValueCurveBitmapButton.h

VendorMusicDialog.h: CachedFileDownloader.h VendorMusicHelpers.h

ViewsModelsPanel.h: wxCheckedListCtrl.h SequenceData.h

effects/FacesEffect.h: effects/RenderableEffect.h

effects/ShaderEffect.h: effects/RenderableEffect.h UtilFunctions.h

xLightsImportChannelMapDialog.cpp: xLightsImportChannelMapDialog.h sequencer/SequenceElements.h xLightsMain.h models/Model.h models/ModelGroup.h ColorManager.h UtilFunctions.h ExternalHooks.h MediaImportOptionsDialog.h LayoutUtils.h xlColourData.h

xLightsImportChannelMapDialog.h: Color.h SequencePackage.h

MediaImportOptionsDialog.h: SequencePackage.h

xLightsApp.cpp: xLightsMain.h xLightsApp.h xLightsVersion.h UtilFunctions.h TraceLog.h ExternalHooks.h BitmapCache.h SequencePackage.h

xLightsVersion.cpp: xLightsVersion.h

xlSlider.cpp: xlSlider.h

xlLockButton.cpp: xlLockButton.h BitmapCache.h

xlGridCanvas.cpp: xlGridCanvas.h models/Model.h

xlColourData.cpp: xlColourData.h

xlColorPickerFields.cpp: xlColorPickerFields.h

xlColorPicker.cpp: xlColorPicker.h

xlColorCanvas.cpp: xlColorCanvas.h

xLightsXmlFile.cpp: ../include/zstd.h xLightsXmlFile.h xLightsMain.h OptionChooser.h effects/EffectManager.h effects/RenderableEffect.h xLightsVersion.h UtilFunctions.h sequencer/TimeLine.h Vixen3.h ExternalHooks.h

tmGridCell.cpp: tmGridCell.h

utils/ip_utils.cpp: JobPool.h

utils/CurlManager.cpp: xLightsVersion.h

support/VectorMath.cpp: support/VectorMath.h

support/GridCellChoiceRenderer.cpp: support/GridCellChoiceRenderer.h

support/FastComboEditor.cpp: support/FastComboEditor.h support/EzGrid.h

support/EzGrid.cpp: support/EzGrid.h

preferences/ViewSettingsPanel.cpp: xLightsMain.h

sequencer/EffectDropTarget.cpp: sequencer/EffectDropTarget.h sequencer/EffectsGrid.h effects/PicturesEffect.h effects/VideoEffect.h effects/GlediatorEffect.h effects/ShaderEffect.h

effects/PicturesEffect.h: effects/RenderableEffect.h

effects/GlediatorEffect.h: effects/RenderableEffect.h

sequencer/Effect.cpp: sequencer/Effect.h sequencer/EffectLayer.h sequencer/Element.h sequencer/SequenceElements.h effects/EffectManager.h ColorCurve.h UtilFunctions.h ValueCurve.h UtilClasses.h RenderCache.h models/Model.h xLightsMain.h xLightsApp.h effects/RenderableEffect.h ExternalHooks.h

sequencer/DragEffectBitmapButton.cpp: sequencer/DragEffectBitmapButton.h BitmapCache.h xLightsMain.h effects/RenderableEffect.h RenderCommandEvent.h UtilFunctions.h sequencer/MainSequencer.h

preferences/xLightsPreferences.cpp: xLightsMain.h ../include/grid_icon.xpm ../include/settings_panel_icon.xpm

sequencer/EffectLayer.cpp: sequencer/EffectLayer.h sequencer/EffectsGrid.h sequencer/Effect.h sequencer/RowHeading.h models/Model.h effects/EffectManager.h effects/RenderableEffect.h sequencer/Element.h xLightsMain.h xLightsApp.h effects/DMXEffect.h

effects/DMXEffect.h: effects/RenderableEffect.h UtilFunctions.h

preferences/SequenceFileSettingsPanel.cpp: xLightsMain.h

preferences/RandomEffectsSettingsPanel.cpp: effects/RenderableEffect.h xLightsMain.h

preferences/OutputSettingsPanel.cpp: xLightsMain.h UtilFunctions.h

preferences/OtherSettingsPanel.cpp: xLightsMain.h

sequencer/tabSequencer.cpp: xLightsMain.h sequencer/SequenceElements.h TopEffectsPanel.h EffectIconPanel.h ValueCurvesPanel.h ColoursPanel.h sequencer/Element.h sequencer/Effect.h BufferPanel.h SeqSettingsDialog.h ViewsModelsPanel.h effects/RenderableEffect.h xlCustomControl.h NoteImportDialog.h MusicXML.h SeqElementMismatchDialog.h SequenceVideoPanel.h RenderCommandEvent.h xLightsVersion.h HousePreviewPanel.h UtilFunctions.h JukeboxPanel.h FindDataPanel.h EffectsPanel.h EffectAssist.h ColorPanel.h TimingPanel.h ModelPreview.h sequencer/MainSequencer.h PerspectivesPanel.h SelectPanel.h SearchPanel.h LayoutGroup.h ViewpointMgr.h LayoutPanel.h TraceLog.h effects/EffectPanelUtils.h ExternalHooks.h models/ModelGroup.h

BufferPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

sequencer/Waveform.cpp: xLightsTimer.h sequencer/Waveform.h sequencer/TimeLine.h RenderCommandEvent.h ColorManager.h xLightsApp.h xLightsMain.h sequencer/MainSequencer.h NoteRangeDialog.h

sequencer/UndoManager.cpp: sequencer/UndoManager.h sequencer/Element.h sequencer/SequenceElements.h

sequencer/TimeLine.cpp: sequencer/TimeLine.h sequencer/Waveform.h xLightsMain.h

sequencer/SequenceElements.cpp: sequencer/SequenceElements.h sequencer/TimeLine.h xLightsMain.h LyricsDialog.h xLightsXmlFile.h effects/RenderableEffect.h models/SubModel.h models/ModelGroup.h UtilFunctions.h SequenceViewManager.h JukeboxPanel.h TraceLog.h

sequencer/RowHeading.cpp: sequencer/RowHeading.h xLightsVersion.h BitmapCache.h models/ModelGroup.h SelectTimingsDialog.h models/SubModel.h sequencer/MainSequencer.h sequencer/EffectsGrid.h ColorManager.h sequencer/SequenceElements.h xLightsMain.h NewTimingDialog.h VAMPPluginDialog.h UtilFunctions.h MetronomeLabelDialog.h

VAMPPluginDialog.h: xLightsXmlFile.h AudioManager.h

sequencer/MainSequencer.cpp: sequencer/MainSequencer.h sequencer/SequenceElements.h xLightsMain.h sequencer/TimeLine.h UtilFunctions.h xLightsVersion.h EffectsPanel.h ExternalHooks.h effects/RenderableEffect.h

sequencer/Element.cpp: sequencer/Element.h models/Model.h UtilFunctions.h sequencer/SequenceElements.h xLightsMain.h

sequencer/EffectsGrid.cpp: ColorManager.h sequencer/Effect.h sequencer/EffectDropTarget.h sequencer/EffectLayer.h EffectTimingDialog.h sequencer/EffectsGrid.h sequencer/MainSequencer.h PixelBuffer.h sequencer/RowHeading.h sequencer/SequenceElements.h sequencer/TimeLine.h AutoLabelDialog.h BitmapCache.h DuplicateDialog.h FindDataPanel.h RenderCommandEvent.h UtilFunctions.h VideoReader.h effects/RenderableEffect.h xLightsMain.h xLightsXmlFile.h effects/GlediatorEffect.h effects/PicturesEffect.h effects/ShaderEffect.h effects/VideoEffect.h models/Model.h

wxModelGridCellRenderer.cpp: wxModelGridCellRenderer.h

wxCheckedListCtrl.cpp: wxCheckedListCtrl.h

effects/SketchEffect.cpp: effects/SketchEffect.h BulkEditControls.h RenderBuffer.h effects/SketchEffectDrawing.h effects/SketchPanel.h UtilFunctions.h xLightsMain.h effects/assist/AssistPanel.h effects/assist/SketchAssistPanel.h ExternalHooks.h ../include/sketch-16.xpm ../include/sketch-24.xpm ../include/sketch-32.xpm ../include/sketch-48.xpm ../include/sketch-64.xpm

effects/SketchEffect.h: effects/RenderableEffect.h

NodeSelectGrid.cpp: NodeSelectGrid.h models/Model.h models/CustomModel.h UtilFunctions.h ExternalHooks.h outputs/OutputManager.h

NodeSelectGrid.h: wxModelGridCellRenderer.h UtilClasses.h

NewTimingDialog.cpp: NewTimingDialog.h

MusicXML.cpp: MusicXML.h ExternalHooks.h

MultiControllerUploadDialog.cpp: MultiControllerUploadDialog.h xLightsMain.h outputs/ControllerEthernet.h

Mouse3DManager.cpp: Mouse3DManager.h

ModelStateDialog.cpp: ModelStateDialog.h xLightsXmlFile.h NodesGridCellEditor.h ModelPreview.h DimmingCurve.h SevenSegmentDialog.h NodeSelectGrid.h models/Model.h xLightsApp.h UtilFunctions.h xLightsMain.h support/VectorMath.h models/CustomModel.h xlColourData.h VendorModelDialog.h

ModelRemap.cpp: ModelRemap.h

ModelPreview.cpp: ModelPreview.h models/Model.h models/ViewObject.h PreviewPane.h ColorManager.h LayoutGroup.h xLightsMain.h models/ModelGroup.h ExternalHooks.h

ModelGroupPanel.cpp: ModelGroupPanel.h models/ModelManager.h models/ModelGroup.h LayoutPanel.h OutputModelManager.h xLightsMain.h UtilFunctions.h EditAliasesDialog.h

PerspectivesPanel.cpp: PerspectivesPanel.h

PathGenerationDialog.cpp: PathGenerationDialog.h ValueCurve.h ExternalHooks.h

Parallel.cpp: Parallel.h JobPool.h

PaletteMgmtDialog.cpp: PaletteMgmtDialog.h UtilFunctions.h

PaletteMgmtDialog.h: EffectsPanel.h

OutputModelManager.cpp: models/BaseObject.h outputs/Controller.h xLightsMain.h OutputModelManager.h

ModelFaceDialog.cpp: ../include/AI.xpm ../include/E.xpm ../include/ETC.xpm ../include/FV.xpm ../include/L.xpm ../include/MBP.xpm ../include/O.xpm ../include/REST.xpm ../include/U.xpm ../include/WQ.xpm ModelFaceDialog.h xLightsXmlFile.h NodesGridCellEditor.h ModelPreview.h DimmingCurve.h UtilFunctions.h ExternalHooks.h MatrixFaceDownloadDialog.h xLightsMain.h NodeSelectGrid.h models/Model.h xLightsApp.h support/VectorMath.h models/CustomModel.h outputs/OutputManager.h xlColourData.h

MatrixFaceDownloadDialog.h: CachedFileDownloader.h

OptionChooser.cpp: OptionChooser.h

OpenGLShaders.cpp: UtilFunctions.h OpenGLShaders.h TraceLog.h

NoteRangeDialog.cpp: NoteRangeDialog.h AudioManager.h

NoteImportDialog.cpp: NoteImportDialog.h sequencer/SequenceElements.h MusicXML.h UtilFunctions.h ExternalHooks.h

NodesGridCellEditor.cpp: NodesGridCellEditor.h

LayoutGroup.cpp: LayoutGroup.h xLightsMain.h models/Model.h PreviewPane.h ModelPreview.h

LorConvertDialog.cpp: LorConvertDialog.h

LinkJukeboxButtonDialog.cpp: LinkJukeboxButtonDialog.h sequencer/MainSequencer.h JukeboxPanel.h

LayoutUtils.cpp: LayoutUtils.h UtilFunctions.h BitmapCache.h

LayoutPanel.cpp: LayoutPanel.h ModelPreview.h xLightsMain.h ChannelLayoutDialog.h ControllerConnectionDialog.h ModelGroupPanel.h EditSubmodelAliasesDialog.h ViewObjectPanel.h LayoutGroup.h models/SubModel.h models/PolyLineModel.h models/ModelGroup.h models/ViewObject.h models/RulerObject.h models/CustomModel.h models/XmlSerializer.h WiringDialog.h ModelDimmingCurveDialog.h UtilFunctions.h ExternalHooks.h ColorManager.h support/VectorMath.h KeyBindings.h sequencer/MainSequencer.h ImportPreviewsModelsDialog.h ViewsModelsPanel.h outputs/OutputManager.h outputs/Output.h LORPreview.h ModelFaceDialog.h ModelStateDialog.h CustomModelDialog.h SubModelsDialog.h xlColourData.h LayoutUtils.h

ImportPreviewsModelsDialog.h: models/ModelManager.h

LORPreview.h: Color.h

LyricUserDictDialog.cpp: LyricUserDictDialog.h PhonemeDictionary.h UtilFunctions.h ExternalHooks.h

LayerSelectDialog.cpp: LayerSelectDialog.h

LORPreview.cpp: LORPreview.h ModelPreview.h UtilFunctions.h xLightsMain.h models/Model.h models/ModelManager.h ExternalHooks.h

LOREdit.cpp: LOREdit.h sequencer/TimeLine.h UtilFunctions.h models/Model.h effects/SpiralsEffect.h effects/ButterflyEffect.h effects/BarsEffect.h effects/CurtainEffect.h effects/FireEffect.h effects/GarlandsEffect.h effects/MarqueeEffect.h effects/MeteorsEffect.h effects/PinwheelEffect.h effects/SnowflakesEffect.h effects/RippleEffect.h

LOREdit.h: Color.h

effects/ButterflyEffect.h: effects/RenderableEffect.h

effects/BarsEffect.h: effects/RenderableEffect.h

effects/CurtainEffect.h: effects/RenderableEffect.h

effects/FireEffect.h: effects/RenderableEffect.h

effects/GarlandsEffect.h: effects/RenderableEffect.h

effects/MarqueeEffect.h: effects/RenderableEffect.h

effects/MeteorsEffect.h: effects/RenderableEffect.h

effects/PinwheelEffect.h: effects/RenderableEffect.h

effects/RippleEffect.h: effects/RenderableEffect.h Color.h

LMSImportChannelMapDialog.cpp: LMSImportChannelMapDialog.h sequencer/SequenceElements.h xLightsMain.h models/Model.h xlColourData.h

LMSImportChannelMapDialog.h: Color.h

MatrixFaceDownloadDialog.cpp: MatrixFaceDownloadDialog.h CachedFileDownloader.h UtilFunctions.h ExternalHooks.h

ModelDimmingCurveDialog.cpp: ModelDimmingCurveDialog.h xLightsXmlFile.h UtilFunctions.h ExternalHooks.h

ModelChainDialog.cpp: ModelChainDialog.h UtilFunctions.h models/ModelManager.h models/Model.h

MetronomeLabelDialog.cpp: MetronomeLabelDialog.h

MediaImportOptionsDialog.cpp: MediaImportOptionsDialog.h UtilFunctions.h

LyricsDialog.cpp: LyricsDialog.h

SevenSegmentDialog.cpp: SevenSegmentDialog.h ../include/sevensegment.xpm

SequenceViewManager.cpp: SequenceViewManager.h models/ModelManager.h models/Model.h UtilFunctions.h

SequenceVideoPreview.cpp: SequenceVideoPreview.h

SequenceVideoPanel.cpp: SequenceVideoPanel.h VideoReader.h SequenceVideoPreview.h

SequencePackage.cpp: SequencePackage.h xLightsMain.h ExternalHooks.h

SequenceData.cpp: SequenceData.h UtilFunctions.h

SeqSettingsDialog.cpp: SeqSettingsDialog.h NewTimingDialog.h xLightsXmlFile.h DataLayer.h FileConverter.h LorConvertDialog.h ConvertLogDialog.h VAMPPluginDialog.h CustomTimingDialog.h VendorMusicDialog.h xLightsMain.h MetronomeLabelDialog.h UtilFunctions.h ExternalHooks.h ConvertDialog.h

FileConverter.h: DataLayer.h SequenceData.h Color.h

SeqFileUtilities.cpp: BufferPanel.h ConvertLogDialog.h DataLayer.h EffectAssist.h ExternalHooks.h FileConverter.h FontManager.h HousePreviewPanel.h LMSImportChannelMapDialog.h LOREdit.h ModelPreview.h SaveChangesDialog.h SearchPanel.h SelectPanel.h SeqSettingsDialog.h SequenceVideoPanel.h SuperStarImportDialog.h UtilFunctions.h VSAFile.h ViewsModelsPanel.h VsaImportDialog.h xLightsImportChannelMapDialog.h xLightsMain.h xLightsVersion.h models/ModelGroup.h sequencer/MainSequencer.h SequencePackage.h Vixen3.h effects/BarsEffect.h effects/ButterflyEffect.h effects/CurtainEffect.h effects/FireEffect.h effects/GarlandsEffect.h effects/MeteorsEffect.h effects/PinwheelEffect.h effects/SnowflakesEffect.h effects/SpiralsEffect.h xLightsApp.h

SeqExportDialog.cpp: SeqExportDialog.h xLightsMain.h

StrandNodeNamesDialog.cpp: StrandNodeNamesDialog.h models/Model.h

SuperStarImportDialog.cpp: SuperStarImportDialog.h

SubModelsDialog.cpp: SubModelsDialog.h models/Model.h models/CustomModel.h SubBufferPanel.h SubModelGenerateDialog.h EditSubmodelAliasesDialog.h NodeSelectGrid.h UtilFunctions.h xLightsApp.h models/ModelManager.h xLightsMain.h ModelPreview.h DimmingCurve.h AlignmentDialog.h support/VectorMath.h xLightsVersion.h models/SubModel.h CheckboxSelectDialog.h VendorModelDialog.h

SubBufferPanel.h: xlCustomControl.h

SubModelGenerateDialog.cpp: SubModelGenerateDialog.h

SubBufferPanel.cpp: SubBufferPanel.h BufferSizeDialog.h xLightsApp.h xLightsMain.h sequencer/MainSequencer.h UtilFunctions.h

BufferSizeDialog.h: ValueCurveButton.h xlLockButton.h

SeqElementMismatchDialog.cpp: SeqElementMismatchDialog.h

StartChannelDialog.cpp: StartChannelDialog.h outputs/OutputManager.h outputs/Controller.h models/ModelManager.h models/Model.h

SplashDialog.cpp: SplashDialog.h xLightsVersion.h UtilFunctions.h

SpecialOptions.cpp: SpecialOptions.h ExternalHooks.h UtilFunctions.h

ShaderDownloadDialog.cpp: xLightsMain.h ShaderDownloadDialog.h CachedFileDownloader.h UtilFunctions.h ExternalHooks.h

PreviewPane.cpp: PreviewPane.h LayoutGroup.h

RenderCache.cpp: RenderCache.h sequencer/SequenceElements.h RenderBuffer.h models/Model.h xLightsVersion.h UtilFunctions.h TraceLog.h ExternalHooks.h

RenderBuffer.cpp: RenderBuffer.h sequencer/Effect.h xLightsMain.h xLightsXmlFile.h UtilFunctions.h GPURenderUtils.h BufferPanel.h Parallel.h

Render.cpp: xLightsMain.h xLightsXmlFile.h RenderCommandEvent.h effects/RenderableEffect.h RenderProgressDialog.h SeqExportDialog.h RenderUtils.h models/ModelGroup.h sequencer/MainSequencer.h UtilFunctions.h PixelBuffer.h Parallel.h ExternalHooks.h GPURenderUtils.h

RenameTextDialog.cpp: RenameTextDialog.h

RemapDMXChannelsDialog.cpp: RemapDMXChannelsDialog.h

Pixels.cpp: Pixels.h

PixelTestDialog.cpp: PixelTestDialog.h models/Model.h models/ModelGroup.h models/SubModel.h xLightsXmlFile.h outputs/TestPreset.h outputs/Output.h UtilFunctions.h outputs/ControllerSerial.h xLightsMain.h ModelPreview.h support/VectorMath.h

PixelBuffer.cpp: AudioManager.h BufferPanel.h DimmingCurve.h PixelBuffer.h UtilClasses.h xLightsMain.h models/ModelGroup.h models/ModelManager.h models/SingleLineModel.h DissolveTransitionPattern.h GPURenderUtils.h Parallel.h UtilFunctions.h

PhonemeDictionary.cpp: PhonemeDictionary.h UtilFunctions.h ExternalHooks.h

SaveChangesDialog.cpp: SaveChangesDialog.h

SelectTimingsDialog.cpp: SelectTimingsDialog.h

SelectPanel.cpp: SelectPanel.h sequencer/SequenceElements.h sequencer/EffectsGrid.h sequencer/MainSequencer.h sequencer/Effect.h sequencer/Element.h UtilFunctions.h Color.h

SearchPanel.cpp: SearchPanel.h sequencer/SequenceElements.h sequencer/EffectsGrid.h sequencer/MainSequencer.h sequencer/Effect.h sequencer/Element.h UtilFunctions.h

ScriptsDialog.cpp: ScriptsDialog.h xLightsMain.h ExternalHooks.h

RestoreBackupDialog.cpp: RestoreBackupDialog.h UtilFunctions.h ../include/globals.h ExternalHooks.h

ResizeImageDialog.cpp: ResizeImageDialog.h

RenderProgressDialog.cpp: RenderProgressDialog.h

CheckboxSelectDialog.cpp: CheckboxSelectDialog.h

CharMapDialog.cpp: CharMapDialog.h

ChannelLayoutDialog.cpp: ChannelLayoutDialog.h UtilFunctions.h

CachedFileDownloader.cpp: CachedFileDownloader.h ExternalHooks.h

BulkEditSliderDialog.cpp: BulkEditSliderDialog.h ValueCurveDialog.h UtilFunctions.h

BulkEditSliderDialog.h: BulkEditControls.h ValueCurveButton.h

ValueCurveDialog.h: xlCustomControl.h ValueCurve.h

BulkEditFontPickerDialog.cpp: BulkEditFontPickerDialog.h

BulkEditControls.cpp: BulkEditControls.h xLightsMain.h xLightsApp.h EffectsPanel.h sequencer/MainSequencer.h BulkEditSliderDialog.h BulkEditFontPickerDialog.h BulkEditColourPickerDialog.h BulkEditComboDialog.h UtilFunctions.h ExternalHooks.h

BulkEditComboDialog.cpp: BulkEditComboDialog.h UtilFunctions.h

BulkEditColourPickerDialog.cpp: BulkEditColourPickerDialog.h

ConvertDialog.cpp: ConvertDialog.h FileConverter.h xLightsMain.h outputs/Output.h UtilFunctions.h outputs/OutputManager.h outputs/Controller.h ExternalHooks.h

ControllerModelDialog.cpp: ControllerModelDialog.h Pixels.h UtilFunctions.h xLightsMain.h models/Model.h models/ModelManager.h outputs/Controller.h outputs/ControllerEthernet.h outputs/Output.h ../dependencies/libxlsxwriter/include/xlsxwriter.h

ControllerConnectionDialog.cpp: ControllerConnectionDialog.h models/Model.h xLightsApp.h xLightsMain.h Pixels.h

ColoursPanel.cpp: ColoursPanel.h UtilFunctions.h ColorCurve.h xLightsMain.h DragColoursBitmapButton.h ColorPanel.h ExternalHooks.h

ColourReplaceDialog.cpp: ColourReplaceDialog.h Color.h xLightsMain.h

BufferSizeDialog.cpp: BufferSizeDialog.h ValueCurveDialog.h UtilFunctions.h xLightsMain.h BufferPanel.h ExternalHooks.h

ColorPanel.cpp: xLightsMain.h ColorPanel.h ColorCurve.h effects/EffectPanelUtils.h UtilFunctions.h xLightsApp.h ExternalHooks.h sequencer/MainSequencer.h

ColorManager.cpp: ColorManager.h xLightsMain.h

ColorCurveDialog.cpp: ColorCurveDialog.h xLightsMain.h xLightsVersion.h UtilFunctions.h xLightsApp.h ExternalHooks.h sequencer/MainSequencer.h xlColourData.h

ColorCurveDialog.h: xlCustomControl.h ColorCurve.h

ColorCurve.cpp: ColorCurve.h ColorCurveDialog.h UtilFunctions.h ColorPanel.h xlColourData.h

Color.cpp: Color.h

BufferPanel.cpp: BufferPanel.h PixelBuffer.h models/Model.h models/ModelGroup.h effects/EffectPanelUtils.h ValueCurveDialog.h SubBufferPanel.h xLightsMain.h xLightsApp.h

BitmapCache.cpp: BitmapCache.h UtilFunctions.h ../include/padlock_open_14.xpm ../include/padlock_open_28.xpm ../include/padlock_close_14.xpm ../include/padlock_close_28.xpm ../include/fforward10-24.xpm ../include/rewind10-24.xpm ../include/Dice-24.xpm ../include/Dice-32.xpm ../include/Dice-48.xpm ../include/Dice-64.xpm ../include/group-open-24.xpm ../include/group-open-64.xpm ../include/group-closed-24.xpm ../include/group-closed-64.xpm ../include/arch-icon-16.xpm ../include/arch-icon-64.xpm ../include/cane-icon-16.xpm ../include/cane-icon-64.xpm ../include/channelblock-icon-16.xpm ../include/channelblock-icon-64.xpm ../include/circle-icon-16.xpm ../include/circle-icon-64.xpm ../include/cube-icon-16.xpm ../include/cube-icon-64.xpm ../include/custom-icon-16.xpm ../include/custom-icon-64.xpm ../include/dmx-icon-16.xpm ../include/dmx-icon-64.xpm ../include/icicle-icon-16.xpm ../include/icicle-icon-64.xpm ../include/line-icon-16.xpm ../include/line-icon-64.xpm ../include/matrix-icon-16.xpm ../include/matrix-icon-64.xpm ../include/poly-icon-16.xpm ../include/poly-icon-64.xpm ../include/sphere-icon-16.xpm ../include/sphere-icon-64.xpm ../include/spinner-icon-16.xpm ../include/spinner-icon-64.xpm ../include/star-icon-16.xpm ../include/star-icon-64.xpm ../include/submarine-16.xpm ../include/submarine-32.xpm ../include/tree-icon-16.xpm ../include/tree-icon-64.xpm ../include/window-icon-16.xpm ../include/window-icon-64.xpm ../include/wreath-icon-16.xpm ../include/wreath-icon-64.xpm ../include/link-48.xpm ../include/unlink-48.xpm ../include/point_1a-64.xpm ../include/point_1b-64.xpm ../include/point_2a-64.xpm ../include/point_2b-64.xpm ../include/point_1ab-64.xpm ../include/point_2ab-64.xpm ../include/papagayo-16.xpm ../include/papagayo-64.xpm ../include/papagayo_x-16.xpm ../include/papagayo_x-64.xpm ../include/model-16.xpm ../include/model-64.xpm ../include/cc_time.xpm ../include/cc_timelocked.xpm ../include/cc_left.xpm ../include/cc_right.xpm ../include/cc_up.xpm ../include/cc_down.xpm ../include/cc_na.xpm ../include/cc_ccw.xpm ../include/cc_cw.xpm ../include/cc_radialin.xpm ../include/cc_radialout.xpm ../include/save.xpm ../include/delete.xpm ../include/reverse.xpm ../include/left_shift.xpm ../include/right_shift.xpm ../include/valuecurvenotselected.xpm ../include/valuecurveselected.xpm Images_png.h ../include/xLights.xpm ../include/xLights-16.xpm ../include/xLights-32.xpm ../include/xLights-64.xpm ../include/xLights-128.xpm ../include/splashimage.h ../include/link_svgs.h ../include/fpp_icon.h

BatchRenderDialog.cpp: BatchRenderDialog.h ExternalHooks.h UtilFunctions.h ../include/globals.h

AutoLabelDialog.cpp: AutoLabelDialog.h

AudioManager.cpp: AudioManager.h ExternalHooks.h Parallel.h UtilFunctions.h

AlignmentDialog.cpp: AlignmentDialog.h

AboutDialog.cpp: AboutDialog.h

GPURenderUtils.cpp: GPURenderUtils.h

FontManager.cpp: FontManager.h ../include/xLightsFontImages.h

FlickerFreeBitmapButton.cpp: FlickerFreeBitmapButton.h

FindDataPanel.cpp: FindDataPanel.h sequencer/DragEffectBitmapButton.h BitmapCache.h UtilFunctions.h sequencer/SequenceElements.h xLightsMain.h sequencer/MainSequencer.h effects/EffectManager.h

FileConverter.cpp: FSEQFile.h FileConverter.h UtilFunctions.h outputs/OutputManager.h outputs/Controller.h xLightsMain.h ConvertDialog.h ConvertLogDialog.h outputs/Output.h xLightsVersion.h ExternalHooks.h

FSEQFile.cpp: FSEQFile.h ../include/zstd.h

ExportSettings.cpp: ExportSettings.h UtilFunctions.h

ExportModelSelect.cpp: ExportModelSelect.h

EmailDialog.cpp: EmailDialog.h UtilFunctions.h

KeyBindings.cpp: KeyBindings.h xLightsVersion.h UtilFunctions.h ExternalHooks.h

KeyBindingEditDialog.cpp: KeyBindingEditDialog.h KeyBindings.h effects/EffectManager.h effects/RenderableEffect.h xLightsMain.h

JukeboxPanel.cpp: JukeboxPanel.h sequencer/MainSequencer.h xLightsApp.h xLightsMain.h LinkJukeboxButtonDialog.h UtilFunctions.h

JobPool.cpp: JobPool.h ExternalHooks.h TraceLog.h

ImportPreviewsModelsDialog.cpp: ImportPreviewsModelsDialog.h LayoutGroup.h UtilFunctions.h

EffectsPanel.cpp: effects/EffectManager.h effects/RenderableEffect.h EffectsPanel.h RenderCommandEvent.h UtilFunctions.h effects/EffectPanelUtils.h xLightsApp.h xLightsMain.h sequencer/MainSequencer.h

IPEntryDialog.cpp: IPEntryDialog.h

HousePreviewPanel.cpp: HousePreviewPanel.h xLightsMain.h ModelPreview.h xLightsXmlFile.h UtilFunctions.h sequencer/MainSequencer.h

GenerateLyricsDialog.cpp: GenerateLyricsDialog.h ../include/AI.xpm ../include/E.xpm ../include/ETC.xpm ../include/FV.xpm ../include/L.xpm ../include/MBP.xpm ../include/O.xpm ../include/REST.xpm ../include/U.xpm ../include/WQ.xpm NodesGridCellEditor.h

GenerateCustomModelDialog.cpp: GenerateCustomModelDialog.h effects/VideoPanel.h xLightsVersion.h xLightsXmlFile.h outputs/OutputManager.h UtilFunctions.h xLightsMain.h ExternalHooks.h Parallel.h models/CustomModel.h

DataLayer.cpp: DataLayer.h UtilFunctions.h

DragColoursBitmapButton.cpp: DragColoursBitmapButton.h xLightsMain.h UtilFunctions.h

DissolveTransitionPattern.cpp: DissolveTransitionPattern.h

Discovery.cpp: Discovery.h UtilFunctions.h

DimmingCurvePanel.cpp: DimmingCurvePanel.h

DimmingCurve.cpp: DimmingCurve.h ExternalHooks.h

CustomTimingDialog.cpp: CustomTimingDialog.h

CustomModelDialog.cpp: CustomModelDialog.h models/CustomModel.h WiringDialog.h wxModelGridCellRenderer.h UtilClasses.h UtilFunctions.h ExternalHooks.h ModelPreview.h outputs/TwinklyOutput.h Discovery.h outputs/OutputManager.h

CopyFormat1.cpp: CopyFormat1.h sequencer/Effect.h sequencer/EffectLayer.h

ConvertLogDialog.cpp: ConvertLogDialog.h

EffectAssist.cpp: EffectAssist.h effects/EffectManager.h effects/assist/xlGridCanvasEmpty.h xLightsXmlFile.h

EffectTreeDialog.cpp: EffectTreeDialog.h xLightsMain.h xLightsVersion.h UtilFunctions.h ExternalHooks.h

EffectTimingDialog.cpp: EffectTimingDialog.h sequencer/Effect.h sequencer/EffectLayer.h

EffectListDialog.cpp: EffectListDialog.h UtilFunctions.h

EffectIconPanel.cpp: EffectIconPanel.h sequencer/DragEffectBitmapButton.h BitmapCache.h UtilFunctions.h effects/EffectManager.h

TabConvert.cpp: models/ModelManager.h ConvertDialog.h FileConverter.h UtilFunctions.h ExternalHooks.h models/ModelGroup.h models/MatrixModel.h sequencer/SequenceElements.h outputs/OutputManager.h sequencer/EffectLayer.h xLightsMain.h FSEQFile.h CopyFormat1.h VideoExporter.h

EditSubmodelAliasesDialog.cpp: EditSubmodelAliasesDialog.h models/Model.h models/SubModel.h

EditAliasesDialog.cpp: EditAliasesDialog.h models/Model.h

DuplicateDialog.cpp: DuplicateDialog.h

DragValueCurveBitmapButton.cpp: DragValueCurveBitmapButton.h xLightsMain.h UtilFunctions.h

effects/LifeEffect.cpp: effects/LifeEffect.h effects/LifePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/life-16.xpm ../include/life-24.xpm ../include/life-32.xpm ../include/life-48.xpm ../include/life-64.xpm UtilFunctions.h

effects/LifeEffect.h: effects/RenderableEffect.h

effects/LifePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/LinesEffect.cpp: effects/LinesEffect.h effects/LinesPanel.h AudioManager.h sequencer/SequenceElements.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h UtilFunctions.h ../include/lines-16.xpm ../include/lines-24.xpm ../include/lines-32.xpm ../include/lines-48.xpm ../include/lines-64.xpm

effects/LinesEffect.h: effects/RenderableEffect.h RenderBuffer.h

effects/LinesPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/LightningPanel.cpp: effects/LightningPanel.h effects/EffectPanelUtils.h effects/LightningEffect.h

effects/LightningPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/LightningEffect.h: effects/RenderableEffect.h

effects/LightningEffect.cpp: effects/LightningEffect.h effects/LightningPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/lightning-16.xpm ../include/lightning-24.xpm ../include/lightning-32.xpm ../include/lightning-48.xpm ../include/lightning-64.xpm

effects/LifePanel.cpp: effects/LifePanel.h effects/EffectPanelUtils.h

effects/LinesPanel.cpp: effects/LinesPanel.h effects/EffectPanelUtils.h effects/LinesEffect.h UtilFunctions.h

effects/KaleidoscopePanel.cpp: effects/KaleidoscopePanel.h effects/EffectPanelUtils.h effects/KaleidoscopeEffect.h

effects/KaleidoscopePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/KaleidoscopeEffect.h: effects/RenderableEffect.h

effects/KaleidoscopeEffect.cpp: ../include/kaleidoscope-64.xpm ../include/kaleidoscope-48.xpm ../include/kaleidoscope-32.xpm ../include/kaleidoscope-24.xpm ../include/kaleidoscope-16.xpm effects/KaleidoscopeEffect.h effects/KaleidoscopePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h xLightsMain.h xLightsApp.h TimingPanel.h UtilFunctions.h Parallel.h

effects/GuitarPanel.cpp: effects/GuitarPanel.h effects/EffectPanelUtils.h sequencer/Effect.h effects/GuitarEffect.h UtilFunctions.h

effects/GuitarPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/GuitarEffect.h: effects/RenderableEffect.h

effects/GuitarEffect.cpp: ../include/guitar-16.xpm ../include/guitar-64.xpm effects/GuitarEffect.h effects/GuitarPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h xLightsXmlFile.h UtilFunctions.h models/Model.h

effects/MovingHeadEffect.cpp: ../include/moving-head-16.xpm ../include/moving-head-24.xpm ../include/moving-head-32.xpm ../include/moving-head-48.xpm ../include/moving-head-64.xpm effects/MovingHeadEffect.h effects/MovingHeadPanel.h sequencer/Effect.h sequencer/Element.h sequencer/SequenceElements.h RenderBuffer.h UtilClasses.h UtilFunctions.h models/ModelGroup.h

effects/MovingHeadEffect.h: effects/RenderableEffect.h

effects/MovingHeadPanel.h: BulkEditControls.h effects/EffectPanelUtils.h effects/assist/SketchCanvasPanel.h effects/SketchEffectDrawing.h

effects/MorphPanel.cpp: effects/MorphPanel.h effects/EffectPanelUtils.h effects/MorphEffect.h xLightsApp.h UtilFunctions.h xLightsMain.h sequencer/MainSequencer.h

effects/MorphPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/MorphEffect.h: effects/RenderableEffect.h UtilFunctions.h

effects/MorphEffect.cpp: effects/MorphEffect.h effects/MorphPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h effects/assist/AssistPanel.h effects/assist/xlGridCanvasMorph.h models/Model.h ../include/morph-16.xpm ../include/morph-64.xpm UtilFunctions.h

effects/MeteorsPanel.cpp: effects/MeteorsPanel.h effects/EffectPanelUtils.h effects/MeteorsEffect.h

effects/MeteorsPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/MeteorsEffect.cpp: effects/MeteorsEffect.h effects/MeteorsPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h models/Model.h UtilFunctions.h ../include/meteors-16.xpm ../include/meteors-24.xpm ../include/meteors-32.xpm ../include/meteors-48.xpm ../include/meteors-64.xpm Parallel.h

effects/MarqueePanel.cpp: effects/MarqueePanel.h effects/EffectPanelUtils.h effects/MarqueeEffect.h

effects/MarqueePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/MarqueeEffect.cpp: effects/MarqueeEffect.h effects/MarqueePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/marquee-16.xpm ../include/marquee-24.xpm ../include/marquee-32.xpm ../include/marquee-48.xpm ../include/marquee-64.xpm

effects/LiquidPanel.cpp: effects/LiquidPanel.h effects/EffectPanelUtils.h effects/LiquidEffect.h

effects/LiquidPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/LiquidEffect.h: effects/RenderableEffect.h RenderBuffer.h UtilFunctions.h

effects/LiquidEffect.cpp: effects/LiquidEffect.h effects/LiquidPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h UtilFunctions.h models/Model.h Parallel.h ../include/liquid-16.xpm ../include/liquid-24.xpm ../include/liquid-32.xpm ../include/liquid-48.xpm ../include/liquid-64.xpm

effects/FanEffect.cpp: effects/FanEffect.h effects/FanPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h UtilFunctions.h ../include/fan-16.xpm ../include/fan-24.xpm ../include/fan-32.xpm ../include/fan-48.xpm ../include/fan-64.xpm

effects/FanEffect.h: effects/RenderableEffect.h

effects/FanPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/FireEffect.cpp: effects/FireEffect.h effects/FirePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h models/Model.h UtilFunctions.h ../include/fire-16.xpm ../include/fire-24.xpm ../include/fire-32.xpm ../include/fire-48.xpm ../include/fire-64.xpm

effects/FirePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/FillPanel.cpp: effects/FillPanel.h effects/FillEffect.h effects/EffectPanelUtils.h

effects/FillPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/FillEffect.h: effects/RenderableEffect.h

effects/FillEffect.cpp: effects/FillEffect.h effects/FillPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h UtilFunctions.h ../include/fill-16.xpm ../include/fill-64.xpm

effects/FanPanel.cpp: effects/FanPanel.h effects/EffectPanelUtils.h effects/FanEffect.h

effects/FirePanel.cpp: effects/FirePanel.h effects/EffectPanelUtils.h effects/FireEffect.h

effects/FacesPanel.cpp: effects/FacesPanel.h effects/EffectPanelUtils.h

effects/FacesPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/FacesEffect.cpp: effects/FacesEffect.h effects/FacesPanel.h models/Model.h models/SubModel.h models/ModelGroup.h sequencer/SequenceElements.h sequencer/Effect.h RenderBuffer.h UtilClasses.h UtilFunctions.h xLightsMain.h effects/PicturesEffect.h ExternalHooks.h ../include/corofaces.xpm

effects/FX.cpp: UtilFunctions.h RenderBuffer.h effects/FX.h

effects/FX.h: Color.h

effects/EffectPanelUtils.cpp: effects/EffectPanelUtils.h BitmapCache.h ValueCurveButton.h ValueCurveDialog.h xLightsApp.h xLightsMain.h UtilFunctions.h

effects/GlediatorPanel.cpp: effects/GlediatorPanel.h effects/EffectPanelUtils.h

effects/GlediatorPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/GlediatorEffect.cpp: effects/GlediatorEffect.h effects/GlediatorPanel.h sequencer/SequenceElements.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h xLightsXmlFile.h xLightsMain.h UtilFunctions.h ExternalHooks.h ../include/glediator-16.xpm ../include/glediator-64.xpm

effects/GarlandsPanel.cpp: effects/GarlandsPanel.h effects/EffectPanelUtils.h effects/GarlandsEffect.h

effects/GarlandsPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/GarlandsEffect.cpp: effects/GarlandsEffect.h effects/GarlandsPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/garlands-16.xpm ../include/garlands-24.xpm ../include/garlands-32.xpm ../include/garlands-48.xpm ../include/garlands-64.xpm

effects/GalaxyPanel.cpp: effects/GalaxyPanel.h effects/EffectPanelUtils.h effects/GalaxyEffect.h

effects/GalaxyPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/GalaxyEffect.h: effects/RenderableEffect.h

effects/GalaxyEffect.cpp: effects/GalaxyEffect.h effects/GalaxyPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h UtilFunctions.h Parallel.h ../include/galaxy-16.xpm ../include/galaxy-24.xpm ../include/galaxy-32.xpm ../include/galaxy-48.xpm ../include/galaxy-64.xpm

effects/GIFImage.cpp: effects/GIFImage.h

effects/FireworksPanel.cpp: effects/FireworksPanel.h effects/EffectPanelUtils.h sequencer/Effect.h effects/FireworksEffect.h ValueCurveButton.h

effects/FireworksPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/FireworksEffect.h: effects/RenderableEffect.h

effects/FireworksEffect.cpp: effects/FireworksEffect.h effects/FireworksPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h models/Model.h UtilFunctions.h sequencer/SequenceElements.h ../include/fireworks-16.xpm ../include/fireworks-24.xpm ../include/fireworks-32.xpm ../include/fireworks-48.xpm ../include/fireworks-64.xpm

effects/ShaderEffect.cpp: ../include/shader_64.xpm ../include/shader_48.xpm ../include/shader_32.xpm ../include/shader_24.xpm ../include/shader_16.xpm effects/ShaderEffect.h effects/ShaderPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h xLightsMain.h xLightsApp.h TimingPanel.h OpenGLShaders.h UtilFunctions.h ExternalHooks.h

effects/ShaderPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ServoPanel.cpp: effects/ServoPanel.h effects/ServoEffect.h effects/EffectPanelUtils.h xLightsMain.h

effects/ServoPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ServoEffect.h: effects/RenderableEffect.h

effects/ServoEffect.cpp: ../include/servo-16.xpm ../include/servo-24.xpm ../include/servo-32.xpm ../include/servo-48.xpm ../include/servo-64.xpm effects/ServoEffect.h effects/ServoPanel.h RenderBuffer.h UtilClasses.h UtilFunctions.h models/ModelGroup.h sequencer/Effect.h sequencer/Element.h sequencer/SequenceElements.h

effects/RipplePanel.cpp: effects/RipplePanel.h effects/EffectPanelUtils.h effects/RippleEffect.h

effects/RipplePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/RippleEffect.cpp: effects/RippleEffect.h effects/RipplePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ExternalHooks.h models/Model.h xLightsMain.h ../include/ripple-16.xpm ../include/ripple-24.xpm ../include/ripple-32.xpm ../include/ripple-48.xpm ../include/ripple-64.xpm

effects/RenderableEffect.cpp: effects/RenderableEffect.h sequencer/Effect.h effects/EffectManager.h effects/assist/xlGridCanvasEmpty.h UtilFunctions.h ExternalHooks.h sequencer/SequenceElements.h ValueCurveButton.h PixelBuffer.h effects/FanEffect.h effects/SpiralsEffect.h effects/PinwheelEffect.h effects/EffectPanelUtils.h ColorPanel.h BufferPanel.h TimingPanel.h BitmapCache.h xLightsApp.h xLightsMain.h models/SubModel.h

effects/PlasmaPanel.cpp: effects/PlasmaPanel.h effects/EffectPanelUtils.h effects/PlasmaEffect.h

effects/PlasmaPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/PlasmaEffect.h: effects/RenderableEffect.h

effects/PlasmaEffect.cpp: effects/PlasmaEffect.h effects/PlasmaPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/plasma-16.xpm ../include/plasma-24.xpm ../include/plasma-32.xpm ../include/plasma-48.xpm ../include/plasma-64.xpm Parallel.h

effects/PinwheelPanel.cpp: effects/PinwheelPanel.h effects/EffectPanelUtils.h effects/PinwheelEffect.h

effects/PinwheelPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ShimmerPanel.cpp: effects/ShimmerPanel.h effects/EffectPanelUtils.h effects/ShimmerEffect.h

effects/ShimmerPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ShimmerEffect.h: effects/RenderableEffect.h

effects/SingleStrandPanel.cpp: effects/SingleStrandPanel.h effects/EffectPanelUtils.h effects/SingleStrandEffect.h effects/FX.h

effects/SingleStrandPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/SingleStrandEffect.h: effects/RenderableEffect.h

effects/SingleStrandEffect.cpp: effects/SingleStrandEffect.h effects/SingleStrandPanel.h sequencer/Effect.h sequencer/EffectLayer.h sequencer/Element.h RenderBuffer.h UtilClasses.h effects/FX.h ../include/singleStrand-16.xpm ../include/singleStrand-64.xpm

effects/ShockwavePanel.cpp: effects/ShockwavePanel.h effects/EffectPanelUtils.h effects/ShockwaveEffect.h

effects/ShockwavePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ShockwaveEffect.h: effects/RenderableEffect.h

effects/ShockwaveEffect.cpp: effects/ShockwaveEffect.h effects/ShockwavePanel.h RenderBuffer.h UtilClasses.h UtilFunctions.h sequencer/Effect.h ../include/shockwave-16.xpm ../include/shockwave-24.xpm ../include/shockwave-32.xpm ../include/shockwave-48.xpm ../include/shockwave-64.xpm

effects/PinwheelEffect.cpp: effects/PinwheelEffect.h effects/PinwheelPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/pinwheel-16.xpm ../include/pinwheel-24.xpm ../include/pinwheel-32.xpm ../include/pinwheel-48.xpm ../include/pinwheel-64.xpm Parallel.h

effects/ShimmerEffect.cpp: effects/ShimmerEffect.h effects/ShimmerPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/shimmer.xpm

effects/ShapePanel.cpp: effects/ShapePanel.h effects/EffectPanelUtils.h effects/ShapeEffect.h RenderBuffer.h CharMapDialog.h

effects/ShapePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ShapeEffect.h: effects/RenderableEffect.h Color.h

effects/ShapeEffect.cpp: effects/ShapeEffect.h effects/ShapePanel.h effects/TextEffect.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h sequencer/SequenceElements.h UtilFunctions.h AudioManager.h ExternalHooks.h xLightsMain.h ../include/shape-16.xpm ../include/shape-24.xpm ../include/shape-32.xpm ../include/shape-48.xpm ../include/shape-64.xpm

effects/ShaderPanel.cpp: effects/ShaderPanel.h effects/ShaderEffect.h BulkEditControls.h effects/EffectPanelUtils.h ShaderDownloadDialog.h ExternalHooks.h xLightsMain.h xLightsApp.h TimingPanel.h

effects/MusicEffect.cpp: effects/MusicPanel.h effects/MusicEffect.h AudioManager.h sequencer/SequenceElements.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h UtilFunctions.h ../include/music-16.xpm ../include/music-24.xpm ../include/music-32.xpm ../include/music-48.xpm ../include/music-64.xpm

effects/MusicPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/MusicEffect.h: effects/RenderableEffect.h RenderBuffer.h

effects/MovingHeadPanels/MovingHeadDimmerPanel.cpp: sequencer/Element.h

effects/MovingHeadPanels/MHRgbPickerPanel.cpp: UtilFunctions.h

effects/MovingHeadPanels/MHPresetBitmapButton.cpp: Color.h UtilFunctions.h

effects/MovingHeadPanels/MHPathPresetBitmapButton.cpp: effects/SketchEffectDrawing.h Color.h

effects/MovingHeadPanels/MHDimmerPresetBitmapButton.cpp: effects/SketchEffectDrawing.h Color.h

effects/MovingHeadPanels/MHColorWheelPanel.cpp: UtilFunctions.h

effects/MovingHeadPanel.cpp: effects/MovingHeadPanel.h effects/MovingHeadEffect.h models/Model.h xLightsMain.h xLightsVersion.h sequencer/MainSequencer.h sequencer/Effect.h sequencer/Element.h models/ModelGroup.h xLightsApp.h ExternalHooks.h

effects/OnPanel.cpp: effects/OnPanel.h effects/OnEffect.h effects/EffectPanelUtils.h

effects/OnPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/OnEffect.h: effects/RenderableEffect.h

effects/PicturesPanel.cpp: effects/PicturesPanel.h effects/PicturesEffect.h effects/EffectPanelUtils.h effects/GIFImage.h ExternalHooks.h

effects/PicturesPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/PicturesEffect.cpp: ../include/pictures-16.xpm ../include/pictures-24.xpm ../include/pictures-32.xpm ../include/pictures-48.xpm ../include/pictures-64.xpm effects/PicturesEffect.h effects/PicturesPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h effects/assist/xlGridCanvasPictures.h effects/assist/PicturesAssistPanel.h xLightsXmlFile.h models/Model.h UtilFunctions.h ExternalHooks.h effects/GIFImage.h xLightsMain.h

effects/PianoPanel.cpp: effects/PianoPanel.h effects/EffectPanelUtils.h sequencer/Effect.h effects/PianoEffect.h UtilFunctions.h

effects/PianoPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/PianoEffect.h: effects/RenderableEffect.h

effects/PianoEffect.cpp: ../include/piano-16.xpm ../include/piano-64.xpm effects/PianoEffect.h effects/PianoPanel.h RenderBuffer.h UtilClasses.h UtilFunctions.h sequencer/Effect.h xLightsXmlFile.h models/Model.h

effects/OnEffect.cpp: ../include/On.xpm effects/OnEffect.h effects/OnPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h UtilFunctions.h Parallel.h

effects/OffPanel.cpp: effects/OffPanel.h

effects/OffPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/OffEffect.cpp: effects/OffEffect.h effects/OffPanel.h RenderBuffer.h UtilFunctions.h models/Model.h ../include/Off.xpm

effects/OffEffect.h: effects/RenderableEffect.h

effects/MusicPanel.cpp: effects/MusicPanel.h effects/EffectPanelUtils.h effects/MusicEffect.h UtilFunctions.h

WiringDialog.cpp: WiringDialog.h models/Model.h UtilFunctions.h

VsaImportDialog.cpp: VsaImportDialog.h sequencer/SequenceElements.h xLightsMain.h models/Model.h VSAFile.h support/FastComboEditor.h support/GridCellChoiceRenderer.h support/EzGrid.h UtilFunctions.h

Vixen3.cpp: Vixen3.h ExternalHooks.h

ViewsModelsPanel.cpp: ../include/model-16.xpm ../include/timing-16.xpm ../include/eye-16.xpm ../include/eye-16_gray.xpm ViewsModelsPanel.h sequencer/SequenceElements.h xLightsMain.h SequenceViewManager.h UtilFunctions.h

automation/LuaRunner.cpp: xLightsMain.h BatchRenderDialog.h UtilFunctions.h ExternalHooks.h

ViewpointMgr.cpp: ViewpointMgr.h UtilFunctions.h

ViewpointDialog.cpp: ViewpointDialog.h

ViewObjectPanel.cpp: LayoutPanel.h ViewObjectPanel.h UtilFunctions.h models/ViewObject.h xLightsMain.h

VideoReader.cpp: VideoReader.h SpecialOptions.h WindowsHardwareVideoReader.h

controllers/AlphaPix.cpp: models/Model.h outputs/OutputManager.h outputs/Output.h models/ModelManager.h outputs/ControllerEthernet.h UtilFunctions.h

cad/VRMLWriter.cpp: xLightsVersion.h

cad/ModelToCAD.cpp: models/Model.h models/ModelManager.h

VideoExporter.cpp: VideoExporter.h

cad/CADWriter.cpp: UtilFunctions.h

cad/CADModel.cpp: models/Model.h Pixels.h Color.h

automation/xLightsAutomations.cpp: xLightsMain.h xLightsVersion.h FSEQFile.h outputs/Controller.h outputs/ControllerEthernet.h LayoutPanel.h ViewsModelsPanel.h UtilFunctions.h ExternalHooks.h xLightsApp.h JukeboxPanel.h outputs/E131Output.h sequencer/MainSequencer.h ModelPreview.h

automation/automation.cpp: UtilFunctions.h

UtilFunctions.cpp: ExternalHooks.h UtilFunctions.h xLightsVersion.h

UtilClasses.cpp: UtilClasses.h effects/RenderableEffect.h effects/EffectManager.h

UpdaterDialog.cpp: UpdaterDialog.h

TraceLog.cpp: TraceLog.h

TopEffectsPanel.cpp: TopEffectsPanel.h sequencer/EffectDropTarget.h ../include/Off.xpm xLightsMain.h xLightsApp.h sequencer/MainSequencer.h

TipOfTheDayDialog.cpp: TipOfTheDayDialog.h UtilFunctions.h xLightsMain.h CachedFileDownloader.h

TimingPanel.cpp: TimingPanel.h models/Model.h effects/EffectPanelUtils.h LayerSelectDialog.h xLightsMain.h UtilFunctions.h

TempFileManager.cpp: TempFileManager.h

TabSetup.cpp: xLightsMain.h LayoutPanel.h xLightsXmlFile.h sequencer/MainSequencer.h ViewsModelsPanel.h UtilFunctions.h models/Model.h SpecialOptions.h LayoutGroup.h ControllerModelDialog.h ExternalHooks.h outputs/ControllerEthernet.h outputs/ControllerSerial.h outputs/ControllerNull.h outputs/Output.h outputs/NullOutput.h outputs/E131Output.h outputs/ZCPPOutput.h outputs/ArtNetOutput.h outputs/DDPOutput.h outputs/DMXOutput.h outputs/LOROptimisedOutput.h outputs/TwinklyOutput.h Discovery.h

TabSequence.cpp: xLightsMain.h SeqSettingsDialog.h xLightsXmlFile.h effects/RenderableEffect.h models/ModelGroup.h models/SubModel.h SequenceViewManager.h LayoutPanel.h UtilFunctions.h ExternalHooks.h BufferPanel.h EffectIconPanel.h JukeboxPanel.h FindDataPanel.h EffectsPanel.h TimingPanel.h ColorPanel.h LayoutGroup.h ModelPreview.h ViewsModelsPanel.h PerspectivesPanel.h ValueCurvesPanel.h ColoursPanel.h sequencer/MainSequencer.h HousePreviewPanel.h xLightsVersion.h TopEffectsPanel.h

TabPreview.cpp: xLightsMain.h xLightsXmlFile.h ModelPreview.h HousePreviewPanel.h LayoutPanel.h ExternalHooks.h

ValueCurveDialog.cpp: ExternalHooks.h UtilFunctions.h ValueCurve.h ValueCurveDialog.h xLightsApp.h xLightsMain.h xLightsVersion.h sequencer/MainSequencer.h sequencer/SequenceElements.h

VendorMusicHelpers.cpp: VendorMusicHelpers.h CachedFileDownloader.h UtilFunctions.h

VendorMusicDialog.cpp: VendorMusicDialog.h CachedFileDownloader.h UtilFunctions.h xLightsMain.h

VendorModelDialog.cpp: VendorModelDialog.h CachedFileDownloader.h UtilFunctions.h ExternalHooks.h

ValueCurvesPanel.cpp: ValueCurvesPanel.h UtilFunctions.h ValueCurve.h ValueCurveButton.h xLightsApp.h xLightsMain.h ExternalHooks.h

ValueCurveButton.cpp: ValueCurveButton.h

ValueCurve.cpp: ValueCurve.h xLightsVersion.h xLightsMain.h xLightsXmlFile.h UtilFunctions.h AudioManager.h ExternalHooks.h sequencer/SequenceElements.h

VSAFile.cpp: VSAFile.h UtilFunctions.h

VAMPPluginDialog.cpp: VAMPPluginDialog.h UtilFunctions.h xLightsMain.h

effects/ButterflyEffect.cpp: effects/ButterflyEffect.h effects/ButterflyPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/butterfly-16.xpm ../include/butterfly-24.xpm ../include/butterfly_32.xpm ../include/butterfly-48.xpm ../include/butterfly-64.xpm Parallel.h

effects/ButterflyPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/CirclesEffect.cpp: effects/CirclesEffect.h effects/CirclesPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/circles-16.xpm ../include/circles-24.xpm ../include/circles-32.xpm ../include/circles-48.xpm ../include/circles-64.xpm

effects/CirclesEffect.h: effects/RenderableEffect.h

effects/CirclesPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/CandlePanel.cpp: effects/CandlePanel.h effects/EffectPanelUtils.h effects/CandleEffect.h

effects/CandlePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/CandleEffect.h: effects/RenderableEffect.h

effects/CandleEffect.cpp: effects/CandleEffect.h effects/CandlePanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h AudioManager.h models/Model.h UtilFunctions.h Parallel.h ../include/candle-16.xpm ../include/candle-24.xpm ../include/candle-32.xpm ../include/candle-48.xpm ../include/candle-64.xpm

effects/ButterflyPanel.cpp: effects/ButterflyPanel.h effects/EffectPanelUtils.h effects/ButterflyEffect.h

effects/CirclesPanel.cpp: effects/CirclesPanel.h effects/EffectPanelUtils.h effects/CirclesEffect.h

effects/BarsPanel.cpp: effects/BarsPanel.h effects/EffectPanelUtils.h effects/BarsEffect.h

effects/BarsPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/BarsEffect.cpp: effects/BarsEffect.h effects/BarsPanel.h RenderBuffer.h UtilClasses.h sequencer/Effect.h ../include/bars-16.xpm ../include/bars-24.xpm ../include/bars-32.xpm ../include/bars-48.xpm ../include/bars-64.xpm

effects/AdjustPanel.cpp: effects/AdjustPanel.h effects/AdjustEffect.h effects/EffectPanelUtils.h UtilFunctions.h

effects/AdjustPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/AdjustEffect.h: effects/RenderableEffect.h UtilFunctions.h

effects/EffectManager.cpp: effects/EffectManager.h effects/OffEffect.h effects/OnEffect.h effects/AdjustEffect.h effects/BarsEffect.h effects/ButterflyEffect.h effects/CandleEffect.h effects/CirclesEffect.h effects/ColorWashEffect.h effects/CurtainEffect.h effects/DMXEffect.h effects/DuplicateEffect.h effects/FacesEffect.h effects/FanEffect.h effects/FillEffect.h effects/FireEffect.h effects/FireworksEffect.h effects/GalaxyEffect.h effects/GarlandsEffect.h effects/GlediatorEffect.h effects/GuitarEffect.h effects/KaleidoscopeEffect.h effects/LifeEffect.h effects/LightningEffect.h effects/LinesEffect.h effects/LiquidEffect.h effects/MarqueeEffect.h effects/MeteorsEffect.h effects/MorphEffect.h effects/MovingHeadEffect.h effects/MusicEffect.h effects/PianoEffect.h effects/PicturesEffect.h effects/PinwheelEffect.h effects/PlasmaEffect.h effects/RenderableEffect.h effects/RippleEffect.h effects/ServoEffect.h effects/ShaderEffect.h effects/ShapeEffect.h effects/ShimmerEffect.h effects/ShockwaveEffect.h effects/SingleStrandEffect.h effects/SketchEffect.h effects/SnowflakesEffect.h effects/SnowstormEffect.h effects/SpiralsEffect.h effects/SpirographEffect.h effects/StateEffect.h effects/StrobeEffect.h effects/TendrilEffect.h effects/TextEffect.h effects/TreeEffect.h effects/TwinkleEffect.h effects/VideoEffect.h effects/VUMeterEffect.h effects/WarpEffect.h effects/WaveEffect.h

effects/ColorWashEffect.h: effects/RenderableEffect.h

effects/DuplicateEffect.h: effects/RenderableEffect.h

effects/DuplicatePanel.cpp: effects/DuplicatePanel.h effects/DuplicateEffect.h

effects/DuplicatePanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/DuplicateEffect.cpp: effects/DuplicateEffect.h effects/DuplicatePanel.h RenderBuffer.h UtilFunctions.h models/Model.h models/ModelManager.h xLightsMain.h sequencer/SequenceElements.h xLightsApp.h ../include/Duplicate_64.xpm ../include/Duplicate_48.xpm ../include/Duplicate_32.xpm ../include/Duplicate_24.xpm ../include/Duplicate_16.xpm

effects/DMXPanel.cpp: effects/DMXPanel.h effects/DMXEffect.h xLightsMain.h sequencer/MainSequencer.h sequencer/Effect.h sequencer/Element.h models/ModelGroup.h RemapDMXChannelsDialog.h xLightsApp.h effects/EffectPanelUtils.h UtilFunctions.h

effects/DMXPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/DMXEffect.cpp: effects/DMXEffect.h effects/DMXPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h models/ModelGroup.h ../include/dmx-16.xpm ../include/dmx-24.xpm ../include/dmx-32.xpm ../include/dmx-48.xpm ../include/dmx-64.xpm UtilFunctions.h

effects/AdjustEffect.cpp: effects/AdjustEffect.h effects/AdjustPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h models/Model.h models/ModelGroup.h xLightsApp.h xLightsMain.h TimingPanel.h ../include/adjust16.xpm ../include/adjust24.xpm ../include/adjust32.xpm ../include/adjust48.xpm ../include/adjust64.xpm UtilFunctions.h

effects/CurtainPanel.cpp: effects/CurtainPanel.h effects/EffectPanelUtils.h effects/CurtainEffect.h

effects/CurtainPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/CurtainEffect.cpp: effects/CurtainEffect.h effects/CurtainPanel.h sequencer/Effect.h RenderBuffer.h UtilClasses.h ../include/curtain-16.xpm ../include/curtain-24.xpm ../include/curtain-32.xpm ../include/curtain-48.xpm ../include/curtain-64.xpm

effects/ColorWashPanel.cpp: effects/ColorWashPanel.h effects/ColorWashEffect.h

effects/ColorWashPanel.h: BulkEditControls.h effects/EffectPanelUtils.h

effects/ColorWashEffect.cpp: effects/ColorWashEffect.h effects/ColorWashPanel.h sequencer/Effect.h sequencer/EffectLayer.h sequencer/Element.h RenderBuffer.h UtilClasses.h ../include/ColorWash.xpm

controllers/Experience.cpp: UtilFunctions.h models/Model.h models/ModelManager.h outputs/ControllerEthernet.h outputs/Output.h outputs/OutputManager.h outputs/DDPOutput.h

controllers/Falcon.cpp: outputs/Output.h outputs/OutputManager.h models/Model.h models/ModelManager.h UtilFunctions.h outputs/ControllerEthernet.h outputs/DDPOutput.h

controllers/FPPConnectDialog.cpp: xLightsMain.h xLightsXmlFile.h outputs/Output.h outputs/OutputManager.h UtilFunctions.h ExternalHooks.h outputs/ControllerEthernet.h ModelPreview.h FSEQFile.h Parallel.h Discovery.h

controllers/FPP.cpp: ../include/zstd.h models/CustomModel.h models/Model.h models/MatrixModel.h outputs/OutputManager.h outputs/Output.h outputs/E131Output.h outputs/DDPOutput.h outputs/ArtNetOutput.h outputs/KinetOutput.h outputs/TwinklyOutput.h outputs/ControllerEthernet.h outputs/ControllerSerial.h UtilFunctions.h xLightsVersion.h Parallel.h ExternalHooks.h TempFileManager.h FSEQFile.h Discovery.h TraceLog.h

controllers/HinksPix.cpp: UtilFunctions.h models/Model.h models/ModelManager.h outputs/ControllerEthernet.h outputs/Output.h outputs/OutputManager.h

controllers/ESPixelStick.cpp: models/Model.h outputs/OutputManager.h outputs/Output.h outputs/DDPOutput.h models/ModelManager.h UtilFunctions.h outputs/ControllerEthernet.h

controllers/ControllerUploadData.cpp: outputs/Output.h outputs/OutputManager.h models/ModelManager.h models/Model.h outputs/ControllerEthernet.h UtilFunctions.h Pixels.h

controllers/ControllerCaps.cpp: UtilFunctions.h ExternalHooks.h outputs/Controller.h

controllers/BaseController.cpp: outputs/OutputManager.h models/ModelManager.h outputs/ControllerEthernet.h

controllers/WLED.cpp: models/Model.h outputs/OutputManager.h outputs/Output.h outputs/DDPOutput.h models/ModelManager.h outputs/ControllerEthernet.h UtilFunctions.h

controllers/SanDevices.cpp: models/Model.h outputs/OutputManager.h outputs/Output.h models/ModelManager.h outputs/ControllerEthernet.h UtilFunctions.h

controllers/Pixlite16.cpp: outputs/OutputManager.h outputs/Output.h UtilFunctions.h outputs/ControllerEthernet.h Discovery.h

../common/xlBaseApp.cpp: ExternalHooks.h xLightsVersion.h

controllers/Minleon.cpp: models/Model.h outputs/OutputManager.h outputs/Output.h outputs/DDPOutput.h models/ModelManager.h outputs/ControllerEthernet.h UtilFunctions.h

controllers/J1Sys.cpp: UtilFunctions.h outputs/ControllerEthernet.h models/Model.h outputs/OutputManager.h outputs/Output.h models/ModelManager.h

controllers/ILightThat.cpp: UtilFunctions.h models/Model.h models/ModelManager.h outputs/ControllerEthernet.h outputs/DDPOutput.h outputs/Output.h outputs/OutputManager.h

controllers/HinksPixExportDialog.cpp: AudioManager.h ExternalHooks.h UtilFunctions.h xLightsMain.h xLightsXmlFile.h outputs/ControllerEthernet.h models/ModelManager.h outputs/Output.h outputs/OutputManager.h

.PHONY: before_linux_debug after_linux_debug clean_linux_debug before_linux_release after_linux_release clean_linux_release

